{"ast":null,"code":"import{InAppBrowser}from\"@ionic-native/in-app-browser\";import*as reduxActions from\"../redux/actions/AllActions\";import Store from\"../redux/Store\";import*as apiBaseUrl from\"../util/EndPointURL\";import{platformDependentOption}from\"./Common\";import*as HttpRequest from\"./HttpsServices\";var txnIds;var ref;export async function postToExternalSite(url,txnId){var rosoomStatus;txnIds=txnId;var paymentCompl;ref=InAppBrowser.create(url,\"_self\",platformDependentOption);ref.on(\"loadstart\").subscribe(event=>{//checkPaymentSuccess(event.url, txnId);\n});var result=ref.on(\"loadstop\").subscribe(async event=>{paymentCompl=await checkPaymentSuccess(event.url,txnId);if(paymentCompl){return await paymentCompl;}else{}});ref.on(\"loaderror\").subscribe(res=>{//alert(\"loaderror in response section\")\n//checkPaymentStatus(txnId);\n//ref.close();\n},err=>{// //alert(\"loaderror in error section\")\n// ref.close();\n});ref.on(\"exit\").subscribe(async()=>{console.log(\"exxxxxxiiiitt\");checkPaymentStatus(txnId);//await console.log(\"***************\", roStatus);\n},err=>{console.log(err);});//checkPaymentStatus(txnId);\n//rosoomStatus = await closeBrowser(txnId);\nreturn await result;}function until(condition){return new Promise(resolve=>{const interval=setInterval(()=>{if(condition()){clearInterval(interval);resolve();}});return true;});}async function checkPaymentSuccess(url,txnId){console.log('Waiting until foo reaches 1337 ...');await until(()=>url.includes(\"/mobileResponseFromRosoomPaymentApp\"));console.log('url === yes... same');//if (url.includes(\"/mobileResponseFromRosoomPaymentApp\")) {\nref.close();//if(paymentCompl){\nvar roStatus;var roStatus=await ref.on(\"exit\").subscribe(async()=>{//await console.log(\"***************\", roStatus);\n//await checkPaymentStatus(txnId);\n},err=>{console.log(err);});var test=await checkPaymentStatus(txnId);return await test;// await console.log(\"***************^^^^^^^^\", await roStatus);\n// return await roStatus;\n//}\n// return true;\n// } else {\n//   return false;\n// }\n}async function checkPaymentStatus(txnId){var rosoomStatus;var rosoomPaymentStatusCheckUrl=apiBaseUrl.rosoomPaymentStatusCheck+txnId;var data={url:rosoomPaymentStatusCheckUrl,callType:\"get\",header:{}};rosoomStatus=await HttpRequest.HttpGetRequest(data).then(async result=>{var _result$data,_result$data$data,_result$data$data$dat;//setReferenceNumber(result.data.data.dataItems[0].referenceNumber);\n//setPaymentFooter(true);\nvar paymentStatus;let reference_num=result===null||result===void 0?void 0:(_result$data=result.data)===null||_result$data===void 0?void 0:(_result$data$data=_result$data.data)===null||_result$data$data===void 0?void 0:(_result$data$data$dat=_result$data$data.dataItems[0])===null||_result$data$data$dat===void 0?void 0:_result$data$data$dat.referenceNumber;console.log(\"effffffffff**(*(&(*&(&(&(*(*&(*&(*\",result);if(result.data.data.dataItems[0].status===\"SUCC\"){console.log(\"suuuucceesssssss\");paymentStatus={status:\"SUCC\",reference_num:reference_num};// setSuccessPayment(true);\n// ClearReduxStore();\n}else if(result.data.data.dataItems[0].status===\"FAIL\"){console.log(\"Faaaaaaaiiiiilllllll\");paymentStatus={status:\"FAIL\",reference_num:reference_num};//setFailurePayment(true);\n}else{console.log(\"Pennnnddddiiinnngg\");paymentStatus={status:\"PEND\",reference_num:reference_num};// setPendingPayment(true);\n// ClearReduxStore();\n}var updatePaymentStat=await reduxActions.updatePaymentStatus(paymentStatus);if(updatePaymentStat)Store.dispatch(updatePaymentStat);return result;});return rosoomStatus;}","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/services/PaymentService.ts"],"names":["InAppBrowser","reduxActions","Store","apiBaseUrl","platformDependentOption","HttpRequest","txnIds","ref","postToExternalSite","url","txnId","rosoomStatus","paymentCompl","create","on","subscribe","event","result","checkPaymentSuccess","res","err","console","log","checkPaymentStatus","until","condition","Promise","resolve","interval","setInterval","clearInterval","includes","close","roStatus","test","rosoomPaymentStatusCheckUrl","rosoomPaymentStatusCheck","data","callType","header","HttpGetRequest","then","paymentStatus","reference_num","dataItems","referenceNumber","status","updatePaymentStat","updatePaymentStatus","dispatch"],"mappings":"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","sourcesContent":["import { InAppBrowser } from \"@ionic-native/in-app-browser\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport Store from \"../redux/Store\";\r\nimport * as apiBaseUrl from \"../util/EndPointURL\";\r\nimport { platformDependentOption } from \"./Common\";\r\nimport * as HttpRequest from \"./HttpsServices\";\r\n\r\nvar txnIds;\r\nvar ref;\r\nexport async function postToExternalSite(url, txnId) {\r\n    var rosoomStatus;\r\n    txnIds = txnId;\r\n    var paymentCompl;\r\n    ref = InAppBrowser.create(url, \"_self\", platformDependentOption);\r\n\r\n    ref.on(\"loadstart\").subscribe((event) => {\r\n      //checkPaymentSuccess(event.url, txnId);\r\n    });\r\n\r\n    var result = ref.on(\"loadstop\").subscribe(async (event) => {\r\n      paymentCompl = await checkPaymentSuccess(event.url, txnId);\r\n      if (paymentCompl) {\r\n        return await paymentCompl;\r\n      } else {\r\n      }\r\n    });\r\n    ref.on(\"loaderror\").subscribe(\r\n      (res) => {\r\n        //alert(\"loaderror in response section\")\r\n        //checkPaymentStatus(txnId);\r\n        //ref.close();\r\n      },\r\n      (err) => {\r\n        // //alert(\"loaderror in error section\")\r\n        // ref.close();\r\n      }\r\n    );\r\n\r\n    ref.on(\"exit\").subscribe(\r\n      async () => {\r\n        console.log(\"exxxxxxiiiitt\");\r\n        checkPaymentStatus(txnId);\r\n        //await console.log(\"***************\", roStatus);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n    //checkPaymentStatus(txnId);\r\n\r\n    //rosoomStatus = await closeBrowser(txnId);\r\n    return await result;\r\n  }\r\n\r\n  function until(condition) {\r\n    return new Promise<void>((resolve) => {\r\n      const interval = setInterval(() => {\r\n        if (condition()) {\r\n          clearInterval(interval);\r\n          resolve();\r\n        }\r\n      });\r\n      return true\r\n    });\r\n  }\r\n\r\n  async function checkPaymentSuccess(url, txnId) {\r\n  console.log('Waiting until foo reaches 1337 ...');\r\n  await until(() => url.includes(\"/mobileResponseFromRosoomPaymentApp\"));\r\n  console.log('url === yes... same' );\r\n    //if (url.includes(\"/mobileResponseFromRosoomPaymentApp\")) {\r\n      ref.close();\r\n      //if(paymentCompl){\r\n      var roStatus;\r\n      var roStatus = await ref.on(\"exit\").subscribe(\r\n        async () => {\r\n          //await console.log(\"***************\", roStatus);\r\n          //await checkPaymentStatus(txnId);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n     \r\n      var test = await checkPaymentStatus(txnId);\r\n      return await test;\r\n      // await console.log(\"***************^^^^^^^^\", await roStatus);\r\n      // return await roStatus;\r\n      //}\r\n      // return true;\r\n   // } else {\r\n   //   return false;\r\n   // }\r\n  }\r\n\r\n   async function checkPaymentStatus(txnId) {\r\n    var rosoomStatus;\r\n    var rosoomPaymentStatusCheckUrl =\r\n    apiBaseUrl.rosoomPaymentStatusCheck + txnId;\r\n    var data = {\r\n      url: rosoomPaymentStatusCheckUrl,\r\n      callType: \"get\",\r\n      header: {},\r\n    };\r\n    rosoomStatus = await HttpRequest.HttpGetRequest(data).then(\r\n      async (result) => {\r\n        //setReferenceNumber(result.data.data.dataItems[0].referenceNumber);\r\n        //setPaymentFooter(true);\r\n        var paymentStatus;\r\n         let reference_num=result?.data?.data?.dataItems[0]?.referenceNumber\r\n         console.log(\"effffffffff**(*(&(*&(&(&(*(*&(*&(*\",result)\r\n        if (result.data.data.dataItems[0].status === \"SUCC\") {\r\n          console.log(\"suuuucceesssssss\");\r\n           paymentStatus= { status: \"SUCC\", reference_num: reference_num }\r\n         // setSuccessPayment(true);\r\n          // ClearReduxStore();\r\n        } else if (result.data.data.dataItems[0].status === \"FAIL\") {\r\n          console.log(\"Faaaaaaaiiiiilllllll\");\r\n          paymentStatus= { status: \"FAIL\", reference_num: reference_num }\r\n          //setFailurePayment(true);\r\n        } else {\r\n          console.log(\"Pennnnddddiiinnngg\");\r\n          paymentStatus= { status: \"PEND\", reference_num: reference_num }\r\n         // setPendingPayment(true);\r\n          // ClearReduxStore();\r\n        }\r\n        var updatePaymentStat = await reduxActions.updatePaymentStatus(\r\n          paymentStatus\r\n        );\r\n        if (updatePaymentStat) Store.dispatch(updatePaymentStat);\r\n        return result;\r\n      }\r\n    );\r\n    return rosoomStatus;\r\n  }"]},"metadata":{},"sourceType":"module"}