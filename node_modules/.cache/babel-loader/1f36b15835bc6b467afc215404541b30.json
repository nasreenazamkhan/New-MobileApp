{"ast":null,"code":"import{calendarTodayDate}from\"../../services/Common\";import*as LoginUserTypes from\"../actionTypes/AllActionTypes\";var initialState={containerList:[],multiLocAndTime:false,dropDiffTimeDate:false,truckNumber:\"1\",date_time:calendarTodayDate,dropInterval:0};const TruckBook=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LoginUserTypes.ADD_TO_BOOK_TRUCK:var updatedState={...state};updatedState=action.payLoad;return updatedState;case LoginUserTypes.BOOK_TRUCK_SINGLE_LOCATION:state.containerList=action.payLoad;state.multiLocAndTime=false;return state;case LoginUserTypes.BOOK_TRUCK_UPDATE_ADDRESS:var updatedState={...state};updatedState.containerList.forEach((element,index)=>{updatedState.containerList[index]={...element,...action.payLoad};});return updatedState;case LoginUserTypes.BOOK_TRUCK_UPDATE_OTHER_DATA:var updatedState={...state};updatedState.containerList.forEach((element,index)=>{if(element.container_number===action.payLoad.containerNumber){updatedState.containerList[index]={...element,...action.payLoad.element};}});return updatedState;case LoginUserTypes.BOOK_TRUCK_UPDATE_COMMON_DATA:var updatedState={...state};updatedState={...updatedState,...action.payLoad};return updatedState;case LoginUserTypes.REMOVE_CONTAINER_TRUCK_BOOK:var updatedState={...state};updatedState.containerList=updatedState.containerList.filter(i=>i.container_number!==action.payLoad);return updatedState;case LoginUserTypes.BOOK_TRUCK_CLEAR:return initialState;default:return state;}};export default TruckBook;","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/redux/reducers/TruckBook.tsx"],"names":["calendarTodayDate","LoginUserTypes","initialState","containerList","multiLocAndTime","dropDiffTimeDate","truckNumber","date_time","dropInterval","TruckBook","state","action","type","ADD_TO_BOOK_TRUCK","updatedState","payLoad","BOOK_TRUCK_SINGLE_LOCATION","BOOK_TRUCK_UPDATE_ADDRESS","forEach","element","index","BOOK_TRUCK_UPDATE_OTHER_DATA","container_number","containerNumber","BOOK_TRUCK_UPDATE_COMMON_DATA","REMOVE_CONTAINER_TRUCK_BOOK","filter","i","BOOK_TRUCK_CLEAR"],"mappings":"AAAA,OAASA,iBAAT,KAA6C,uBAA7C,CACA,MAAO,GAAKC,CAAAA,cAAZ,KAAgC,+BAAhC,CACA,GAAIC,CAAAA,YAAY,CAAG,CACjBC,aAAa,CAAE,EADE,CAEjBC,eAAe,CAAE,KAFA,CAGjBC,gBAAgB,CAAE,KAHD,CAIjBC,WAAW,CAAE,GAJI,CAKjBC,SAAS,CAAEP,iBALM,CAMjBQ,YAAY,CAAE,CANG,CAAnB,CASA,KAAMC,CAAAA,SAAS,CAAG,UAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBR,YAAyB,IAAXS,CAAAA,MAAW,2CAClD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKX,CAAAA,cAAc,CAACY,iBAApB,CACE,GAAIC,CAAAA,YAAY,CAAG,CAAE,GAAGJ,KAAL,CAAnB,CACAI,YAAY,CAAGH,MAAM,CAACI,OAAtB,CACA,MAAOD,CAAAA,YAAP,CACF,IAAKb,CAAAA,cAAc,CAACe,0BAApB,CACEN,KAAK,CAACP,aAAN,CAAsBQ,MAAM,CAACI,OAA7B,CACAL,KAAK,CAACN,eAAN,CAAwB,KAAxB,CACA,MAAOM,CAAAA,KAAP,CACF,IAAKT,CAAAA,cAAc,CAACgB,yBAApB,CACE,GAAIH,CAAAA,YAAY,CAAG,CAAE,GAAGJ,KAAL,CAAnB,CACAI,YAAY,CAACX,aAAb,CAA2Be,OAA3B,CAAmC,CAACC,OAAD,CAAUC,KAAV,GAAoB,CACrDN,YAAY,CAACX,aAAb,CAA2BiB,KAA3B,EAAoC,CAAE,GAAGD,OAAL,CAAc,GAAGR,MAAM,CAACI,OAAxB,CAApC,CACD,CAFD,EAGA,MAAOD,CAAAA,YAAP,CAEF,IAAKb,CAAAA,cAAc,CAACoB,4BAApB,CACE,GAAIP,CAAAA,YAAY,CAAG,CAAE,GAAGJ,KAAL,CAAnB,CACAI,YAAY,CAACX,aAAb,CAA2Be,OAA3B,CAAmC,CAACC,OAAD,CAAUC,KAAV,GAAoB,CACrD,GAAID,OAAO,CAACG,gBAAR,GAA6BX,MAAM,CAACI,OAAP,CAAeQ,eAAhD,CAAiE,CAC/DT,YAAY,CAACX,aAAb,CAA2BiB,KAA3B,EAAoC,CAClC,GAAGD,OAD+B,CAElC,GAAGR,MAAM,CAACI,OAAP,CAAeI,OAFgB,CAApC,CAID,CACF,CAPD,EAQA,MAAOL,CAAAA,YAAP,CAEF,IAAKb,CAAAA,cAAc,CAACuB,6BAApB,CACE,GAAIV,CAAAA,YAAY,CAAG,CAAE,GAAGJ,KAAL,CAAnB,CACAI,YAAY,CAAG,CACb,GAAGA,YADU,CAEb,GAAGH,MAAM,CAACI,OAFG,CAAf,CAIA,MAAOD,CAAAA,YAAP,CACF,IAAKb,CAAAA,cAAc,CAACwB,2BAApB,CACE,GAAIX,CAAAA,YAAY,CAAG,CAAE,GAAGJ,KAAL,CAAnB,CACAI,YAAY,CAACX,aAAb,CAA6BW,YAAY,CAACX,aAAb,CAA2BuB,MAA3B,CAC1BC,CAAD,EAAOA,CAAC,CAACL,gBAAF,GAAuBX,MAAM,CAACI,OADV,CAA7B,CAGA,MAAOD,CAAAA,YAAP,CACF,IAAKb,CAAAA,cAAc,CAAC2B,gBAApB,CACE,MAAO1B,CAAAA,YAAP,CACF,QACE,MAAOQ,CAAAA,KAAP,CA5CJ,CA8CD,CA/CD,CAiDA,cAAeD,CAAAA,SAAf","sourcesContent":["import { calendarTodayDate, todayDate } from \"../../services/Common\";\nimport * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\nvar initialState = {\n  containerList: [],\n  multiLocAndTime: false,\n  dropDiffTimeDate: false,\n  truckNumber: \"1\",\n  date_time: calendarTodayDate,\n  dropInterval: 0,\n};\n\nconst TruckBook = (state = initialState, action) => {\n  switch (action.type) {\n    case LoginUserTypes.ADD_TO_BOOK_TRUCK:\n      var updatedState = { ...state };\n      updatedState = action.payLoad;\n      return updatedState;\n    case LoginUserTypes.BOOK_TRUCK_SINGLE_LOCATION:\n      state.containerList = action.payLoad;\n      state.multiLocAndTime = false;\n      return state;\n    case LoginUserTypes.BOOK_TRUCK_UPDATE_ADDRESS:\n      var updatedState = { ...state };\n      updatedState.containerList.forEach((element, index) => {\n        updatedState.containerList[index] = { ...element, ...action.payLoad };\n      });\n      return updatedState;\n\n    case LoginUserTypes.BOOK_TRUCK_UPDATE_OTHER_DATA:\n      var updatedState = { ...state };\n      updatedState.containerList.forEach((element, index) => {\n        if (element.container_number === action.payLoad.containerNumber) {\n          updatedState.containerList[index] = {\n            ...element,\n            ...action.payLoad.element,\n          };\n        }\n      });\n      return updatedState;\n\n    case LoginUserTypes.BOOK_TRUCK_UPDATE_COMMON_DATA:\n      var updatedState = { ...state };\n      updatedState = {\n        ...updatedState,\n        ...action.payLoad,\n      };\n      return updatedState;\n    case LoginUserTypes.REMOVE_CONTAINER_TRUCK_BOOK:\n      var updatedState = { ...state };\n      updatedState.containerList = updatedState.containerList.filter(\n        (i) => i.container_number !== action.payLoad\n      );\n      return updatedState;\n    case LoginUserTypes.BOOK_TRUCK_CLEAR:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default TruckBook;\n"]},"metadata":{},"sourceType":"module"}