{"ast":null,"code":"import{REGEX_MAP}from\"./Constants\";const milliseconds=(h,m,s)=>(h*60*60+m*60+s)*1000;var disabledHr;export const isEmpty=data=>{if(data===null){data=\"\";}return data.trim()===\"\";};export const isValid=(dataType,data,delimiter)=>{if(delimiter){data=data.replaceAll(delimiter,\"\");}return new RegExp(REGEX_MAP[dataType]).test(data);};export const getPatternValue=(data,pattern,delimiter)=>{if(!data||!pattern||!delimiter){return data;}var cleaned=data.replaceAll(\" \",\"\").replaceAll(delimiter,\"\");let finalstr=\"\";let ctr=0;for(let i=0;i<pattern.length&&ctr<cleaned.length;i++){if(pattern[i]!=delimiter){finalstr=finalstr+cleaned[ctr];ctr=ctr+1;}else{finalstr=finalstr+delimiter;}}return finalstr;};export const stringToColour=function(str){var hash=0;for(var i=0;i<str.length;i++){hash=str.charCodeAt(i)+((hash<<5)-hash);}var colour='#';for(var i=0;i<3;i++){var value=hash>>i*8&0xFF;colour+=('00'+value.toString(16)).substr(-2);}return colour;};export const validateEmail=mail=>{return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);};export const validatePhone=number=>{let regexp=new RegExp(\"^\\\\d{8}$\");var nameTest=regexp.test(number);return nameTest;};export const validateMobile=(number,length)=>{let regexp=new RegExp(\"^\\\\d{\"+length+\"}$\");var nameTest=regexp.test(number);return nameTest;};export function addTimeToDateTime(date,timeToAdd){var d2=new Date(date);return new Date(d2.setMinutes(date.getMinutes()+timeToAdd));//return updatedDate;\n}export function setDisabledMinHr(disableHr){//testFun(testContent);\nvar disabledTime=addTimeToDateTime(new Date(),1*disableHr*60||1);disabledHr=disabledTime.toISOString();return disabledHr;}export function getDisabledMinHr(){return disabledHr;}export const convertToMillSeconds=interval=>{let timeParts=interval.split(\":\");let result=milliseconds(timeParts[0],timeParts[1],0);// days\nreturn result;};","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/util/Utilities.ts"],"names":["REGEX_MAP","milliseconds","h","m","s","disabledHr","isEmpty","data","trim","isValid","dataType","delimiter","replaceAll","RegExp","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","length","stringToColour","str","hash","charCodeAt","colour","value","toString","substr","validateEmail","mail","validatePhone","number","regexp","nameTest","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","setDisabledMinHr","disableHr","disabledTime","toISOString","getDisabledMinHr","convertToMillSeconds","interval","timeParts","split","result"],"mappings":"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","sourcesContent":["import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number,length) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{\"+length+\"}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}