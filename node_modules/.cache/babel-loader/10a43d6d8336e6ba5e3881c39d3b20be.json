{"ast":null,"code":"import{IonLabel,IonSelect,IonSelectOption,IonText}from\"@ionic/react\";import React,{useEffect,useState}from\"react\";import\"./DrpdownInput.scss\";import{useHistory}from\"react-router-dom\";const DrpdownInput=_ref=>{let{label,name,value,onChange,errors,description,placeholder,listValues,disabled,selectedName,type}=_ref;// const [selectedName, setselectedName] = useState();\nconst[valueD,setValueD]=useState({});let history=useHistory();useEffect(()=>{setValueD({label:selectedName,value:value});},[]);const onInpChange=e=>{let val=e.target.value;setValueD(val);if(val===\"addAddress\"){history.push(\"/addAddress\");}else{onChange(e,val);}};const options={cssClass:\"my-custom-interface\"};return/*#__PURE__*/React.createElement(\"div\",{className:\"form-element-group\"},/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(\"legend\",null,label),/*#__PURE__*/React.createElement(IonSelect// selectedText={selectedName}\n,{name:name,placeholder:placeholder,value:value||valueD,onIonChange:onInpChange,\"cancel-text\":true,interface:\"popover\",className:\"dropdownInput\",interfaceOptions:options},type===\"address\"&&/*#__PURE__*/React.createElement(IonSelectOption,{value:\"addAddress\",class:\"selectAddAddr\"},\"Add new Address\",/*#__PURE__*/React.createElement(\"img\",{src:\"/assets/icon/eye.svg\"})),listValues===null||listValues===void 0?void 0:listValues.map((item,index)=>type===\"address\"?/*#__PURE__*/React.createElement(IonSelectOption,{key:index,value:item},item.dropAddress,item.consigneeName,\" \",item.dropAddress,item.email):/*#__PURE__*/React.createElement(IonSelectOption,{key:index,value:item.value},item.label)))),/*#__PURE__*/React.createElement(\"div\",{className:\"\"},errors&&/*#__PURE__*/React.createElement(IonText,{color:\"danger\",className:\"validation-message\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"ion-padding-start\"},errors))),/*#__PURE__*/React.createElement(IonText,{color:\"danger\",className:\"validation-message\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"ion-padding-start\"},description)));};export default DrpdownInput;","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/components/dropdownInput/DrpdownInput.tsx"],"names":["IonLabel","IonSelect","IonSelectOption","IonText","React","useEffect","useState","useHistory","DrpdownInput","label","name","value","onChange","errors","description","placeholder","listValues","disabled","selectedName","type","valueD","setValueD","history","onInpChange","e","val","target","push","options","cssClass","map","item","index","dropAddress","consigneeName","email"],"mappings":"AAAA,OAEEA,QAFF,CAGEC,SAHF,CAIEC,eAJF,CAKEC,OALF,KAMO,cANP,CAQA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,qBAAP,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAoBA,KAAMC,CAAAA,YAAyC,CAAG,MAY5C,IAZ6C,CACjDC,KADiD,CAEjDC,IAFiD,CAGjDC,KAHiD,CAIjDC,QAJiD,CAKjDC,MALiD,CAMjDC,WANiD,CAOjDC,WAPiD,CAQjDC,UARiD,CASjDC,QATiD,CAUjDC,YAViD,CAWjDC,IAXiD,CAY7C,MACJ;AACA,KAAM,CAACC,MAAD,CAASC,SAAT,EAAsBf,QAAQ,CAAC,EAAD,CAApC,CACA,GAAIgB,CAAAA,OAAO,CAAGf,UAAU,EAAxB,CACAF,SAAS,CAAC,IAAM,CACdgB,SAAS,CAAC,CAAEZ,KAAK,CAAES,YAAT,CAAuBP,KAAK,CAAEA,KAA9B,CAAD,CAAT,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,KAAMY,CAAAA,WAAW,CAAIC,CAAD,EAAO,CACzB,GAAIC,CAAAA,GAAG,CAAGD,CAAC,CAACE,MAAF,CAASf,KAAnB,CACAU,SAAS,CAACI,GAAD,CAAT,CACA,GAAIA,GAAG,GAAK,YAAZ,CAA0B,CACxBH,OAAO,CAACK,IAAR,CAAa,aAAb,EACD,CAFD,IAEO,CACLf,QAAQ,CAACY,CAAD,CAAIC,GAAJ,CAAR,CACD,CACF,CARD,CAUA,KAAMG,CAAAA,OAAO,CAAG,CACdC,QAAQ,CAAE,qBADI,CAAhB,CAIA,mBACE,2BAAK,SAAS,CAAC,oBAAf,eACE,iDACE,kCAASpB,KAAT,CADF,cAEE,oBAAC,SACC;AADF,EAEE,IAAI,CAAEC,IAFR,CAGE,WAAW,CAAEK,WAHf,CAIE,KAAK,CAAEJ,KAAK,EAAIS,MAJlB,CAKE,WAAW,CAAEG,WALf,CAME,kBANF,CAOE,SAAS,CAAC,SAPZ,CAQE,SAAS,CAAC,eARZ,CASE,gBAAgB,CAAEK,OATpB,EAWGT,IAAI,GAAK,SAAT,eACC,oBAAC,eAAD,EAAiB,KAAK,CAAC,YAAvB,CAAoC,KAAK,CAAC,eAA1C,iCAGE,2BAAK,GAAG,CAAC,sBAAT,EAHF,CAZJ,CAkBGH,UAlBH,SAkBGA,UAlBH,iBAkBGA,UAAU,CAAEc,GAAZ,CAAgB,CAACC,IAAD,CAAOC,KAAP,GACfb,IAAI,GAAK,SAAT,cACE,oBAAC,eAAD,EAAiB,GAAG,CAAEa,KAAtB,CAA6B,KAAK,CAAED,IAApC,EACGA,IAAI,CAACE,WADR,CAEGF,IAAI,CAACG,aAFR,KAEwBH,IAAI,CAACE,WAF7B,CAGGF,IAAI,CAACI,KAHR,CADF,cAOE,oBAAC,eAAD,EAAiB,GAAG,CAAEH,KAAtB,CAA6B,KAAK,CAAED,IAAI,CAACpB,KAAzC,EACGoB,IAAI,CAACtB,KADR,CARH,CAlBH,CAFF,CADF,cAqCE,2BAAK,SAAS,CAAC,EAAf,EACGI,MAAM,eACL,oBAAC,OAAD,EAAS,KAAK,CAAC,QAAf,CAAwB,SAAS,CAAC,oBAAlC,eACE,oBAAC,QAAD,EAAU,SAAS,CAAC,mBAApB,EAAyCA,MAAzC,CADF,CAFJ,CArCF,cA6CE,oBAAC,OAAD,EAAS,KAAK,CAAC,QAAf,CAAwB,SAAS,CAAC,oBAAlC,eACE,oBAAC,QAAD,EAAU,SAAS,CAAC,mBAApB,EAAyCC,WAAzC,CADF,CA7CF,CADF,CAoDD,CAtFD,CAwFA,cAAeN,CAAAA,YAAf","sourcesContent":["import {\r\n  IonIcon,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { addCircle } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./DrpdownInput.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface DrpDownInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type?: any;\r\n  value?: any;\r\n  onChange: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: any;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  listValues?: Array<any>;\r\n  disabled?: any;\r\n  selectedName?: any;\r\n}\r\nconst DrpdownInput: React.FC<DrpDownInputProps> = ({\r\n  label,\r\n  name,\r\n  value,\r\n  onChange,\r\n  errors,\r\n  description,\r\n  placeholder,\r\n  listValues,\r\n  disabled,\r\n  selectedName,\r\n  type,\r\n}) => {\r\n  // const [selectedName, setselectedName] = useState();\r\n  const [valueD, setValueD] = useState({});\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    setValueD({ label: selectedName, value: value });\r\n  }, []);\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    setValueD(val);\r\n    if (val === \"addAddress\") {\r\n      history.push(\"/addAddress\");\r\n    } else {\r\n      onChange(e, val);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    cssClass: \"my-custom-interface\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-element-group\">\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        <IonSelect\r\n          // selectedText={selectedName}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value || valueD}\r\n          onIonChange={onInpChange}\r\n          cancel-text\r\n          interface=\"popover\"\r\n          className=\"dropdownInput\"\r\n          interfaceOptions={options}\r\n        >\r\n          {type === \"address\" && (\r\n            <IonSelectOption value=\"addAddress\" class=\"selectAddAddr\">\r\n              Add new Address\r\n              {/* <IonIcon icon={addCircle} className=\"addIcon\" /> */}\r\n              <img src=\"/assets/icon/eye.svg\" />\r\n            </IonSelectOption>\r\n          )}\r\n          {listValues?.map((item, index) =>\r\n            type === \"address\" ? (\r\n              <IonSelectOption key={index} value={item}>\r\n                {item.dropAddress}\r\n                {item.consigneeName} {item.dropAddress}\r\n                {item.email}\r\n              </IonSelectOption>\r\n            ) : (\r\n              <IonSelectOption key={index} value={item.value}>\r\n                {item.label}\r\n              </IonSelectOption>\r\n            )\r\n          )}\r\n        </IonSelect>\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start\">{errors}</IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {/* {validation && description && ( */}\r\n      <IonText color=\"danger\" className=\"validation-message\">\r\n        <IonLabel className=\"ion-padding-start\">{description}</IonLabel>\r\n      </IonText>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrpdownInput;\r\n"]},"metadata":{},"sourceType":"module"}