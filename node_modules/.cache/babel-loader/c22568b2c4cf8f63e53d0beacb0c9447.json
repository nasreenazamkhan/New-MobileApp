{"ast":null,"code":"import{IonIcon,IonLabel,IonModal,IonTextarea}from\"@ionic/react\";import{closeOutline}from\"ionicons/icons\";import React,{useState}from\"react\";import\"../../../components/alert/Alert.scss\";import\"./CenterPopup.scss\";const CenterPopup=_ref=>{let{showModal,content,openOrCloseModal,cancelButton,okButton,textAreaComment,isClose,textAreaHeading,mainHead,type,getTextArea}=_ref;const[error,setError]=useState(false);const[text,setText]=useState();const closeIconProps={name:\"close\"};return/*#__PURE__*/React.createElement(IonModal,{isOpen:showModal,cssClass:\"center-align-modal\",showBackdrop:true,onDidDismiss:()=>openOrCloseModal()},isClose&&/*#__PURE__*/React.createElement(\"div\",{className:\"close-icon\",onClick:()=>openOrCloseModal()},/*#__PURE__*/React.createElement(IonIcon,{icon:closeOutline,className:\"close-icon\"})),mainHead&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IonLabel,{className:\"center-popup-label\"},mainHead)),content,textAreaHeading&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IonLabel,{className:\"center-popup-label\"},\"Add suggestions\")),textAreaComment&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IonTextarea,{value:text,onIonChange:e=>{setText(e.detail.value);getTextArea(e.detail.value);},placeholder:textAreaComment})),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons\"},cancelButton&&/*#__PURE__*/React.createElement(\"div\",{className:\"button1\",onClick:()=>openOrCloseModal(\"reject\",type)},cancelButton),okButton&&/*#__PURE__*/React.createElement(\"div\",{className:\"button2\",onClick:()=>openOrCloseModal(\"approve\",type)},okButton)));};export default CenterPopup;","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/components/PopUp/CenterPopup/CenterPopup.tsx"],"names":["IonIcon","IonLabel","IonModal","IonTextarea","closeOutline","React","useState","CenterPopup","showModal","content","openOrCloseModal","cancelButton","okButton","textAreaComment","isClose","textAreaHeading","mainHead","type","getTextArea","error","setError","text","setText","closeIconProps","name","e","detail","value"],"mappings":"AAAA,OAASA,OAAT,CAAkBC,QAAlB,CAA4BC,QAA5B,CAAsCC,WAAtC,KAAyD,cAAzD,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,sCAAP,CAEA,MAAO,oBAAP,CAeA,KAAMC,CAAAA,WAAuC,CAAG,MAY1C,IAZ2C,CAC/CC,SAD+C,CAE/CC,OAF+C,CAG/CC,gBAH+C,CAI/CC,YAJ+C,CAK/CC,QAL+C,CAM/CC,eAN+C,CAO/CC,OAP+C,CAQ/CC,eAR+C,CAS/CC,QAT+C,CAU/CC,IAV+C,CAW/CC,WAX+C,CAY3C,MACJ,KAAM,CAACC,KAAD,CAAQC,QAAR,EAAoBd,QAAQ,CAAU,KAAV,CAAlC,CACA,KAAM,CAACe,IAAD,CAAOC,OAAP,EAAkBhB,QAAQ,EAAhC,CACA,KAAMiB,CAAAA,cAAc,CAAG,CACrBC,IAAI,CAAE,OADe,CAAvB,CAIA,mBACE,oBAAC,QAAD,EACE,MAAM,CAAEhB,SADV,CAEE,QAAQ,CAAC,oBAFX,CAGE,YAAY,CAAE,IAHhB,CAIE,YAAY,CAAE,IAAME,gBAAgB,EAJtC,EAMGI,OAAO,eACN,2BAAK,SAAS,CAAC,YAAf,CAA4B,OAAO,CAAE,IAAMJ,gBAAgB,EAA3D,eAEE,oBAAC,OAAD,EAAS,IAAI,CAAEN,YAAf,CAA6B,SAAS,CAAC,YAAvC,EAFF,CAPJ,CAYGY,QAAQ,eACP,4CACE,oBAAC,QAAD,EAAU,SAAS,CAAC,oBAApB,EAA0CA,QAA1C,CADF,CAbJ,CAiBGP,OAjBH,CAkBGM,eAAe,eACd,4CACE,oBAAC,QAAD,EAAU,SAAS,CAAC,oBAApB,oBADF,CAnBJ,CAuBGF,eAAe,eACd,4CACE,oBAAC,WAAD,EACE,KAAK,CAAEQ,IADT,CAEE,WAAW,CAAGI,CAAD,EAAO,CAClBH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACAT,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACD,CALH,CAME,WAAW,CAAEd,eANf,EADF,CAxBJ,cAmCE,2BAAK,SAAS,CAAC,SAAf,EACGF,YAAY,eACX,2BACE,SAAS,CAAC,SADZ,CAEE,OAAO,CAAE,IAAMD,gBAAgB,CAAC,QAAD,CAAWO,IAAX,CAFjC,EAIGN,YAJH,CAFJ,CASGC,QAAQ,eACP,2BACE,SAAS,CAAC,SADZ,CAEE,OAAO,CAAE,IAAMF,gBAAgB,CAAC,SAAD,CAAYO,IAAZ,CAFjC,EAIGL,QAJH,CAVJ,CAnCF,CADF,CAwDD,CA3ED,CA4EA,cAAeL,CAAAA,WAAf","sourcesContent":["import { IonIcon, IonLabel, IonModal, IonTextarea } from \"@ionic/react\";\r\nimport { closeOutline } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport \"../../../components/alert/Alert.scss\";\r\nimport Icon from \"../../Icon\";\r\nimport \"./CenterPopup.scss\";\r\n\r\ninterface CenterPopupProps {\r\n  showModal;\r\n  content;\r\n  openOrCloseModal?: (data?, type?) => void;\r\n  okButton?: string;\r\n  cancelButton?: string;\r\n  textAreaComment?: string;\r\n  isClose?: boolean;\r\n  textAreaHeading?: string;\r\n  mainHead?: string;\r\n  type?: string;\r\n  getTextArea?: (val) => void;\r\n}\r\nconst CenterPopup: React.FC<CenterPopupProps> = ({\r\n  showModal,\r\n  content,\r\n  openOrCloseModal,\r\n  cancelButton,\r\n  okButton,\r\n  textAreaComment,\r\n  isClose,\r\n  textAreaHeading,\r\n  mainHead,\r\n  type,\r\n  getTextArea,\r\n}) => {\r\n  const [error, setError] = useState<boolean>(false);\r\n  const [text, setText] = useState<string>();\r\n  const closeIconProps = {\r\n    name: \"close\",\r\n  };\r\n\r\n  return (\r\n    <IonModal\r\n      isOpen={showModal}\r\n      cssClass=\"center-align-modal\"\r\n      showBackdrop={true}\r\n      onDidDismiss={() => openOrCloseModal()}\r\n    >\r\n      {isClose && (\r\n        <div className=\"close-icon\" onClick={() => openOrCloseModal()}>\r\n          {/* <Icon iconProps={closeIconProps} /> */}\r\n          <IonIcon icon={closeOutline} className=\"close-icon\" />\r\n        </div>\r\n      )}\r\n      {mainHead && (\r\n        <div>\r\n          <IonLabel className=\"center-popup-label\">{mainHead}</IonLabel>\r\n        </div>\r\n      )}\r\n      {content}\r\n      {textAreaHeading && (\r\n        <div>\r\n          <IonLabel className=\"center-popup-label\">Add suggestions</IonLabel>\r\n        </div>\r\n      )}\r\n      {textAreaComment && (\r\n        <div>\r\n          <IonTextarea\r\n            value={text}\r\n            onIonChange={(e) => {\r\n              setText(e.detail.value!);\r\n              getTextArea(e.detail.value!);\r\n            }}\r\n            placeholder={textAreaComment}\r\n          ></IonTextarea>\r\n        </div>\r\n      )}\r\n      <div className=\"buttons\">\r\n        {cancelButton && (\r\n          <div\r\n            className=\"button1\"\r\n            onClick={() => openOrCloseModal(\"reject\", type)}\r\n          >\r\n            {cancelButton}\r\n          </div>\r\n        )}\r\n        {okButton && (\r\n          <div\r\n            className=\"button2\"\r\n            onClick={() => openOrCloseModal(\"approve\", type)}\r\n          >\r\n            {okButton}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </IonModal>\r\n  );\r\n};\r\nexport default CenterPopup;\r\n"]},"metadata":{},"sourceType":"module"}