{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import{IonContent,IonPage,IonList,IonLabel,IonText,IonIcon}from\"@ionic/react\";import{arrowForwardOutline}from\"ionicons/icons\";import\"./Login.scss\";import{setIsLoggedIn,setUsername}from\"../../data/user/user.actions\";import{connect}from\"../../data/connect\";import{doLogin,fetchAllDeclaration,registerDeviceToDB}from\"../../services/EndPointApi\";import*as EndPoints from\"../../util/EndPointURL\";import TxtInput from\"../../components/txtinput/TxtInput\";import InappBrowser from\"../../components/InappBrowser\";import{termsAndConditionUrl}from\"../../util/Constants\";import*as reduxActions from\"../../redux/actions/AllActions\";import Store from\"../../redux/Store\";import{Plugins}from'@capacitor/core';const{PushNotifications,Device}=Plugins;const uploadIcon={name:\"upload-quick\",slot:\"\",class:\"zoom2\"};const Login=_ref=>{let{setIsLoggedIn,history//setUsername: setUsernameAction,\n}=_ref;const[formSubmitted,setFormSubmitted]=useState(false);const[error,setError]=useState({});const[form,setForm]=useState({username:\"\",password:\"\",submitted:false,valid:false});const[deviceId,setDeviceId]=useState(\"\");const[deviceLang,setDeviceLang]=useState(\"\");const[deviceToken,setDeviceToken]=useState(\"\");useEffect(()=>{console.log('useEffect');logDeviceInfo();logDeviceLanguageInfo();getDeviceToken();},[]);const logDeviceInfo=()=>{Device.getInfo().then(info=>{console.log('deviceInfo',info);setDeviceId(info.uuid);});};const logDeviceLanguageInfo=()=>{Device.getLanguageCode().then(lang=>{console.log('language',lang);const arr=lang.value.split('-');setDeviceLang(arr.shift());});};const getDeviceToken=()=>{PushNotifications.register();// On success, we should be able to receive notifications\nPushNotifications.addListener('registration',token=>{console.log(\"deviceToken\",token.value);setDeviceToken(token.value);});// Some issue with our setup and push will not work\nPushNotifications.addListener('registrationError',error=>{console.log('Error on registration: '+JSON.stringify(error));});// Show us the notification payload if the app is open on our device\nPushNotifications.addListener('pushNotificationReceived',notification=>{console.log('Push received: '+JSON.stringify(notification));});// Method called when tapping on a notification\nPushNotifications.addListener('pushNotificationActionPerformed',notification=>{console.log('Push action performed: '+JSON.stringify(notification));});};const registerDevice=async()=>{var data={notificationToken:deviceToken,preferredLanguage:deviceLang,deviceId:deviceId};console.log('data - url',data+\" - \"+EndPoints.deviceRegisterUrl);var response=await registerDeviceToDB(EndPoints.deviceRegisterUrl,data);console.log('apiResponse',response);};const loginClicked=async e=>{console.log('login clicked');let errs={};e.preventDefault();setFormSubmitted(true);if(!form.username){errs.username=\"Username is required\";}if(!form.password){errs.password=\"Password is required\";}if(form.username&&form.password){var endPointHeader={userName:form.username,password:form.password,userType:\"IMPORTER_APP\"};var response=await doLogin(EndPoints.loginUrl,endPointHeader);if(await response.success){var result=response.data.data.dataItems[0];var accessToken=await reduxActions.AddAccessToKen(result.accessToken);if(accessToken)Store.dispatch(accessToken);var agentType=await reduxActions.AddAgentType(// result.user.activeCompanyCode\nresult.user.userType);if(agentType)Store.dispatch(agentType);var addUser=await reduxActions.AddUser(result.user);if(addUser)Store.dispatch(addUser);// if (result.user.agents && result.user.agents.length > 0) {\n//   history.push(\"/tabs\", result);\n// } else {\nvar response=await fetchAllDeclaration(EndPoints.fetchConfirmDetails+form.username);if(response.success){var userDetails=response.data.data.dataItems[0];if(!response.data.data.dataItems[0].confirmDetails){history.push(\"/tabs/\",response);}else{history.push(\"/confirmDetails\",userDetails);//history.push(\"/tabs/\", userDetails);\n}}else{errs.errorGeneral=response.data.message;}// }\nawait setIsLoggedIn(true);await registerDevice();//await setUsernameAction(form.username);\n//history.push(\"/tabs/\", { direction: \"none\" });\n}else{console.log(response);errs.errorGeneral=response.data.message||response.data.error;setError(errs);}}setError(errs);};const handleChange=(e,value)=>{setForm({...form,[e.target.name]:value});setError({...error,[e.target.name]:\"\"});};var userNmaeIcon={name:\"username\",slot:\"start\",login:true,class:\"zoom12\"};var passwordIcon={name:\"password\",slot:\"start\",login:true,class:\"zoom12\"};const fileInput=useRef(null);return/*#__PURE__*/React.createElement(IonPage,{id:\"login-page\"},/*#__PURE__*/React.createElement(IonContent,null,/*#__PURE__*/React.createElement(\"div\",{className:\"main-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"login-logo\"},/*#__PURE__*/React.createElement(\"img\",{src:\"assets/img/dubai_trade_logo.png\",alt:\"Ionic logo\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"login-box-header\"}),/*#__PURE__*/React.createElement(\"form\",{noValidate:true,onSubmit:loginClicked,autoComplete:\"off\"},/*#__PURE__*/React.createElement(IonList,{className:\"form-section\"},/*#__PURE__*/React.createElement(\"div\",{className:\"login-header\"},\"Login\",/*#__PURE__*/React.createElement(\"hr\",null)),/*#__PURE__*/React.createElement(TxtInput,{name:\"username\",value:form.username,label:\"Username\",errors:error.username,type:\"text\",required:true,onChange:handleChange,datatype:\"TEXT\",placeholder:\"Username\",icon:userNmaeIcon}),/*#__PURE__*/React.createElement(TxtInput,{name:\"password\",value:form.password,label:\"Password\",errors:error.password,type:\"password\",required:true,onChange:handleChange,datatype:\"TEXT\",placeholder:\"Password\",icon:passwordIcon}),/*#__PURE__*/React.createElement(\"div\",{className:\"\"},error.errorGeneral&&/*#__PURE__*/React.createElement(IonText,{color:\"danger\",className:\"validation-message genralError\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"ion-padding-start\"},error.errorGeneral))),/*#__PURE__*/React.createElement(\"div\",{className:\"login-tnc\"},/*#__PURE__*/React.createElement(\"div\",null,\"by clicking \\\"submit\\\" you agree to our\"),/*#__PURE__*/React.createElement(\"div\",{onClick:()=>InappBrowser(termsAndConditionUrl),className:\"tnc\"},\"terms and conditions\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"button-div\"},/*#__PURE__*/React.createElement(\"div\",{className:\"button-holder\",onClick:loginClicked},/*#__PURE__*/React.createElement(IonIcon,{slot:\"icon-only\",icon:arrowForwardOutline}))))))));};export default connect({mapDispatchToProps:{setIsLoggedIn,setUsername},component:Login});","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/pages/login/Login.tsx"],"names":["React","useState","useRef","useEffect","IonContent","IonPage","IonList","IonLabel","IonText","IonIcon","arrowForwardOutline","setIsLoggedIn","setUsername","connect","doLogin","fetchAllDeclaration","registerDeviceToDB","EndPoints","TxtInput","InappBrowser","termsAndConditionUrl","reduxActions","Store","Plugins","PushNotifications","Device","uploadIcon","name","slot","class","Login","history","formSubmitted","setFormSubmitted","error","setError","form","setForm","username","password","submitted","valid","deviceId","setDeviceId","deviceLang","setDeviceLang","deviceToken","setDeviceToken","console","log","logDeviceInfo","logDeviceLanguageInfo","getDeviceToken","getInfo","then","info","uuid","getLanguageCode","lang","arr","value","split","shift","register","addListener","token","JSON","stringify","notification","registerDevice","data","notificationToken","preferredLanguage","deviceRegisterUrl","response","loginClicked","e","errs","preventDefault","endPointHeader","userName","userType","loginUrl","success","result","dataItems","accessToken","AddAccessToKen","dispatch","agentType","AddAgentType","user","addUser","AddUser","fetchConfirmDetails","userDetails","confirmDetails","push","errorGeneral","message","handleChange","target","userNmaeIcon","login","passwordIcon","fileInput","mapDispatchToProps","component"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  IonContent,\r\n  IonPage,\r\n  IonList,\r\n  IonLabel,\r\n  IonText,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport {\r\n  arrowForwardOutline,\r\n} from \"ionicons/icons\";\r\nimport \"./Login.scss\";\r\nimport { setIsLoggedIn, setUsername } from \"../../data/user/user.actions\";\r\nimport { connect } from \"../../data/connect\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { doLogin, fetchAllDeclaration, registerDeviceToDB } from \"../../services/EndPointApi\";\r\nimport * as EndPoints from \"../../util/EndPointURL\";\r\nimport TxtInput from \"../../components/txtinput/TxtInput\";\r\nimport InappBrowser from \"../../components/InappBrowser\";\r\nimport { termsAndConditionUrl } from \"../../util/Constants\";\r\nimport * as reduxActions from \"../../redux/actions/AllActions\";\r\nimport Store from \"../../redux/Store\";\r\nimport { Plugins, PushNotificationToken } from '@capacitor/core';\r\nconst { PushNotifications, Device  } = Plugins;\r\n\r\ninterface OwnProps extends RouteComponentProps {}\r\n\r\ninterface DispatchProps {\r\n  setIsLoggedIn: typeof setIsLoggedIn;\r\n  setUsername: typeof setUsername;\r\n}\r\n\r\ninterface LoginProps extends OwnProps, DispatchProps {}\r\nconst uploadIcon = {\r\n  name: \"upload-quick\",\r\n  slot: \"\",\r\n  class: \"zoom2\",\r\n};\r\nconst Login: React.FC<LoginProps> = ({\r\n  setIsLoggedIn,\r\n  history,\r\n  //setUsername: setUsernameAction,\r\n}) => {\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n  const [error, setError] = useState<any>({});\r\n  const [form, setForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    submitted: false,\r\n    valid: false,\r\n  });\r\n  const [deviceId, setDeviceId] = useState<string>(\"\");\r\n  const [deviceLang, setDeviceLang] = useState<string>(\"\");\r\n  const [deviceToken, setDeviceToken] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect')\r\n    logDeviceInfo();\r\n    logDeviceLanguageInfo();\r\n    getDeviceToken();\r\n  },[])\r\n\r\n  const logDeviceInfo = () => {\r\n    Device.getInfo().then((info) => {\r\n      console.log('deviceInfo', info);\r\n      setDeviceId(info.uuid);\r\n    });\r\n  };\r\n\r\n  const logDeviceLanguageInfo = () => {\r\n    Device.getLanguageCode().then((lang) => {\r\n      console.log('language',lang);\r\n      const arr=lang.value.split('-');\r\n      setDeviceLang(arr.shift());\r\n    });\r\n  };\r\n\r\n  const getDeviceToken = () => {\r\n    PushNotifications.register();\r\n    \r\n    // On success, we should be able to receive notifications\r\n    PushNotifications.addListener('registration',\r\n    (token: PushNotificationToken) => {\r\n      console.log(\"deviceToken\", token.value)\r\n      setDeviceToken(token.value);\r\n    });\r\n\r\n     // Some issue with our setup and push will not work\r\n     PushNotifications.addListener('registrationError', \r\n     (error) => {\r\n       console.log('Error on registration: ' + JSON.stringify(error));\r\n     }\r\n   );\r\n\r\n   // Show us the notification payload if the app is open on our device\r\n   PushNotifications.addListener('pushNotificationReceived', \r\n     (notification) => {\r\n       console.log('Push received: ' + JSON.stringify(notification));\r\n     }\r\n   );\r\n\r\n   // Method called when tapping on a notification\r\n   PushNotifications.addListener('pushNotificationActionPerformed', \r\n     (notification) => {\r\n       console.log('Push action performed: ' + JSON.stringify(notification));\r\n     }\r\n   );\r\n  }\r\n\r\n  const registerDevice = async () => {\r\n    var data = {\r\n        notificationToken : deviceToken,\r\n        preferredLanguage: deviceLang,\r\n        deviceId: deviceId\r\n    };\r\n    console.log('data - url',data +\" - \"+ EndPoints.deviceRegisterUrl);\r\n    var response = await registerDeviceToDB(EndPoints.deviceRegisterUrl, data);\r\n    console.log('apiResponse',response);\r\n  }\r\n\r\n  const loginClicked = async (e: React.FormEvent) => {\r\n    console.log('login clicked')\r\n    let errs: any = {};\r\n    e.preventDefault();\r\n    setFormSubmitted(true);\r\n\r\n    if (!form.username) {\r\n      errs.username = \"Username is required\";\r\n    }\r\n    if (!form.password) {\r\n      errs.password = \"Password is required\";\r\n    }\r\n    if (form.username && form.password) {\r\n      var endPointHeader = {\r\n        userName: form.username,\r\n        password: form.password,\r\n        userType: \"IMPORTER_APP\",\r\n      };\r\n\r\n      var response = await doLogin(EndPoints.loginUrl, endPointHeader);\r\n      if (await response.success) {\r\n        var result = response.data.data.dataItems[0];\r\n        var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n        if (accessToken) Store.dispatch(accessToken);\r\n\r\n        var agentType = await reduxActions.AddAgentType(\r\n          // result.user.activeCompanyCode\r\n          result.user.userType\r\n        );\r\n        if (agentType) Store.dispatch(agentType);\r\n        var addUser = await reduxActions.AddUser(result.user);\r\n        if (addUser) Store.dispatch(addUser);\r\n        // if (result.user.agents && result.user.agents.length > 0) {\r\n        //   history.push(\"/tabs\", result);\r\n        // } else {\r\n\r\n        var response = await fetchAllDeclaration(\r\n          EndPoints.fetchConfirmDetails + form.username\r\n        );\r\n        if (response.success) {\r\n          var userDetails = response.data.data.dataItems[0];\r\n\r\n          if (!response.data.data.dataItems[0].confirmDetails) {\r\n            history.push(\"/tabs/\", response);\r\n          } else {\r\n            history.push(\"/confirmDetails\", userDetails);\r\n            //history.push(\"/tabs/\", userDetails);\r\n          }\r\n        } else {\r\n          errs.errorGeneral = response.data.message;\r\n        }\r\n        // }\r\n        await setIsLoggedIn(true);\r\n        await registerDevice();\r\n        //await setUsernameAction(form.username);\r\n        //history.push(\"/tabs/\", { direction: \"none\" });\r\n      } else {\r\n        console.log(response);\r\n        errs.errorGeneral = response.data.message || response.data.error;\r\n        setError(errs);\r\n      }\r\n    }\r\n    setError(errs);\r\n  };\r\n\r\n  const handleChange = (e: any, value: any) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: value,\r\n    });\r\n    setError({ ...error, [e.target.name]: \"\" });\r\n  };\r\n\r\n  var userNmaeIcon = {\r\n    name: \"username\",\r\n    slot: \"start\",\r\n    login: true,\r\n    class: \"zoom12\",\r\n  };\r\n\r\n  var passwordIcon = {\r\n    name: \"password\",\r\n    slot: \"start\",\r\n    login: true,\r\n    class: \"zoom12\",\r\n  };\r\n\r\n  const fileInput = useRef(null);\r\n\r\n  return (\r\n    <IonPage id=\"login-page\">\r\n      <IonContent>\r\n        <div className=\"main-container\">\r\n          <div className=\"login-logo\">\r\n            <img src=\"assets/img/dubai_trade_logo.png\" alt=\"Ionic logo\" />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <div className=\"login-box-header\"></div>\r\n            <form noValidate onSubmit={loginClicked} autoComplete=\"off\">\r\n              <IonList className=\"form-section\">\r\n                <div className=\"login-header\">\r\n                  Login\r\n                  <hr />\r\n                </div>\r\n                <TxtInput\r\n                  name={\"username\"}\r\n                  value={form.username}\r\n                  label=\"Username\"\r\n                  errors={error.username}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  placeholder=\"Username\"\r\n                  icon={userNmaeIcon}\r\n                />\r\n\r\n                <TxtInput\r\n                  name={\"password\"}\r\n                  value={form.password}\r\n                  label=\"Password\"\r\n                  errors={error.password}\r\n                  type=\"password\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  placeholder=\"Password\"\r\n                  icon={passwordIcon}\r\n                />\r\n\r\n                <div className=\"\">\r\n                  {error.errorGeneral && (\r\n                    <IonText\r\n                      color=\"danger\"\r\n                      className=\"validation-message genralError\"\r\n                    >\r\n                      <IonLabel className=\"ion-padding-start\">\r\n                        {error.errorGeneral}\r\n                      </IonLabel>\r\n                    </IonText>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"login-tnc\">\r\n                  <div>by clicking \"submit\" you agree to our</div>\r\n                  <div\r\n                    onClick={() => InappBrowser(termsAndConditionUrl)}\r\n                    className=\"tnc\"\r\n                  >\r\n                    terms and conditions\r\n                  </div>\r\n                </div>\r\n              </IonList>\r\n              <div className=\"button-div\">\r\n                <div className=\"button-holder\" onClick={loginClicked}>\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default connect<OwnProps, {}, DispatchProps>({\r\n  mapDispatchToProps: {\r\n    setIsLoggedIn,\r\n    setUsername,\r\n  },\r\n  component: Login,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}