{"ast":null,"code":"import{IonButton,IonIcon,IonRow,IonSelect,IonSelectOption}from\"@ionic/react\";import React,{useState}from\"react\";import\"./TopMenu.scss\";export default function TopMenu(props){const agentCodeoptions={cssClass:\"agent-interface-class\"};const[value,setValue]=useState({});return/*#__PURE__*/React.createElement(IonRow,{className:\"horizontal-scroll\"},/*#__PURE__*/React.createElement(\"div\",{className:\"filter-buttons\"},props.topMenuProps.map((item,index)=>/*#__PURE__*/React.createElement(\"div\",{key:index},item.type==\"button\"&&/*#__PURE__*/React.createElement(IonButton,{className:\"circ-button\",size:\"small\",onClick:()=>item.clickedOnTopMenu()},item.icon&&/*#__PURE__*/React.createElement(IonIcon,{icon:item.icon,slot:item.slot}),item.src&&/*#__PURE__*/React.createElement(IonIcon,{slot:item.slot,src:\"/assets/icon/\"+item.src+\".svg\",style:{fontSize:item.size,paddingLeft:\"5px\",paddingRight:\"5px\",transform:item.rotate}}),item.name&&item.name),item.type==\"dropDown\"&&/*#__PURE__*/React.createElement(\"div\",{id:\"drop-down-css\"},/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(IonSelect,{value:value,selectedText:value.label,interface:\"popover\",onIonChange:e=>{let val=e.detail.value;setValue(val);console.log(item.selected);item.clickedOnTopMenu(val);},\"cancel-text\":true,placeholder:item.name,interfaceOptions:agentCodeoptions,className:\"circ-button\"},item.list.map((opt,index)=>{return/*#__PURE__*/React.createElement(IonSelectOption,{value:opt,key:index,className:\"select-opt\"},opt.label);}))))))));}","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/components/topMenu/TopMenu.tsx"],"names":["IonButton","IonIcon","IonRow","IonSelect","IonSelectOption","React","useState","TopMenu","props","agentCodeoptions","cssClass","value","setValue","topMenuProps","map","item","index","type","clickedOnTopMenu","icon","slot","src","fontSize","size","paddingLeft","paddingRight","transform","rotate","name","label","e","val","detail","console","log","selected","list","opt"],"mappings":"AAAA,OACEA,SADF,CAEEC,OAFF,CAGEC,MAHF,CAIEC,SAJF,CAKEC,eALF,KAMO,cANP,CAOA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,gBAAP,CAEA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACrC,KAAMC,CAAAA,gBAAgB,CAAG,CACvBC,QAAQ,CAAE,uBADa,CAAzB,CAGA,KAAM,CAACC,KAAD,CAAQC,QAAR,EAAoBN,QAAQ,CAAM,EAAN,CAAlC,CAEA,mBACE,oBAAC,MAAD,EAAQ,SAAS,CAAC,mBAAlB,eACE,2BAAK,SAAS,CAAC,gBAAf,EACGE,KAAK,CAACK,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,CAAOC,KAAP,gBACtB,2BAAK,GAAG,CAAEA,KAAV,EACGD,IAAI,CAACE,IAAL,EAAa,QAAb,eACC,oBAAC,SAAD,EACE,SAAS,CAAC,aADZ,CAEE,IAAI,CAAC,OAFP,CAGE,OAAO,CAAE,IAAMF,IAAI,CAACG,gBAAL,EAHjB,EAKGH,IAAI,CAACI,IAAL,eAAa,oBAAC,OAAD,EAAS,IAAI,CAAEJ,IAAI,CAACI,IAApB,CAA0B,IAAI,CAAEJ,IAAI,CAACK,IAArC,EALhB,CAMGL,IAAI,CAACM,GAAL,eACC,oBAAC,OAAD,EACE,IAAI,CAAEN,IAAI,CAACK,IADb,CAEE,GAAG,CAAE,gBAAkBL,IAAI,CAACM,GAAvB,CAA6B,MAFpC,CAGE,KAAK,CAAE,CACLC,QAAQ,CAAEP,IAAI,CAACQ,IADV,CAELC,WAAW,CAAE,KAFR,CAGLC,YAAY,CAAE,KAHT,CAILC,SAAS,CAACX,IAAI,CAACY,MAJV,CAHT,EAPJ,CAkBGZ,IAAI,CAACa,IAAL,EAAab,IAAI,CAACa,IAlBrB,CAFJ,CAuBGb,IAAI,CAACE,IAAL,EAAa,UAAb,eACC,2BAAK,EAAE,CAAC,eAAR,eACE,iDACE,oBAAC,SAAD,EACE,KAAK,CAAEN,KADT,CAEE,YAAY,CAAEA,KAAK,CAACkB,KAFtB,CAGE,SAAS,CAAC,SAHZ,CAIE,WAAW,CAAGC,CAAD,EAAO,CAClB,GAAIC,CAAAA,GAAG,CAAGD,CAAC,CAACE,MAAF,CAASrB,KAAnB,CACAC,QAAQ,CAACmB,GAAD,CAAR,CACAE,OAAO,CAACC,GAAR,CAAYnB,IAAI,CAACoB,QAAjB,EACApB,IAAI,CAACG,gBAAL,CAAsBa,GAAtB,EACD,CATH,CAUE,kBAVF,CAWE,WAAW,CAAEhB,IAAI,CAACa,IAXpB,CAYE,gBAAgB,CAAEnB,gBAZpB,CAaE,SAAS,CAAC,aAbZ,EAeGM,IAAI,CAACqB,IAAL,CAAUtB,GAAV,CAAc,CAACuB,GAAD,CAAMrB,KAAN,GAAgB,CAC7B,mBACE,oBAAC,eAAD,EACE,KAAK,CAAEqB,GADT,CAEE,GAAG,CAAErB,KAFP,CAGE,SAAS,CAAC,YAHZ,EAKGqB,GAAG,CAACR,KALP,CADF,CASD,CAVA,CAfH,CADF,CADF,CAxBJ,CADD,CADH,CADF,CADF,CAiED","sourcesContent":["import {\r\n  IonButton,\r\n  IonIcon,\r\n  IonRow,\r\n  IonSelect,\r\n  IonSelectOption,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TopMenu.scss\";\r\n\r\nexport default function TopMenu(props) {\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface-class\",\r\n  };\r\n  const [value, setValue] = useState<any>({});\r\n\r\n  return (\r\n    <IonRow className=\"horizontal-scroll\">\r\n      <div className=\"filter-buttons\">\r\n        {props.topMenuProps.map((item, index) => (\r\n          <div key={index}>\r\n            {item.type == \"button\" && (\r\n              <IonButton\r\n                className=\"circ-button\"\r\n                size=\"small\"\r\n                onClick={() => item.clickedOnTopMenu()}\r\n              >\r\n                {item.icon && <IonIcon icon={item.icon} slot={item.slot} />}\r\n                {item.src && (\r\n                  <IonIcon\r\n                    slot={item.slot}\r\n                    src={\"/assets/icon/\" + item.src + \".svg\"}\r\n                    style={{\r\n                      fontSize: item.size,\r\n                      paddingLeft: \"5px\",\r\n                      paddingRight: \"5px\",\r\n                      transform:item.rotate\r\n                    }}\r\n                  />\r\n                )}\r\n                {item.name && item.name}\r\n              </IonButton>\r\n            )}\r\n            {item.type == \"dropDown\" && (\r\n              <div id=\"drop-down-css\">\r\n                <fieldset>\r\n                  <IonSelect\r\n                    value={value}\r\n                    selectedText={value.label}\r\n                    interface=\"popover\"\r\n                    onIonChange={(e) => {\r\n                      let val = e.detail.value;\r\n                      setValue(val);\r\n                      console.log(item.selected);\r\n                      item.clickedOnTopMenu(val);\r\n                    }}\r\n                    cancel-text\r\n                    placeholder={item.name}\r\n                    interfaceOptions={agentCodeoptions}\r\n                    className=\"circ-button\"\r\n                  >\r\n                    {item.list.map((opt, index) => {\r\n                      return (\r\n                        <IonSelectOption\r\n                          value={opt}\r\n                          key={index}\r\n                          className=\"select-opt\"\r\n                        >\r\n                          {opt.label}\r\n                        </IonSelectOption>\r\n                      );\r\n                    })}\r\n                  </IonSelect>\r\n                </fieldset>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </IonRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}