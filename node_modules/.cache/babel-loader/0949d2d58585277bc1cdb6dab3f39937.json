{"ast":null,"code":"import{IonCol,IonLabel,IonRow}from\"@ionic/react\";import React,{useState}from\"react\";const TrackComponent=props=>{var _props$trackData;const[title,setTitle]=useState(\"\");console.log(\"88888888\",props.trackData);// const getMonthName = (monthNum) => {\n//   var monthNames = [\n//     \"January\",\n//     \"February\",\n//     \"March\",\n//     \"April\",\n//     \"May\",\n//     \"June\",\n//     \"July\",\n//     \"August\",\n//     \"September\",\n//     \"October\",\n//     \"November\",\n//     \"December\",\n//   ];\n//   return monthNames[monthNum - 1];\n// };\nfunction getTitle(status){switch(status){case\"PTOK\"://setTitle(\"PENDING\");\nreturn\"Truck Assigned\";break;// case \"CONF\":\n//   //setTitle(\"CONFIRMED\");\n//   return \"Job Started\";\n//   break;\ncase\"INPRO\"://setTitle(\"COMPLETED\");\nreturn\"Job Started\";break;case\"PODUPL\":return\"Proof of Delivery Submitted\";case\"FCL_DEL\":return\"Delivered\";case\"PEND\":return\"Booked\";case\"COMPL\"://setTitle(\"PENDING\");\nreturn\"Empty container back in yard \";}}function checkDate(currentDate){return true;}return/*#__PURE__*/React.createElement(React.Fragment,null,(_props$trackData=props.trackData)===null||_props$trackData===void 0?void 0:_props$trackData.map((item,id)=>/*#__PURE__*/React.createElement(IonRow,{class:\"menuClose1\",key:id},/*#__PURE__*/React.createElement(IonCol,{size:\"2\",class:\"trackLine\"},item.diffTime||id===0?/*#__PURE__*/React.createElement(IonRow,{class:\"blueRound lightShadow\"},/*#__PURE__*/React.createElement(IonCol,{class:\"ion-text-center top25\"})):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(IonRow,{class:\"trackRound lightShadow\"},/*#__PURE__*/React.createElement(IonCol,{class:\"ion-text-center top25\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"trackRoundLabel\"},item.time)))),/*#__PURE__*/React.createElement(IonCol,{class:\"trackDateLabel\"},/*#__PURE__*/React.createElement(IonRow,null,item.diffTime||id===0?/*#__PURE__*/React.createElement(IonLabel,{class:\"trackLabelColor trackDate\"},item.date):/*#__PURE__*/React.createElement(React.Fragment,null)),/*#__PURE__*/React.createElement(IonRow,{class:item.diffTime?\"trackLabel\":\"trackLabelSmall\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"regularFont\"},item.trackDescription))))));};// export default React.memo(TrackComponent);\nexport default TrackComponent;","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/pages/Track/TrackComponent.tsx"],"names":["IonCol","IonLabel","IonRow","React","useState","TrackComponent","props","title","setTitle","console","log","trackData","getTitle","status","checkDate","currentDate","map","item","id","diffTime","time","date","trackDescription"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,QAAjB,CAA2BC,MAA3B,KAAkD,cAAlD,CACA,MAAOC,CAAAA,KAAP,EAA2BC,QAA3B,KAA2C,OAA3C,CAEA,KAAMC,CAAAA,cAAc,CAAIC,KAAD,EAAgB,sBACrC,KAAM,CAACC,KAAD,CAAQC,QAAR,EAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CACAK,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBJ,KAAK,CAACK,SAA9B,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,QAASC,CAAAA,QAAT,CAAkBC,MAAlB,CAA0B,CACxB,OAAQA,MAAR,EACE,IAAK,MAAL,CACE;AACA,MAAO,gBAAP,CACA,MACF;AACA;AACA;AACA;AACA,IAAK,OAAL,CACE;AACA,MAAO,aAAP,CACA,MACF,IAAK,QAAL,CACE,MAAO,6BAAP,CACF,IAAK,SAAL,CACE,MAAO,WAAP,CACF,IAAK,MAAL,CACE,MAAO,QAAP,CACF,IAAK,OAAL,CACE;AACA,MAAO,+BAAP,CArBJ,CAuBD,CAED,QAASC,CAAAA,SAAT,CAAmBC,WAAnB,CAAgC,CAC9B,MAAO,KAAP,CACD,CAED,mBACE,0DACGT,KAAK,CAACK,SADT,2CACG,iBAAiBK,GAAjB,CAAqB,CAACC,IAAD,CAAOC,EAAP,gBACpB,oBAAC,MAAD,EAAQ,KAAK,CAAC,YAAd,CAA2B,GAAG,CAAEA,EAAhC,eAEE,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,KAAK,CAAC,WAAvB,EACGD,IAAI,CAACE,QAAL,EAAiBD,EAAE,GAAK,CAAxB,cACC,oBAAC,MAAD,EAAQ,KAAK,CAAC,uBAAd,eACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,uBAAd,EADF,CADD,cAKC,wCANJ,cAQE,oBAAC,MAAD,EAAQ,KAAK,CAAC,wBAAd,eACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,uBAAd,eACE,oBAAC,QAAD,EAAU,SAAS,CAAC,iBAApB,EAEGD,IAAI,CAACG,IAFR,CADF,CADF,CARF,CAFF,cAoBE,oBAAC,MAAD,EAAQ,KAAK,CAAC,gBAAd,eACE,oBAAC,MAAD,MACGH,IAAI,CAACE,QAAL,EAAiBD,EAAE,GAAK,CAAxB,cACC,oBAAC,QAAD,EAAU,KAAK,CAAC,2BAAhB,EAKGD,IAAI,CAACI,IALR,CADD,cASC,wCAVJ,CADF,cAeE,oBAAC,MAAD,EAAQ,KAAK,CAAEJ,IAAI,CAACE,QAAL,CAAgB,YAAhB,CAA+B,iBAA9C,eACE,oBAAC,QAAD,EAAU,SAAS,CAAC,aAApB,EAEGF,IAAI,CAACK,gBAFR,CADF,CAfF,CApBF,CADD,CADH,CADF,CAoDD,CAxGD,CA0GA;AACA,cAAejB,CAAAA,cAAf","sourcesContent":["import { IonCol, IonLabel, IonRow, IonText } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\n\nconst TrackComponent = (props: any) => {\n  const [title, setTitle] = useState(\"\");\n  console.log(\"88888888\", props.trackData);\n\n  // const getMonthName = (monthNum) => {\n  //   var monthNames = [\n  //     \"January\",\n  //     \"February\",\n  //     \"March\",\n  //     \"April\",\n  //     \"May\",\n  //     \"June\",\n  //     \"July\",\n  //     \"August\",\n  //     \"September\",\n  //     \"October\",\n  //     \"November\",\n  //     \"December\",\n  //   ];\n\n  //   return monthNames[monthNum - 1];\n  // };\n  function getTitle(status) {\n    switch (status) {\n      case \"PTOK\":\n        //setTitle(\"PENDING\");\n        return \"Truck Assigned\";\n        break;\n      // case \"CONF\":\n      //   //setTitle(\"CONFIRMED\");\n      //   return \"Job Started\";\n      //   break;\n      case \"INPRO\":\n        //setTitle(\"COMPLETED\");\n        return \"Job Started\";\n        break;\n      case \"PODUPL\":\n        return \"Proof of Delivery Submitted\";\n      case \"FCL_DEL\":\n        return \"Delivered\";\n      case \"PEND\":\n        return \"Booked\";\n      case \"COMPL\":\n        //setTitle(\"PENDING\");\n        return \"Empty container back in yard \";\n    }\n  }\n\n  function checkDate(currentDate) {\n    return true;\n  }\n\n  return (\n    <>\n      {props.trackData?.map((item, id) => (\n        <IonRow class=\"menuClose1\" key={id}>\n          {/* { test = checkDate(item.actionDateAndTime.split(\" \")[0])} */}\n          <IonCol size=\"2\" class=\"trackLine\">\n            {item.diffTime || id === 0 ? (\n              <IonRow class=\"blueRound lightShadow\">\n                <IonCol class=\"ion-text-center top25\"></IonCol>\n              </IonRow>\n            ) : (\n              <></>\n            )}\n            <IonRow class=\"trackRound lightShadow\">\n              <IonCol class=\"ion-text-center top25\">\n                <IonLabel className=\"trackRoundLabel\">\n                  {/* {item.actionDateAndTime.split(\" \")[1]} */}\n                  {item.time}\n                </IonLabel>\n              </IonCol>\n            </IonRow>\n          </IonCol>\n\n          <IonCol class=\"trackDateLabel\">\n            <IonRow>\n              {item.diffTime || id === 0 ? (\n                <IonLabel class=\"trackLabelColor trackDate\">\n                  {/* {getMonthName(\n                    item.actionDateAndTime.split(\" \")[0].split(\"/\")[1]\n                  )}{\" \"}\n                  {item.actionDateAndTime.split(\" \")[0].split(\"/\")[0]} */}\n                  {item.date}\n                </IonLabel>\n              ) : (\n                <></>\n              )}\n            </IonRow>\n\n            <IonRow class={item.diffTime ? \"trackLabel\" : \"trackLabelSmall\"}>\n              <IonLabel className=\"regularFont\">\n                {/* {getTitle(item.status)}{\" \"} */}\n                {item.trackDescription}\n              </IonLabel>\n            </IonRow>\n          </IonCol>\n          {/* <IonCol class=\"trackLabel\"> */}\n\n          {/* </IonCol> */}\n        </IonRow>\n      ))}\n    </>\n  );\n};\n\n// export default React.memo(TrackComponent);\nexport default TrackComponent;\n"]},"metadata":{},"sourceType":"module"}