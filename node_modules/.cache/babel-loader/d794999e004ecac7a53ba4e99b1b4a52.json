{"ast":null,"code":"import{getConfData}from'../dataApi';export const loadConfData=()=>async dispatch=>{dispatch(setLoading(true));const data=await getConfData();dispatch(setData(data));dispatch(setLoading(false));};export const setLoading=isLoading=>({type:'set-conf-loading',isLoading});export const setData=data=>({type:'set-conf-data',data});export const addFavorite=sessionId=>({type:'add-favorite',sessionId});export const removeFavorite=sessionId=>({type:'remove-favorite',sessionId});export const updateFilteredTracks=filteredTracks=>({type:'update-filtered-tracks',filteredTracks});export const setSearchText=searchText=>({type:'set-search-text',searchText});export const setMenuEnabled=menuEnabled=>({type:'set-menu-enabled',menuEnabled});","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/data/sessions/sessions.actions.ts"],"names":["getConfData","loadConfData","dispatch","setLoading","data","setData","isLoading","type","addFavorite","sessionId","removeFavorite","updateFilteredTracks","filteredTracks","setSearchText","searchText","setMenuEnabled","menuEnabled"],"mappings":"AAAA,OAASA,WAAT,KAA4B,YAA5B,CAIA,MAAO,MAAMC,CAAAA,YAAY,CAAG,IAAM,KAAOC,CAAAA,QAAP,EAAyC,CACzEA,QAAQ,CAACC,UAAU,CAAC,IAAD,CAAX,CAAR,CACA,KAAMC,CAAAA,IAAI,CAAG,KAAMJ,CAAAA,WAAW,EAA9B,CACAE,QAAQ,CAACG,OAAO,CAACD,IAAD,CAAR,CAAR,CACAF,QAAQ,CAACC,UAAU,CAAC,KAAD,CAAX,CAAR,CACD,CALM,CAOP,MAAO,MAAMA,CAAAA,UAAU,CAAIG,SAAD,GAAyB,CACjDC,IAAI,CAAE,kBAD2C,CAEjDD,SAFiD,CAAzB,CAAnB,CAKP,MAAO,MAAMD,CAAAA,OAAO,CAAID,IAAD,GAA+B,CACpDG,IAAI,CAAE,eAD8C,CAEpDH,IAFoD,CAA/B,CAAhB,CAKP,MAAO,MAAMI,CAAAA,WAAW,CAAIC,SAAD,GAAwB,CACjDF,IAAI,CAAE,cAD2C,CAEjDE,SAFiD,CAAxB,CAApB,CAKP,MAAO,MAAMC,CAAAA,cAAc,CAAID,SAAD,GAAwB,CACpDF,IAAI,CAAE,iBAD8C,CAEpDE,SAFoD,CAAxB,CAAvB,CAKP,MAAO,MAAME,CAAAA,oBAAoB,CAAIC,cAAD,GAA+B,CACjEL,IAAI,CAAE,wBAD2D,CAEjEK,cAFiE,CAA/B,CAA7B,CAKP,MAAO,MAAMC,CAAAA,aAAa,CAAIC,UAAD,GAA0B,CACrDP,IAAI,CAAE,iBAD+C,CAErDO,UAFqD,CAA1B,CAAtB,CAKP,MAAO,MAAMC,CAAAA,cAAc,CAAIC,WAAD,GAA2B,CACvDT,IAAI,CAAE,kBADiD,CAEvDS,WAFuD,CAA3B,CAAvB","sourcesContent":["import { getConfData } from '../dataApi';\r\nimport { ActionType } from '../../util/types';\r\nimport { ConfState } from './conf.state';\r\n\r\nexport const loadConfData = () => async (dispatch: React.Dispatch<any>) => {\r\n  dispatch(setLoading(true));\r\n  const data = await getConfData();\r\n  dispatch(setData(data));\r\n  dispatch(setLoading(false));\r\n}\r\n\r\nexport const setLoading = (isLoading: boolean) => ({\r\n  type: 'set-conf-loading',\r\n  isLoading\r\n} as const);\r\n\r\nexport const setData = (data: Partial<ConfState>) => ({\r\n  type: 'set-conf-data',\r\n  data\r\n} as const);\r\n\r\nexport const addFavorite = (sessionId: number) => ({\r\n  type: 'add-favorite',\r\n  sessionId\r\n} as const);\r\n\r\nexport const removeFavorite = (sessionId: number) => ({\r\n  type: 'remove-favorite',\r\n  sessionId\r\n} as const);\r\n\r\nexport const updateFilteredTracks = (filteredTracks: string[]) => ({\r\n  type: 'update-filtered-tracks', \r\n  filteredTracks \r\n} as const);\r\n\r\nexport const setSearchText = (searchText?: string) => ({ \r\n  type: 'set-search-text', \r\n  searchText \r\n} as const);\r\n\r\nexport const setMenuEnabled = (menuEnabled: boolean) => ({ \r\n  type: 'set-menu-enabled', \r\n  menuEnabled\r\n} as const);\r\n\r\nexport type SessionsActions =\r\n  | ActionType<typeof setLoading>\r\n  | ActionType<typeof setData>\r\n  | ActionType<typeof addFavorite>\r\n  | ActionType<typeof removeFavorite>\r\n  | ActionType<typeof updateFilteredTracks>\r\n  | ActionType<typeof setSearchText>\r\n  | ActionType<typeof setMenuEnabled>\r\n"]},"metadata":{},"sourceType":"module"}