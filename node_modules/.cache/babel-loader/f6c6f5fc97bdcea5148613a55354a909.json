{"ast":null,"code":"import moment from\"moment\";import React,{useEffect,useState}from\"react\";import{mmddFormatDate}from\"../../services/Common\";import\"./ListAllPod.scss\";const SLAExpire=_ref=>{let{expiryDate,verifyPodTime,SLAstatus}=_ref;const[expiryTime,setexpiryTime]=useState(\"\");var dateInMMDD=mmddFormatDate(expiryDate);var start=moment(new Date());var end=moment(new Date(dateInMMDD));useEffect(()=>{setexpiryTime(end.from(start));if(SLAstatus&&end.diff(start,\"hours\")<verifyPodTime){SLAstatus(true);}},[]);return/*#__PURE__*/React.createElement(\"div\",{className:end.diff(start,\"hours\")<verifyPodTime?\"sla-text red\":\"sla-text\"},\"SLA Expire\",end.diff(start,\"minutes\")<0?\"d \":\"s \",\" \",expiryTime);};export default SLAExpire;","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/pages/VerifyPOD/SLAExpire.tsx"],"names":["moment","React","useEffect","useState","mmddFormatDate","SLAExpire","expiryDate","verifyPodTime","SLAstatus","expiryTime","setexpiryTime","dateInMMDD","start","Date","end","from","diff"],"mappings":"AACA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAO,mBAAP,CAOA,KAAMC,CAAAA,SAAmC,CAAG,MAItC,IAJuC,CAC3CC,UAD2C,CAE3CC,aAF2C,CAG3CC,SAH2C,CAIvC,MACJ,KAAM,CAACC,UAAD,CAAaC,aAAb,EAA8BP,QAAQ,CAAC,EAAD,CAA5C,CACA,GAAIQ,CAAAA,UAAU,CAAGP,cAAc,CAACE,UAAD,CAA/B,CACA,GAAIM,CAAAA,KAAK,CAAGZ,MAAM,CAAC,GAAIa,CAAAA,IAAJ,EAAD,CAAlB,CACA,GAAIC,CAAAA,GAAG,CAAGd,MAAM,CAAC,GAAIa,CAAAA,IAAJ,CAASF,UAAT,CAAD,CAAhB,CAEAT,SAAS,CAAC,IAAM,CACdQ,aAAa,CAACI,GAAG,CAACC,IAAJ,CAASH,KAAT,CAAD,CAAb,CACA,GAAIJ,SAAS,EAAIM,GAAG,CAACE,IAAJ,CAASJ,KAAT,CAAgB,OAAhB,EAA2BL,aAA5C,CAA2D,CACzDC,SAAS,CAAC,IAAD,CAAT,CACD,CACF,CALQ,CAKN,EALM,CAAT,CAOA,mBACE,2BACE,SAAS,CACPM,GAAG,CAACE,IAAJ,CAASJ,KAAT,CAAgB,OAAhB,EAA2BL,aAA3B,CAA2C,cAA3C,CAA4D,UAFhE,eAKaO,GAAG,CAACE,IAAJ,CAASJ,KAAT,CAAgB,SAAhB,EAA6B,CAA7B,CAAiC,IAAjC,CAAwC,IALrD,KAK4DH,UAL5D,CADF,CASD,CA1BD,CA2BA,cAAeJ,CAAAA,SAAf","sourcesContent":["import { IonCol, IonLabel } from \"@ionic/react\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { mmddFormatDate } from \"../../services/Common\";\r\nimport \"./ListAllPod.scss\";\r\n\r\ninterface SLAExpireProps {\r\n  expiryDate;\r\n  verifyPodTime: number;\r\n  SLAstatus?: (status) => void;\r\n}\r\nconst SLAExpire: React.FC<SLAExpireProps> = ({\r\n  expiryDate,\r\n  verifyPodTime,\r\n  SLAstatus,\r\n}) => {\r\n  const [expiryTime, setexpiryTime] = useState(\"\");\r\n  var dateInMMDD = mmddFormatDate(expiryDate);\r\n  var start = moment(new Date());\r\n  var end = moment(new Date(dateInMMDD));\r\n\r\n  useEffect(() => {\r\n    setexpiryTime(end.from(start));\r\n    if (SLAstatus && end.diff(start, \"hours\") < verifyPodTime) {\r\n      SLAstatus(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        end.diff(start, \"hours\") < verifyPodTime ? \"sla-text red\" : \"sla-text\"\r\n      }\r\n    >\r\n      SLA Expire{end.diff(start, \"minutes\") < 0 ? \"d \" : \"s \"} {expiryTime}\r\n    </div>\r\n  );\r\n};\r\nexport default SLAExpire;\r\n"]},"metadata":{},"sourceType":"module"}