{"ast":null,"code":"import{IonBadge}from\"@ionic/react\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import Store from\"../redux/Store\";import\"./CartNumber.scss\";import*as reduxActions from\"../redux/actionTypes/AllActionTypes\";const CartNumber=_ref=>{let{numberOfContainers,updateCartNumber}=_ref;const[number,setnumber]=useState(0);useEffect(()=>{countContainerNumberSelected(0);},[numberOfContainers]);function countContainerNumberSelected(count){setnumber(count);numberOfContainers.map((item,index)=>{item.containerList.map(container=>{if(container.selected){count++;setnumber(count);updateCartNumber(count);//setShowPopover({ showPopover: true, event: \"\" });\n}else{setnumber(count);updateCartNumber(count);}});});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IonBadge,{className:\"blueBg\"},\" \",number));};const mapStateToProps=state=>{return{numberOfContainers:state.Cart};};const mapDispatchToProps=()=>{return{updateCartNumber:item=>{Store.dispatch({type:reduxActions.UPDATE_VARIABLE,payLoad:{variableName:\"cartNumber\",value:item}});}};};export default connect(mapStateToProps,mapDispatchToProps)(CartNumber);","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/components/CartNumber.tsx"],"names":["IonBadge","React","useEffect","useState","connect","Store","reduxActions","CartNumber","numberOfContainers","updateCartNumber","number","setnumber","countContainerNumberSelected","count","map","item","index","containerList","container","selected","mapStateToProps","state","Cart","mapDispatchToProps","dispatch","type","UPDATE_VARIABLE","payLoad","variableName","value"],"mappings":"AAAA,OAASA,QAAT,KAAqC,cAArC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAO,mBAAP,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,qCAA9B,CAUA,KAAMC,CAAAA,UAAqC,CAAG,MAGxC,IAHyC,CAC7CC,kBAD6C,CAE7CC,gBAF6C,CAGzC,MACJ,KAAM,CAACC,MAAD,CAASC,SAAT,EAAsBR,QAAQ,CAAC,CAAD,CAApC,CAEAD,SAAS,CAAC,IAAM,CACdU,4BAA4B,CAAC,CAAD,CAA5B,CACD,CAFQ,CAEN,CAACJ,kBAAD,CAFM,CAAT,CAGA,QAASI,CAAAA,4BAAT,CAAsCC,KAAtC,CAA6C,CAC3CF,SAAS,CAACE,KAAD,CAAT,CACAL,kBAAkB,CAACM,GAAnB,CAAuB,CAACC,IAAD,CAAOC,KAAP,GAAiB,CACtCD,IAAI,CAACE,aAAL,CAAmBH,GAAnB,CAAwBI,SAAD,EAAe,CACpC,GAAIA,SAAS,CAACC,QAAd,CAAwB,CACtBN,KAAK,GACLF,SAAS,CAACE,KAAD,CAAT,CACAJ,gBAAgB,CAACI,KAAD,CAAhB,CACA;AACD,CALD,IAKO,CACLF,SAAS,CAACE,KAAD,CAAT,CACAJ,gBAAgB,CAACI,KAAD,CAAhB,CACD,CACF,CAVD,EAWD,CAZD,EAaD,CACD,mBACE,4CACE,oBAAC,QAAD,EAAU,SAAS,CAAC,QAApB,MAA+BH,MAA/B,CADF,CADF,CAKD,CA9BD,CAgCA,KAAMU,CAAAA,eAAe,CAAIC,KAAD,EAAgB,CACtC,MAAO,CACLb,kBAAkB,CAAEa,KAAK,CAACC,IADrB,CAAP,CAGD,CAJD,CAMA,KAAMC,CAAAA,kBAAkB,CAAG,IAAM,CAC/B,MAAO,CACLd,gBAAgB,CAAGM,IAAD,EAAe,CAC/BV,KAAK,CAACmB,QAAN,CAAe,CACbC,IAAI,CAAEnB,YAAY,CAACoB,eADN,CAEbC,OAAO,CAAE,CAAEC,YAAY,CAAE,YAAhB,CAA8BC,KAAK,CAAEd,IAArC,CAFI,CAAf,EAID,CANI,CAAP,CAQD,CATD,CAUA,cAAeX,CAAAA,OAAO,CAACgB,eAAD,CAAkBG,kBAAlB,CAAP,CAA6ChB,UAA7C,CAAf","sourcesContent":["import { IonBadge, IonPopover } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Store from \"../redux/Store\";\r\nimport \"./CartNumber.scss\";\r\nimport * as reduxActions from \"../redux/actionTypes/AllActionTypes\";\r\n\r\ninterface stateProps {}\r\n\r\ninterface ownProps {\r\n  numberOfContainers;\r\n  updateCartNumber;\r\n}\r\n\r\ntype cartNumberProps = stateProps & ownProps;\r\nconst CartNumber: React.FC<cartNumberProps> = ({\r\n  numberOfContainers,\r\n  updateCartNumber,\r\n}) => {\r\n  const [number, setnumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    countContainerNumberSelected(0);\r\n  }, [numberOfContainers]);\r\n  function countContainerNumberSelected(count) {\r\n    setnumber(count);\r\n    numberOfContainers.map((item, index) => {\r\n      item.containerList.map((container) => {\r\n        if (container.selected) {\r\n          count++;\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n          //setShowPopover({ showPopover: true, event: \"\" });\r\n        } else {\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <IonBadge className=\"blueBg\"> {number}</IonBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    numberOfContainers: state.Cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    updateCartNumber: (item: any) => {\r\n      Store.dispatch({\r\n        type: reduxActions.UPDATE_VARIABLE,\r\n        payLoad: { variableName: \"cartNumber\", value: item },\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartNumber);\r\n"]},"metadata":{},"sourceType":"module"}