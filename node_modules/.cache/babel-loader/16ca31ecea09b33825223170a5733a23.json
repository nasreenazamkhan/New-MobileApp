{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { WebPlugin, registerWebPlugin } from '@capacitor/core';\nexport class HttpPluginWeb extends WebPlugin {\n  constructor() {\n    super({\n      name: 'Http',\n      platforms: ['web', 'electron']\n    });\n  }\n\n  getRequestHeader(headers, key) {\n    const originalKeys = Object.keys(headers);\n    const keys = Object.keys(headers).map(k => k.toLocaleLowerCase());\n    const lowered = keys.reduce((newHeaders, key, index) => {\n      newHeaders[key] = headers[originalKeys[index]];\n      return newHeaders;\n    }, {});\n    return lowered[key.toLocaleLowerCase()];\n  }\n\n  nativeHeadersToObject(headers) {\n    const h = {};\n    headers.forEach((value, key) => {\n      h[key] = value;\n    });\n    return h;\n  }\n\n  makeFetchOptions(options, fetchExtra) {\n    const req = Object.assign({\n      method: options.method || 'GET',\n      headers: options.headers\n    }, fetchExtra || {});\n    const contentType = this.getRequestHeader(options.headers || {}, 'content-type') || '';\n\n    if (contentType.indexOf('application/json') === 0) {\n      req['body'] = JSON.stringify(options.data);\n    } else if (contentType.indexOf('application/x-www-form-urlencoded') === 0) {\n      const urlSearchParams = new URLSearchParams();\n\n      for (let key of Object.keys(options.data)) {\n        urlSearchParams.set(key, options.data[key]);\n      }\n\n      req['body'] = urlSearchParams.toString();\n    } else if (contentType.indexOf('multipart/form-data') === 0 || typeof options.data === 'object') {\n      let formData = new FormData();\n\n      for (let key of Object.keys(options.data)) {\n        formData.append(key, options.data[key]);\n      }\n\n      req['body'] = formData;\n    }\n\n    return req;\n  }\n\n  makeFetchParams(params) {\n    if (!params) return null;\n    return Object.entries(params).reduce((prev, _ref) => {\n      let [key, value] = _ref;\n      const encodedValue = encodeURIComponent(value);\n      const keyValue = \"\".concat(key, \"=\").concat(encodedValue);\n      return prev ? \"\".concat(prev, \"&\").concat(keyValue) : keyValue;\n    }, '');\n  }\n\n  request(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const fetchOptions = this.makeFetchOptions(options, options.webFetchExtra);\n      const fetchParams = this.makeFetchParams(options.params);\n      const fetchUrl = fetchParams ? \"\".concat(options.url, \"?\").concat(fetchParams) : options.url;\n      const ret = yield fetch(fetchUrl, fetchOptions);\n      const contentType = ret.headers.get('content-type');\n      let data;\n\n      if (contentType && contentType.indexOf('application/json') === 0) {\n        data = yield ret.json();\n      } else {\n        data = yield ret.text();\n      }\n\n      return {\n        status: ret.status,\n        data,\n        headers: this.nativeHeadersToObject(ret.headers),\n        url: ret.url\n      };\n    });\n  }\n\n  setCookie(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var expires = '';\n\n      if (options.expires) {\n        // remove \"expires=\" so you can pass with or without the prefix\n        expires = \"; expires=\".concat(options.expires.replace(/expires=/gi, ''));\n      } else if (options.ageDays) {\n        const date = new Date();\n        date.setTime(date.getTime() + options.ageDays * 24 * 60 * 60 * 1000);\n        expires = '; expires=' + date.toUTCString();\n      }\n\n      document.cookie = options.key + '=' + (options.value || '') + expires + '; path=/';\n    });\n  }\n\n  getCookies(_options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!document.cookie) {\n        return {\n          value: []\n        };\n      }\n\n      var cookies = document.cookie.split(';');\n      return {\n        value: cookies.map(c => {\n          const cParts = c.split(';').map(cv => cv.trim());\n          const cNameValue = cParts[0];\n          const cValueParts = cNameValue.split('=');\n          const key = cValueParts[0];\n          const value = cValueParts[1];\n          return {\n            key,\n            value\n          };\n        })\n      };\n    });\n  }\n\n  deleteCookie(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      document.cookie = options.key + \"=; expires=\".concat(new Date().toUTCString());\n    });\n  }\n\n  clearCookies(_options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      document.cookie.split(';').forEach(c => document.cookie = c.replace(/^ +/, '').replace(/=.*/, \"=;expires=\".concat(new Date().toUTCString(), \";path=/\")));\n    });\n  }\n\n  uploadFile(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const fetchOptions = this.makeFetchOptions(options, options.webFetchExtra);\n      const formData = new FormData();\n      formData.append(options.name, options.blob);\n      yield fetch(options.url, Object.assign(Object.assign({}, fetchOptions), {\n        body: formData,\n        method: 'POST'\n      }));\n      return {};\n    });\n  }\n\n  downloadFile(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const fetchOptions = this.makeFetchOptions(options, options.webFetchExtra);\n      const ret = yield fetch(options.url, fetchOptions);\n\n      if (!ret.ok) {\n        return Promise.reject('Download file error: response not ok');\n      }\n\n      const blob = yield ret.blob();\n      return {\n        blob\n      };\n    });\n  }\n\n}\nconst Http = new HttpPluginWeb();\nexport { Http };\nregisterWebPlugin(Http);","map":{"version":3,"sources":["../../src/web.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { WebPlugin, registerWebPlugin } from '@capacitor/core';\nexport class HttpPluginWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'Http',\n            platforms: ['web', 'electron'],\n        });\n    }\n    getRequestHeader(headers, key) {\n        const originalKeys = Object.keys(headers);\n        const keys = Object.keys(headers).map(k => k.toLocaleLowerCase());\n        const lowered = keys.reduce((newHeaders, key, index) => {\n            newHeaders[key] = headers[originalKeys[index]];\n            return newHeaders;\n        }, {});\n        return lowered[key.toLocaleLowerCase()];\n    }\n    nativeHeadersToObject(headers) {\n        const h = {};\n        headers.forEach((value, key) => {\n            h[key] = value;\n        });\n        return h;\n    }\n    makeFetchOptions(options, fetchExtra) {\n        const req = Object.assign({ method: options.method || 'GET', headers: options.headers }, (fetchExtra || {}));\n        const contentType = this.getRequestHeader(options.headers || {}, 'content-type') || '';\n        if (contentType.indexOf('application/json') === 0) {\n            req['body'] = JSON.stringify(options.data);\n        }\n        else if (contentType.indexOf('application/x-www-form-urlencoded') === 0) {\n            const urlSearchParams = new URLSearchParams();\n            for (let key of Object.keys(options.data)) {\n                urlSearchParams.set(key, options.data[key]);\n            }\n            req['body'] = urlSearchParams.toString();\n        }\n        else if (contentType.indexOf('multipart/form-data') === 0 ||\n            typeof options.data === 'object') {\n            let formData = new FormData();\n            for (let key of Object.keys(options.data)) {\n                formData.append(key, options.data[key]);\n            }\n            req['body'] = formData;\n        }\n        return req;\n    }\n    makeFetchParams(params) {\n        if (!params)\n            return null;\n        return Object.entries(params).reduce((prev, [key, value]) => {\n            const encodedValue = encodeURIComponent(value);\n            const keyValue = `${key}=${encodedValue}`;\n            return prev ? `${prev}&${keyValue}` : keyValue;\n        }, '');\n    }\n    request(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fetchOptions = this.makeFetchOptions(options, options.webFetchExtra);\n            const fetchParams = this.makeFetchParams(options.params);\n            const fetchUrl = fetchParams\n                ? `${options.url}?${fetchParams}`\n                : options.url;\n            const ret = yield fetch(fetchUrl, fetchOptions);\n            const contentType = ret.headers.get('content-type');\n            let data;\n            if (contentType && contentType.indexOf('application/json') === 0) {\n                data = yield ret.json();\n            }\n            else {\n                data = yield ret.text();\n            }\n            return {\n                status: ret.status,\n                data,\n                headers: this.nativeHeadersToObject(ret.headers),\n                url: ret.url,\n            };\n        });\n    }\n    setCookie(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var expires = '';\n            if (options.expires) {\n                // remove \"expires=\" so you can pass with or without the prefix\n                expires = `; expires=${options.expires.replace(/expires=/gi, '')}`;\n            }\n            else if (options.ageDays) {\n                const date = new Date();\n                date.setTime(date.getTime() + options.ageDays * 24 * 60 * 60 * 1000);\n                expires = '; expires=' + date.toUTCString();\n            }\n            document.cookie =\n                options.key + '=' + (options.value || '') + expires + '; path=/';\n        });\n    }\n    getCookies(_options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!document.cookie) {\n                return { value: [] };\n            }\n            var cookies = document.cookie.split(';');\n            return {\n                value: cookies.map(c => {\n                    const cParts = c.split(';').map(cv => cv.trim());\n                    const cNameValue = cParts[0];\n                    const cValueParts = cNameValue.split('=');\n                    const key = cValueParts[0];\n                    const value = cValueParts[1];\n                    return {\n                        key,\n                        value,\n                    };\n                }),\n            };\n        });\n    }\n    deleteCookie(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            document.cookie = options.key + `=; expires=${new Date().toUTCString()}`;\n        });\n    }\n    clearCookies(_options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            document.cookie\n                .split(';')\n                .forEach(c => (document.cookie = c\n                .replace(/^ +/, '')\n                .replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`)));\n        });\n    }\n    uploadFile(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fetchOptions = this.makeFetchOptions(options, options.webFetchExtra);\n            const formData = new FormData();\n            formData.append(options.name, options.blob);\n            yield fetch(options.url, Object.assign(Object.assign({}, fetchOptions), { body: formData, method: 'POST' }));\n            return {};\n        });\n    }\n    downloadFile(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fetchOptions = this.makeFetchOptions(options, options.webFetchExtra);\n            const ret = yield fetch(options.url, fetchOptions);\n            if (!ret.ok) {\n                return Promise.reject('Download file error: response not ok');\n            }\n            const blob = yield ret.blob();\n            return {\n                blob,\n            };\n        });\n    }\n}\nconst Http = new HttpPluginWeb();\nexport { Http };\nregisterWebPlugin(Http);\n//# sourceMappingURL=web.js.map"]},"metadata":{},"sourceType":"module"}