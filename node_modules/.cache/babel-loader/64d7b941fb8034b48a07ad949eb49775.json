{"ast":null,"code":"import{IonRow,IonCol,IonButton,IonIcon,IonLabel,IonSegment,IonSegmentButton,IonInput,IonText}from\"@ionic/react\";import{arrowBackOutline}from\"ionicons/icons\";import React,{useState}from\"react\";import{useHistory}from\"react-router\";import{getPatternValue,isValid}from\"../../../util/Utilities\";const SearchCompo=_ref=>{let{clearText,setSegment,selectedSegment,searchForResult,label,name,type,value,onChange,required,errors,pattern,datatype,description,placeholder,icon,onBlur,readonly,contactForm,max,setError}=_ref;let history=useHistory();const[searchText,setSearchText]=useState(\"\");const[validation,setvalidation]=useState(false);const checkKey=e=>{if(e.key.length>1)return true;setvalidation(!isValid(datatype,e.key));if(!isValid(datatype,e.key)){e.preventDefault();return false;}};const onInpChange=e=>{let val=e.target.value;if(e.target.pattern&&selectedSegment===\"declaration\"){console.log(888888);val=getPatternValue(val,e.target.pattern,\"-\");}setSearchText(val);//if (!readonly) onChange(e, val, validate);\n};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(IonRow,{className:\"search-bar-row\"},/*#__PURE__*/React.createElement(IonCol,{size:\"1\",className:\"back-button\",onClick:()=>{console.log(\"eee\");//backInSearchClick(false);\nhistory.goBack();}},/*#__PURE__*/React.createElement(IonButton,{fill:\"clear\"},/*#__PURE__*/React.createElement(IonIcon,{src:arrowBackOutline,className:\"back-arrow\"}))),/*#__PURE__*/React.createElement(IonCol,null,/*#__PURE__*/React.createElement(IonInput,{name:name,type:type,value:searchText,spellCheck:false,autocapitalize:\"off\"//readonly={readonly}\n,onKeyDown:checkKey,onIonChange:onInpChange,clearInput:true,required:required,autocomplete:\"off\",pattern:pattern,placeholder:\"search with \".concat(selectedSegment,\" number\"),className:\"textInput search\",onIonBlur:()=>searchForResult(searchText,selectedSegment),maxlength:max,minlength:max,readonly:readonly?readonly:false}),validation&&description&&/*#__PURE__*/React.createElement(IonText,{color:\"danger\",className:\"validation-message\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"ion-padding-start validation-message\"},description))),/*#__PURE__*/React.createElement(IonCol,{size:\"1.5\",className:\"clear-text\",onClick:()=>{clearText();setSearchText(\"\");}},\"Clear\")),/*#__PURE__*/React.createElement(IonRow,{className:\"search-crite\"},/*#__PURE__*/React.createElement(IonCol,{size:\"2\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"crite-label\"},\"Select a Criteria\")),/*#__PURE__*/React.createElement(IonCol,null,/*#__PURE__*/React.createElement(IonSegment,{onIonChange:e=>{setSegment(e.detail.value);//searchForResult(searchText, e.detail.value);\nsetSearchText(\"\");},value:selectedSegment},/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"declaration\"},/*#__PURE__*/React.createElement(IonLabel,null,\"Declaration number\")),/*#__PURE__*/React.createElement(IonSegmentButton,{value:\"container\",className:\"second-segment\"},/*#__PURE__*/React.createElement(IonLabel,null,\"Container number\"))))));};export default SearchCompo;","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/pages/declaration/SearchPage/SearchCompo.tsx"],"names":["IonRow","IonCol","IonButton","IonIcon","IonLabel","IonSegment","IonSegmentButton","IonInput","IonText","arrowBackOutline","React","useState","useHistory","getPatternValue","isValid","SearchCompo","clearText","setSegment","selectedSegment","searchForResult","label","name","type","value","onChange","required","errors","pattern","datatype","description","placeholder","icon","onBlur","readonly","contactForm","max","setError","history","searchText","setSearchText","validation","setvalidation","checkKey","e","key","length","preventDefault","onInpChange","val","target","console","log","goBack","detail"],"mappings":"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","sourcesContent":["import {\r\n  IonRow,\r\n  IonCol,\r\n  IonButton,\r\n  IonIcon,\r\n  IonSearchbar,\r\n  IonLabel,\r\n  IonSegment,\r\n  IonSegmentButton,\r\n  IonInput,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { arrowBackOutline } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { setSearchText } from \"../../../data/sessions/sessions.actions\";\r\nimport { TextInputType } from \"../../../util/DataTypes\";\r\nimport { getPatternValue, isValid } from \"../../../util/Utilities\";\r\n\r\ninterface SearchCompoProps {\r\n  clearText?: () => void;\r\n  setSegment?: (name) => void;\r\n  selectedSegment?: any;\r\n  searchForResult?: (text, segment?) => void;\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n  setError?: any;\r\n}\r\nconst SearchCompo: React.FC<SearchCompoProps> = ({\r\n  clearText,\r\n  setSegment,\r\n  selectedSegment,\r\n  searchForResult,\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n  setError,\r\n}) => {\r\n  let history = useHistory();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [validation, setvalidation] = useState(false);\r\n\r\n  const checkKey = (e) => {\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n\r\n    if (e.target.pattern && selectedSegment === \"declaration\") {\r\n      console.log(888888);\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    setSearchText(val);\r\n    //if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IonRow className=\"search-bar-row\">\r\n        <IonCol\r\n          size=\"1\"\r\n          className=\"back-button\"\r\n          onClick={() => {\r\n            console.log(\"eee\");\r\n            //backInSearchClick(false);\r\n            history.goBack();\r\n          }}\r\n        >\r\n          <IonButton fill=\"clear\">\r\n            <IonIcon src={arrowBackOutline} className=\"back-arrow\" />\r\n            {/* <IonBackButton defaultHref=\"/decl\" /> */}\r\n          </IonButton>\r\n        </IonCol>\r\n        <IonCol>\r\n          {/* <IonSearchbar\r\n            className=\"search\"\r\n            placeholder={`search with ${selectedSegment} number`}\r\n            value={searchText}\r\n            onIonChange={(e) => setSearchText(e.detail.value!)}\r\n            //cancelButtonText=\"Clear\"\r\n            cancelButtonText=\"Custom Cancel\"\r\n            onBlur={() => searchForResult(searchText, selectedSegment)}\r\n          ></IonSearchbar> */}\r\n          <IonInput\r\n            name={name}\r\n            type={type}\r\n            value={searchText}\r\n            spellCheck={false}\r\n            autocapitalize=\"off\"\r\n            //readonly={readonly}\r\n            onKeyDown={checkKey}\r\n            onIonChange={onInpChange}\r\n            clearInput={true}\r\n            required={required}\r\n            autocomplete=\"off\"\r\n            pattern={pattern}\r\n            placeholder={`search with ${selectedSegment} number`}\r\n            className=\"textInput search\"\r\n            onIonBlur={() => searchForResult(searchText, selectedSegment)}\r\n            maxlength={max}\r\n            minlength={max}\r\n            readonly={readonly ? readonly : false}\r\n          >\r\n            {/* {icon && (\r\n            <Icon iconProps={icon} />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )} */}\r\n          </IonInput>\r\n          {validation && description && (\r\n            <IonText color=\"danger\" className=\"validation-message\">\r\n              <IonLabel className=\"ion-padding-start validation-message\">\r\n                {description}\r\n              </IonLabel>\r\n            </IonText>\r\n          )}\r\n        </IonCol>\r\n        <IonCol\r\n          size=\"1.5\"\r\n          className=\"clear-text\"\r\n          onClick={() => {\r\n            clearText();\r\n            setSearchText(\"\");\r\n          }}\r\n        >\r\n          Clear\r\n        </IonCol>\r\n      </IonRow>\r\n      <IonRow className=\"search-crite\">\r\n        <IonCol size=\"2\">\r\n          <IonLabel className=\"crite-label\">Select a Criteria</IonLabel>\r\n        </IonCol>\r\n        <IonCol>\r\n          <IonSegment\r\n            onIonChange={(e) => {\r\n              setSegment(e.detail.value);\r\n              //searchForResult(searchText, e.detail.value);\r\n              setSearchText(\"\");\r\n            }}\r\n            value={selectedSegment}\r\n          >\r\n            <IonSegmentButton value=\"declaration\">\r\n              <IonLabel>Declaration number</IonLabel>\r\n            </IonSegmentButton>\r\n            <IonSegmentButton value=\"container\" className=\"second-segment\">\r\n              <IonLabel>Container number</IonLabel>\r\n            </IonSegmentButton>\r\n          </IonSegment>\r\n        </IonCol>\r\n      </IonRow>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchCompo;\r\n"]},"metadata":{},"sourceType":"module"}