{"ast":null,"code":"import*as LoginUserTypes from\"../actionTypes/AllActionTypes\";// var initialState = [];\n// const Cart = (state = initialState, action) => {\n//   switch (action.type) {\n//     case LoginUserTypes.ADD_TO_CART:\n//       console.log(\"&&&&&\", state);\n//       state.push(action.payLoad);\n//       console.log(state);\n//       return state;\n//     default:\n//       return state;\n//   }\n// };\nconst Cart=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LoginUserTypes.ADD_TO_CART:state.concat(action.payLoad);console.log(action.payLoad);return state.concat(action.payLoad);case LoginUserTypes.UPDATE_BOE_IN_CART:let updatedState=[...state];updatedState.map((item,index)=>{if(item.referenceNumber===action.payLoad.referenceNumber){updatedState[index]=action.payLoad;}});return updatedState;case LoginUserTypes.UPDATE_CONTAINER_IN_CART:let update=[...state];update.map((item,itemIndex)=>{if(item.referenceNumber===action.payLoad.boeNumber){item.containerList.map((container,index)=>{console.log(action.payLoad,\"((((())))\");//item = action.payLoad;\nif(container.container_number===action.payLoad.container_number){console.log(update[itemIndex]);update[itemIndex].containerList[index]=action.payLoad;// container = action.payLoad;\n//update[index].containerList = action.payLoad;\n// console.log(update[index], action.payLoad);\n}// container.container_number === action.payLoad.container_number\n//   ? (item = action.payLoad)\n//   : console.log(\"no\");\n});}// console.log(item);\n});update.push(1);console.log(update);update.pop();return update;case LoginUserTypes.CLEAR_CART:return state=[];default:return state;}};export default Cart;","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/redux/reducers/Cart.tsx"],"names":["LoginUserTypes","Cart","state","action","type","ADD_TO_CART","concat","payLoad","console","log","UPDATE_BOE_IN_CART","updatedState","map","item","index","referenceNumber","UPDATE_CONTAINER_IN_CART","update","itemIndex","boeNumber","containerList","container","container_number","push","pop","CLEAR_CART"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,cAAZ,KAAgC,+BAAhC,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAAMC,CAAAA,IAAI,CAAG,UAAwB,IAAvBC,CAAAA,KAAuB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACnC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKJ,CAAAA,cAAc,CAACK,WAApB,CACEH,KAAK,CAACI,MAAN,CAAaH,MAAM,CAACI,OAApB,EACAC,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACI,OAAnB,EACA,MAAOL,CAAAA,KAAK,CAACI,MAAN,CAAaH,MAAM,CAACI,OAApB,CAAP,CAEF,IAAKP,CAAAA,cAAc,CAACU,kBAApB,CACE,GAAIC,CAAAA,YAAY,CAAG,CAAC,GAAGT,KAAJ,CAAnB,CACAS,YAAY,CAACC,GAAb,CAAiB,CAACC,IAAD,CAAOC,KAAP,GAAiB,CAChC,GAAID,IAAI,CAACE,eAAL,GAAyBZ,MAAM,CAACI,OAAP,CAAeQ,eAA5C,CAA6D,CAC3DJ,YAAY,CAACG,KAAD,CAAZ,CAAsBX,MAAM,CAACI,OAA7B,CACD,CACF,CAJD,EAKA,MAAOI,CAAAA,YAAP,CAEF,IAAKX,CAAAA,cAAc,CAACgB,wBAApB,CACE,GAAIC,CAAAA,MAAM,CAAG,CAAC,GAAGf,KAAJ,CAAb,CACAe,MAAM,CAACL,GAAP,CAAW,CAACC,IAAD,CAAOK,SAAP,GAAqB,CAC9B,GAAIL,IAAI,CAACE,eAAL,GAAyBZ,MAAM,CAACI,OAAP,CAAeY,SAA5C,CAAuD,CACrDN,IAAI,CAACO,aAAL,CAAmBR,GAAnB,CAAuB,CAACS,SAAD,CAAYP,KAAZ,GAAsB,CAC3CN,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACI,OAAnB,CAA4B,WAA5B,EACA;AACA,GACEc,SAAS,CAACC,gBAAV,GAA+BnB,MAAM,CAACI,OAAP,CAAee,gBADhD,CAEE,CACAd,OAAO,CAACC,GAAR,CAAYQ,MAAM,CAACC,SAAD,CAAlB,EACAD,MAAM,CAACC,SAAD,CAAN,CAAkBE,aAAlB,CAAgCN,KAAhC,EAAyCX,MAAM,CAACI,OAAhD,CACA;AACA;AACA;AACD,CACD;AACA;AACA;AACD,CAfD,EAgBD,CACD;AACD,CApBD,EAqBAU,MAAM,CAACM,IAAP,CAAY,CAAZ,EACAf,OAAO,CAACC,GAAR,CAAYQ,MAAZ,EACAA,MAAM,CAACO,GAAP,GACA,MAAOP,CAAAA,MAAP,CACF,IAAKjB,CAAAA,cAAc,CAACyB,UAApB,CACE,MAAQvB,CAAAA,KAAK,CAAG,EAAhB,CAEF,QACE,MAAOA,CAAAA,KAAP,CA9CJ,CAgDD,CAjDD,CAmDA,cAAeD,CAAAA,IAAf","sourcesContent":["import * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\r\n// var initialState = [];\r\n// const Cart = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case LoginUserTypes.ADD_TO_CART:\r\n//       console.log(\"&&&&&\", state);\r\n//       state.push(action.payLoad);\r\n//       console.log(state);\r\n//       return state;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst Cart = (state = [], action) => {\r\n  switch (action.type) {\r\n    case LoginUserTypes.ADD_TO_CART:\r\n      state.concat(action.payLoad);\r\n      console.log(action.payLoad);\r\n      return state.concat(action.payLoad);\r\n\r\n    case LoginUserTypes.UPDATE_BOE_IN_CART:\r\n      let updatedState = [...state];\r\n      updatedState.map((item, index) => {\r\n        if (item.referenceNumber === action.payLoad.referenceNumber) {\r\n          updatedState[index] = action.payLoad;\r\n        }\r\n      });\r\n      return updatedState;\r\n\r\n    case LoginUserTypes.UPDATE_CONTAINER_IN_CART:\r\n      let update = [...state];\r\n      update.map((item, itemIndex) => {\r\n        if (item.referenceNumber === action.payLoad.boeNumber) {\r\n          item.containerList.map((container, index) => {\r\n            console.log(action.payLoad, \"((((())))\");\r\n            //item = action.payLoad;\r\n            if (\r\n              container.container_number === action.payLoad.container_number\r\n            ) {\r\n              console.log(update[itemIndex]);\r\n              update[itemIndex].containerList[index] = action.payLoad;\r\n              // container = action.payLoad;\r\n              //update[index].containerList = action.payLoad;\r\n              // console.log(update[index], action.payLoad);\r\n            }\r\n            // container.container_number === action.payLoad.container_number\r\n            //   ? (item = action.payLoad)\r\n            //   : console.log(\"no\");\r\n          });\r\n        }\r\n        // console.log(item);\r\n      });\r\n      update.push(1);\r\n      console.log(update);\r\n      update.pop();\r\n      return update;\r\n    case LoginUserTypes.CLEAR_CART:\r\n      return (state = []);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}