{"ast":null,"code":"import{IonCol,IonContent,IonLabel,IonPage,IonRow}from\"@ionic/react\";import React,{useEffect,useState}from\"react\";import*as EndPointURL from\"../../util/EndPointURL\";import{httpGetCallWithoutHeader,httpPostCallWithoutHeaderAndBody}from\"../../services/EndPointApi\";import\"./Notifications.scss\";import MainTabs from\"../MainTabs\";import Store from\"../../redux/Store\";import Header from\"../../components/Header\";export default function Notifications(props){console.log(props);const[newnNotfication,setNewNotification]=useState([]);const[accessedNotfication,setAccessedNotfication]=useState([]);const[agent,setAgent]=useState();Store.subscribe(()=>{setAgent(Store.getState().CheckUserStatus.user.selectedAgent);});useEffect(()=>{var response=httpGetCallWithoutHeader(EndPointURL.fetchAllNotificationUrl);response.then(result=>{if(result.success){let data1=result.data.data.dataItems.filter(item=>item.accessed===\"N\");console.log(\"data1\",data1);setNewNotification(data1);let data2=result.data.data.dataItems.filter(item=>item.accessed===\"Y\");setAccessedNotfication(data2);}});},[agent]);const onNewNotificationClick=async(resId,appLink)=>{let appUrl=EndPointURL.fetchAllNotificationUrl+\"/\"+resId;var response=await httpPostCallWithoutHeaderAndBody(appUrl);if(await response.success){if(appLink!==null)props.history.push(appLink);}};return/*#__PURE__*/React.createElement(IonPage,{id:\"notifications-page\"},/*#__PURE__*/React.createElement(Header,{label:\"Notifications\",action:\"search\",showAgent:true,agentHeader:true}),/*#__PURE__*/React.createElement(IonContent,{\"padding-top\":true,className:\"page-content\",fullscreen:true,scrollEvents:true,scrollY:true},/*#__PURE__*/React.createElement(IonRow,{className:\"divider\"},/*#__PURE__*/React.createElement(IonCol,{size:\"12\",className:\"full-width\"},/*#__PURE__*/React.createElement(IonRow,{className:\"sort-divider\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"data-font\"},\"New\"))),newnNotfication.length>0?newnNotfication.filter(item=>item.accessed===\"N\").map((item,index)=>/*#__PURE__*/React.createElement(IonCol,{size:\"12\",className:\"full-width\",key:index,onClick:()=>onNewNotificationClick(item.responseUuid,item.appNotificationDto.appLink)},/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonLabel,{className:\"notification-font\"},item.appNotificationDto.message)),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonLabel,{className:\"notification-date\"},item.duration)))):/*#__PURE__*/React.createElement(IonCol,{size:\"12\",className:\"full-width ion-text-center\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"notification-date\"},\"No Notification to show\"))),/*#__PURE__*/React.createElement(IonRow,{className:\"accessed-status\"},/*#__PURE__*/React.createElement(IonCol,{size:\"12\",className:\"full-width\"},/*#__PURE__*/React.createElement(IonRow,{className:\"sort-divider\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"data-font\"},\"Earlier\"))),accessedNotfication.length>0?accessedNotfication.filter(item=>item.accessed===\"Y\").map((item,index)=>/*#__PURE__*/React.createElement(IonCol,{size:\"12\",className:\"full-width\",key:index},/*#__PURE__*/React.createElement(IonRow,{onClick:()=>{if(item.appNotificationDto.appLink!==null)props.history.push(item.appNotificationDto.appLink);}},/*#__PURE__*/React.createElement(IonLabel,{className:\"notification-font\"},item.appNotificationDto.message)),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonLabel,{className:\"notification-date\"},item.duration)))):/*#__PURE__*/React.createElement(IonCol,{size:\"12\",className:\"full-width ion-text-center\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"notification-date\"},\"No Notification to show\")))),/*#__PURE__*/React.createElement(IonContent,{style:{maxHeight:\"86px\"}},/*#__PURE__*/React.createElement(MainTabs,{selected:true})));}","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/pages/pushNotification/Notifications.tsx"],"names":["IonCol","IonContent","IonLabel","IonPage","IonRow","React","useEffect","useState","EndPointURL","httpGetCallWithoutHeader","httpPostCallWithoutHeaderAndBody","MainTabs","Store","Header","Notifications","props","console","log","newnNotfication","setNewNotification","accessedNotfication","setAccessedNotfication","agent","setAgent","subscribe","getState","CheckUserStatus","user","selectedAgent","response","fetchAllNotificationUrl","then","result","success","data1","data","dataItems","filter","item","accessed","data2","onNewNotificationClick","resId","appLink","appUrl","history","push","length","map","index","responseUuid","appNotificationDto","message","duration","maxHeight"],"mappings":"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","sourcesContent":["import {\r\n  IonCol,\r\n  IonContent,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRow,\r\n} from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport * as EndPointURL from \"../../util/EndPointURL\";\r\nimport {\r\n  httpGetCallWithoutHeader,\r\n  httpPostCallWithoutHeaderAndBody\r\n} from \"../../services/EndPointApi\";\r\nimport \"./Notifications.scss\";\r\nimport MainTabs from \"../MainTabs\";\r\nimport Store from \"../../redux/Store\";\r\nimport Header from \"../../components/Header\";\r\n\r\nexport default function Notifications(props: any) {\r\n  console.log(props);\r\n  const [newnNotfication, setNewNotification] = useState([]);\r\n  const [accessedNotfication, setAccessedNotfication] = useState([]);\r\n  const [agent, setAgent] = useState();\r\n  Store.subscribe(() => {\r\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n  });\r\n\r\n  useEffect(() => {\r\n    var response = httpGetCallWithoutHeader(\r\n      EndPointURL.fetchAllNotificationUrl\r\n    );\r\n    response.then((result) => {\r\n      if (result.success) {\r\n        let data1 = result.data.data.dataItems.filter(\r\n          (item) => item.accessed === \"N\"\r\n        );\r\n        console.log(\"data1\", data1);\r\n        setNewNotification(data1);\r\n        let data2 = result.data.data.dataItems.filter(\r\n          (item) => item.accessed === \"Y\"\r\n        );\r\n        setAccessedNotfication(data2);\r\n      }\r\n    });\r\n  }, [agent]);\r\n\r\n  const onNewNotificationClick = async (resId, appLink) => {\r\n    let appUrl = EndPointURL.fetchAllNotificationUrl + \"/\" + resId;\r\n    var response = await httpPostCallWithoutHeaderAndBody(appUrl);\r\n    if (await response.success) {\r\n      if (appLink !== null) props.history.push(appLink);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IonPage id=\"notifications-page\">\r\n      <Header\r\n        label=\"Notifications\"\r\n        action=\"search\"\r\n        showAgent={true}\r\n        agentHeader={true}\r\n      />\r\n      <IonContent\r\n        padding-top\r\n        className=\"page-content\"\r\n        fullscreen\r\n        scrollEvents={true}\r\n        scrollY={true}\r\n      >\r\n        <IonRow className=\"divider\">\r\n          <IonCol size=\"12\" className=\"full-width\">\r\n            <IonRow className=\"sort-divider\">\r\n              <IonLabel className=\"data-font\">New</IonLabel>\r\n            </IonRow>\r\n          </IonCol>\r\n          {newnNotfication.length > 0 ? (\r\n            newnNotfication\r\n              .filter((item) => item.accessed === \"N\")\r\n              .map((item, index) => (\r\n                <IonCol\r\n                  size=\"12\"\r\n                  className=\"full-width\"\r\n                  key={index}\r\n                  onClick={() =>\r\n                    onNewNotificationClick(\r\n                      item.responseUuid,\r\n                      item.appNotificationDto.appLink\r\n                    )\r\n                  }\r\n                >\r\n                  <IonRow>\r\n                    <IonLabel className=\"notification-font\">\r\n                      {item.appNotificationDto.message}\r\n                    </IonLabel>\r\n                  </IonRow>\r\n                  <IonRow>\r\n                    <IonLabel className=\"notification-date\">\r\n                      {item.duration}\r\n                    </IonLabel>\r\n                  </IonRow>\r\n                </IonCol>\r\n              ))\r\n          ) : (\r\n            <IonCol size=\"12\" className=\"full-width ion-text-center\">\r\n              <IonLabel className=\"notification-date\">\r\n                No Notification to show\r\n              </IonLabel>\r\n            </IonCol>\r\n          )}\r\n        </IonRow>\r\n        <IonRow className=\"accessed-status\">\r\n          <IonCol size=\"12\" className=\"full-width\">\r\n            <IonRow className=\"sort-divider\">\r\n              <IonLabel className=\"data-font\">Earlier</IonLabel>\r\n            </IonRow>\r\n          </IonCol>\r\n          {accessedNotfication.length > 0 ? (\r\n            accessedNotfication\r\n              .filter((item) => item.accessed === \"Y\")\r\n              .map((item, index) => (\r\n                <IonCol size=\"12\" className=\"full-width\" key={index}>\r\n                  <IonRow\r\n                    onClick={() => {\r\n                      if (item.appNotificationDto.appLink !== null)\r\n                        props.history.push(item.appNotificationDto.appLink);\r\n                    }}\r\n                  >\r\n                    <IonLabel className=\"notification-font\">\r\n                      {item.appNotificationDto.message}\r\n                    </IonLabel>\r\n                  </IonRow>\r\n                  <IonRow>\r\n                    <IonLabel className=\"notification-date\">\r\n                      {item.duration}\r\n                    </IonLabel>\r\n                  </IonRow>\r\n                </IonCol>\r\n              ))\r\n          ) : (\r\n            <IonCol size=\"12\" className=\"full-width ion-text-center\">\r\n              <IonLabel className=\"notification-date\">\r\n                No Notification to show\r\n              </IonLabel>\r\n            </IonCol>\r\n          )}\r\n        </IonRow>\r\n      </IonContent>\r\n      <IonContent style={{ maxHeight: \"86px\" }}>\r\n        <MainTabs selected={true} />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}