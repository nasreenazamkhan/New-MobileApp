{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{IonCard,IonCardContent,IonCol,IonIcon,IonRow,IonText}from\"@ionic/react\";import{useHistory}from\"react-router-dom\";import{addCircle}from\"ionicons/icons\";import\"./AddressCard.scss\";import Store from\"../../../redux/Store\";import*as EndPointURL from\"../../../util/EndPointURL\";import{httpGetCallWithoutHeader,httpPostCallWithoutHeaderAndBody}from\"../../../services/EndPointApi\";import*as reduxActions from\"../../../redux/actions/AllActions\";import Alert from\"../../../components/alert/Alert\";export default function AddressCard(props){console.log(\"AddressCard\",props);let history=useHistory();const[address,setAddress]=useState([]);const[agent,setAgent]=useState();const[alertPopup,showAlertPopup]=useState(false);const[message,setMessage]=useState(\"\");const[itemAddress,setItem]=useState({});Store.subscribe(()=>{setAgent(Store.getState().CheckUserStatus.user.selectedAgent);setAddress(Store.getState().Addresses);console.log(\"calling store\");});useEffect(()=>{console.log(\"addressDB\",Store.getState().Addresses);getAddress();console.log(\"add\",address);},[agent]);const getAddress=async()=>{var _response$data,_response$data$data,_response$data$data$d,_response$data2,_response$data2$data,_response$data2$data$;var response=await httpGetCallWithoutHeader(EndPointURL.getAddress);var result=response;if(await(response===null||response===void 0?void 0:response.success)){var addressess=reduxActions.clearAllAddress();if(addressess)Store.dispatch(addressess);console.log(response.data.addressDtoList.length);response.data.addressDtoList.forEach(element=>{element.dropZone=element.selectedDropZone;});response.data.addressDtoList.disableHrs=response.data.disableHrs;response.data.addressDtoList[0].isSelected=true;var newAddressess=reduxActions.addAddress(response.data.addressDtoList);if(newAddressess)Store.dispatch(newAddressess);setAddress(newAddressess.payLoad);}else if((response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:(_response$data$data=_response$data.data)===null||_response$data$data===void 0?void 0:(_response$data$data$d=_response$data$data.dataItems[0])===null||_response$data$data$d===void 0?void 0:_response$data$data$d.code)==\"168\"||(response===null||response===void 0?void 0:(_response$data2=response.data)===null||_response$data2===void 0?void 0:(_response$data2$data=_response$data2.data)===null||_response$data2$data===void 0?void 0:(_response$data2$data$=_response$data2$data.dataItems[0])===null||_response$data2$data$===void 0?void 0:_response$data2$data$.error)==\"No data available.\"){var addressess=reduxActions.clearAllAddress();if(addressess)Store.dispatch(addressess);setAddress([]);}};const updateAddress=element=>{element.createMode=false;console.log(element);history.push(\"/addAddress\",element);};function showAlert(item){showAlertPopup(true);setMessage(item.addressNickname);setItem(item);}function deleteAddress(item,actionType){showAlertPopup(false);if(actionType){var response=httpPostCallWithoutHeaderAndBody(EndPointURL.deleteAddress+item.code);response.then(result=>{if(result.success){var newAddressess=reduxActions.deleteAddress(item.code);if(newAddressess)Store.dispatch(newAddressess);}});}}const alertProps={isShow:alertPopup,message:message+\" ?\",alertAction:deleteAddress,item:itemAddress,content:\" Are you sure to remove contact of\",okButtonName:\"Continue\",cancelButtonName:\"Cancel\",itemName:\"\"};const onAddressSelect=(e,index)=>{address.forEach(element=>{element.isSelected=false;});address[index].isSelected=true;setAddress([...address]);};return/*#__PURE__*/React.createElement(\"div\",{id:\"address-card\"},/*#__PURE__*/React.createElement(Alert,{alertProps:alertProps}),/*#__PURE__*/React.createElement(IonIcon,{onClick:()=>history.push(\"/addAddress\"),icon:addCircle,className:\"addIcon\"}),address.length===0?/*#__PURE__*/React.createElement(IonCard,{className:\"card emptyAddressCard\"},/*#__PURE__*/React.createElement(IonCardContent,null,/*#__PURE__*/React.createElement(IonText,{className:\"emptyAddressText\"},\"Add new address\"))):/*#__PURE__*/React.createElement(\"div\",{className:\"cardTopMargin\"},address.map((element,index)=>/*#__PURE__*/React.createElement(\"div\",{className:\"addressCard\",key:index},/*#__PURE__*/React.createElement(IonIcon,{src:element.isSelected?\"/assets/icon/addressBookBlue.svg\":\"/assets/icon/addressBookGray.svg\",className:\"contactIcon\"}),/*#__PURE__*/React.createElement(IonCard,{className:\"card\",onClick:e=>onAddressSelect(e,index)},/*#__PURE__*/React.createElement(IonCardContent,null,/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonCol,{size:\"10\"},/*#__PURE__*/React.createElement(IonRow,null,element.addressNickname),/*#__PURE__*/React.createElement(IonRow,null,element.selectedDropZoneLabel),/*#__PURE__*/React.createElement(IonRow,null,element.dropAddress),/*#__PURE__*/React.createElement(IonRow,null,\"Mob: \",element.consigneeContactNumber),/*#__PURE__*/React.createElement(IonRow,null,\"Ph: \",element.phoneNumber)),element.isSelected&&/*#__PURE__*/React.createElement(IonCol,{size:\"2\"},/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonIcon,{onClick:()=>updateAddress(element),src:\"/assets/icon/edit-address.svg\",className:\"editIcon\"})),/*#__PURE__*/React.createElement(IonRow,null,/*#__PURE__*/React.createElement(IonIcon,{onClick:()=>showAlert(element),src:\"/assets/icon/delete-address.svg\",className:\"editIcon\"}))))))))));}","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/pages/address/addressCard/AddressCard.tsx"],"names":["React","useEffect","useState","IonCard","IonCardContent","IonCol","IonIcon","IonRow","IonText","useHistory","addCircle","Store","EndPointURL","httpGetCallWithoutHeader","httpPostCallWithoutHeaderAndBody","reduxActions","Alert","AddressCard","props","console","log","history","address","setAddress","agent","setAgent","alertPopup","showAlertPopup","message","setMessage","itemAddress","setItem","subscribe","getState","CheckUserStatus","user","selectedAgent","Addresses","getAddress","response","result","success","addressess","clearAllAddress","dispatch","data","addressDtoList","length","forEach","element","dropZone","selectedDropZone","disableHrs","isSelected","newAddressess","addAddress","payLoad","dataItems","code","error","updateAddress","createMode","push","showAlert","item","addressNickname","deleteAddress","actionType","then","alertProps","isShow","alertAction","content","okButtonName","cancelButtonName","itemName","onAddressSelect","e","index","map","selectedDropZoneLabel","dropAddress","consigneeContactNumber","phoneNumber"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  IonCard,\r\n  IonCardContent,\r\n  IonCol,\r\n  IonIcon,\r\n  IonRow,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addCircle } from \"ionicons/icons\";\r\nimport \"./AddressCard.scss\";\r\nimport Store from \"../../../redux/Store\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport {\r\n  httpGetCallWithoutHeader,\r\n  httpPostCallWithoutHeaderAndBody,\r\n} from \"../../../services/EndPointApi\";\r\nimport * as reduxActions from \"../../../redux/actions/AllActions\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\n\r\nexport default function AddressCard(props: any) {\r\n  console.log(\"AddressCard\", props)\r\n  let history = useHistory();\r\n  const [address, setAddress] = useState([]);\r\n  const [agent, setAgent] = useState();\r\n  const [alertPopup, showAlertPopup] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [itemAddress, setItem] = useState({});\r\n\r\n  Store.subscribe(() => {\r\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n    setAddress(Store.getState().Addresses);\r\n    console.log(\"calling store\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"addressDB\", Store.getState().Addresses);\r\n    getAddress();\r\n    console.log(\"add\", address);\r\n  }, [agent]);\r\n\r\n  const getAddress = async () => {\r\n    var response = await httpGetCallWithoutHeader(EndPointURL.getAddress);\r\n    var result = response;\r\n    if (await response?.success) {\r\n      var addressess = reduxActions.clearAllAddress();\r\n      if (addressess) Store.dispatch(addressess);\r\n\r\n      console.log(response.data.addressDtoList.length);\r\n\r\n      response.data.addressDtoList.forEach((element) => {\r\n        element.dropZone = element.selectedDropZone;\r\n      });\r\n      response.data.addressDtoList.disableHrs = response.data.disableHrs;\r\n      response.data.addressDtoList[0].isSelected = true;\r\n\r\n      var newAddressess = reduxActions.addAddress(response.data.addressDtoList);\r\n      if (newAddressess) Store.dispatch(newAddressess);\r\n      setAddress(newAddressess.payLoad);\r\n    } else if (\r\n      response?.data?.data?.dataItems[0]?.code == \"168\" ||\r\n      response?.data?.data?.dataItems[0]?.error == \"No data available.\"\r\n    ) {\r\n      var addressess = reduxActions.clearAllAddress();\r\n      if (addressess) Store.dispatch(addressess);\r\n      setAddress([]);\r\n    }\r\n  };\r\n\r\n  const updateAddress = (element) => {\r\n    element.createMode = false;\r\n    console.log(element);\r\n    history.push(\"/addAddress\", element);\r\n  };\r\n\r\n  function showAlert(item) {\r\n    showAlertPopup(true);\r\n    setMessage(item.addressNickname);\r\n    setItem(item);\r\n  }\r\n\r\n  function deleteAddress(item, actionType) {\r\n    showAlertPopup(false);\r\n    if (actionType) {\r\n      var response = httpPostCallWithoutHeaderAndBody(\r\n        EndPointURL.deleteAddress + item.code\r\n      );\r\n      response.then((result) => {\r\n        if (result.success) {\r\n          var newAddressess = reduxActions.deleteAddress(item.code);\r\n          if (newAddressess) Store.dispatch(newAddressess);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const alertProps = {\r\n    isShow: alertPopup,\r\n    message: message + \" ?\",\r\n    alertAction: deleteAddress,\r\n    item: itemAddress,\r\n    content: \" Are you sure to remove contact of\",\r\n    okButtonName: \"Continue\",\r\n    cancelButtonName: \"Cancel\",\r\n    itemName: \"\",\r\n  };\r\n\r\n  const onAddressSelect = (e, index) => {\r\n    address.forEach((element) => {\r\n      element.isSelected = false;\r\n    });\r\n    address[index].isSelected = true;\r\n    setAddress([...address]);\r\n  };\r\n\r\n  return (\r\n    <div id=\"address-card\">\r\n      <Alert alertProps={alertProps} />\r\n      <IonIcon\r\n        onClick={() => history.push(\"/addAddress\")}\r\n        icon={addCircle}\r\n        className=\"addIcon\"\r\n      />\r\n      {address.length === 0 ? (\r\n        <IonCard className=\"card emptyAddressCard\">\r\n          <IonCardContent>\r\n            <IonText className=\"emptyAddressText\">Add new address</IonText>\r\n          </IonCardContent>\r\n        </IonCard>\r\n      ) : (\r\n        <div className=\"cardTopMargin\">\r\n          {address.map((element: any, index: any) => (\r\n            <div className=\"addressCard\" key={index}>\r\n              <IonIcon\r\n                src={\r\n                  element.isSelected\r\n                    ? \"/assets/icon/addressBookBlue.svg\"\r\n                    : \"/assets/icon/addressBookGray.svg\"\r\n                }\r\n                className=\"contactIcon\"\r\n              />\r\n              <IonCard\r\n                className=\"card\"\r\n                onClick={(e) => onAddressSelect(e, index)}\r\n              >\r\n                <IonCardContent>\r\n                  <IonRow>\r\n                    <IonCol size=\"10\">\r\n                      <IonRow>{element.addressNickname}</IonRow>\r\n                      <IonRow>{element.selectedDropZoneLabel}</IonRow>\r\n                      <IonRow>{element.dropAddress}</IonRow>\r\n                      <IonRow>Mob: {element.consigneeContactNumber}</IonRow>\r\n                      <IonRow>Ph: {element.phoneNumber}</IonRow>\r\n                    </IonCol>\r\n                    {element.isSelected && (\r\n                      <IonCol size=\"2\">\r\n                        <IonRow>\r\n                          <IonIcon\r\n                            onClick={() => updateAddress(element)}\r\n                            src=\"/assets/icon/edit-address.svg\"\r\n                            className=\"editIcon\"\r\n                          />\r\n                        </IonRow>\r\n                        <IonRow>\r\n                          <IonIcon\r\n                            onClick={() => showAlert(element)}\r\n                            src=\"/assets/icon/delete-address.svg\"\r\n                            className=\"editIcon\"\r\n                          />\r\n                        </IonRow>\r\n                      </IonCol>\r\n                    )}\r\n                  </IonRow>\r\n                </IonCardContent>\r\n              </IonCard>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}