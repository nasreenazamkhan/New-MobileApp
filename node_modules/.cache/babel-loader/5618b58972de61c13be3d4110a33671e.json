{"ast":null,"code":"import{getUserData,setIsLoggedInData,setUsernameData,setHasSeenTutorialData}from'../dataApi';export const loadUserData=()=>async dispatch=>{dispatch(setLoading(true));const data=await getUserData();dispatch(setData(data));dispatch(setLoading(false));};export const setLoading=isLoading=>({type:'set-user-loading',isLoading});export const setData=data=>({type:'set-user-data',data});export const logoutUser=()=>async dispatch=>{await setIsLoggedInData(false);dispatch(setUsername());};export const setIsLoggedIn=loggedIn=>async dispatch=>{await setIsLoggedInData(loggedIn);return{type:'set-is-loggedin',loggedIn};};export const setUsername=username=>async dispatch=>{await setUsernameData(username);return{type:'set-username',username};};export const setHasSeenTutorial=hasSeenTutorial=>async dispatch=>{await setHasSeenTutorialData(hasSeenTutorial);return{type:'set-has-seen-tutorial',hasSeenTutorial};};export const setDarkMode=darkMode=>({type:'set-dark-mode',darkMode});","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/data/user/user.actions.ts"],"names":["getUserData","setIsLoggedInData","setUsernameData","setHasSeenTutorialData","loadUserData","dispatch","setLoading","data","setData","isLoading","type","logoutUser","setUsername","setIsLoggedIn","loggedIn","username","setHasSeenTutorial","hasSeenTutorial","setDarkMode","darkMode"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,iBAAtB,CAAyCC,eAAzC,CAA0DC,sBAA1D,KAAwF,YAAxF,CAKA,MAAO,MAAMC,CAAAA,YAAY,CAAG,IAAM,KAAOC,CAAAA,QAAP,EAAyC,CACzEA,QAAQ,CAACC,UAAU,CAAC,IAAD,CAAX,CAAR,CACA,KAAMC,CAAAA,IAAI,CAAG,KAAMP,CAAAA,WAAW,EAA9B,CACAK,QAAQ,CAACG,OAAO,CAACD,IAAD,CAAR,CAAR,CACAF,QAAQ,CAACC,UAAU,CAAC,KAAD,CAAX,CAAR,CACD,CALM,CAOP,MAAO,MAAMA,CAAAA,UAAU,CAAIG,SAAD,GAAyB,CACjDC,IAAI,CAAE,kBAD2C,CAEjDD,SAFiD,CAAzB,CAAnB,CAKP,MAAO,MAAMD,CAAAA,OAAO,CAAID,IAAD,GAA+B,CACpDG,IAAI,CAAE,eAD8C,CAEpDH,IAFoD,CAA/B,CAAhB,CAKP,MAAO,MAAMI,CAAAA,UAAU,CAAG,IAAM,KAAON,CAAAA,QAAP,EAAyC,CACvE,KAAMJ,CAAAA,iBAAiB,CAAC,KAAD,CAAvB,CACAI,QAAQ,CAACO,WAAW,EAAZ,CAAR,CACD,CAHM,CAKP,MAAO,MAAMC,CAAAA,aAAa,CAAIC,QAAD,EAAuB,KAAOT,CAAAA,QAAP,EAAyC,CAC3F,KAAMJ,CAAAA,iBAAiB,CAACa,QAAD,CAAvB,CACA,MAAQ,CACNJ,IAAI,CAAE,iBADA,CAENI,QAFM,CAAR,CAID,CANM,CAQP,MAAO,MAAMF,CAAAA,WAAW,CAAIG,QAAD,EAAuB,KAAOV,CAAAA,QAAP,EAAyC,CACzF,KAAMH,CAAAA,eAAe,CAACa,QAAD,CAArB,CACA,MAAQ,CACNL,IAAI,CAAE,cADA,CAENK,QAFM,CAAR,CAID,CANM,CAQP,MAAO,MAAMC,CAAAA,kBAAkB,CAAIC,eAAD,EAA8B,KAAOZ,CAAAA,QAAP,EAAyC,CACvG,KAAMF,CAAAA,sBAAsB,CAACc,eAAD,CAA5B,CACA,MAAQ,CACNP,IAAI,CAAE,uBADA,CAENO,eAFM,CAAR,CAID,CANM,CAQP,MAAO,MAAMC,CAAAA,WAAW,CAAIC,QAAD,GAAwB,CACjDT,IAAI,CAAE,eAD2C,CAEjDS,QAFiD,CAAxB,CAApB","sourcesContent":["import { getUserData, setIsLoggedInData, setUsernameData, setHasSeenTutorialData } from '../dataApi';\r\nimport { ActionType } from '../../util/types';\r\nimport { UserState } from './user.state';\r\n\r\n\r\nexport const loadUserData = () => async (dispatch: React.Dispatch<any>) => {\r\n  dispatch(setLoading(true));\r\n  const data = await getUserData();\r\n  dispatch(setData(data));\r\n  dispatch(setLoading(false));\r\n}\r\n\r\nexport const setLoading = (isLoading: boolean) => ({\r\n  type: 'set-user-loading',\r\n  isLoading\r\n} as const);\r\n\r\nexport const setData = (data: Partial<UserState>) => ({\r\n  type: 'set-user-data',\r\n  data\r\n} as const);\r\n\r\nexport const logoutUser = () => async (dispatch: React.Dispatch<any>) => {\r\n  await setIsLoggedInData(false);\r\n  dispatch(setUsername());\r\n};\r\n\r\nexport const setIsLoggedIn = (loggedIn: boolean) => async (dispatch: React.Dispatch<any>) => {\r\n  await setIsLoggedInData(loggedIn);\r\n  return ({\r\n    type: 'set-is-loggedin',\r\n    loggedIn\r\n  } as const)\r\n};\r\n\r\nexport const setUsername = (username?: string) => async (dispatch: React.Dispatch<any>) => {\r\n  await setUsernameData(username);\r\n  return ({\r\n    type: 'set-username',\r\n    username\r\n  } as const);\r\n};\r\n\r\nexport const setHasSeenTutorial = (hasSeenTutorial: boolean) => async (dispatch: React.Dispatch<any>) => {\r\n  await setHasSeenTutorialData(hasSeenTutorial);\r\n  return ({\r\n    type: 'set-has-seen-tutorial',\r\n    hasSeenTutorial\r\n  } as const);\r\n} \r\n\r\nexport const setDarkMode = (darkMode: boolean) => ({\r\n  type: 'set-dark-mode',\r\n  darkMode\r\n} as const);\r\n\r\nexport type UserActions =\r\n  | ActionType<typeof setLoading>\r\n  | ActionType<typeof setData>\r\n  | ActionType<typeof setIsLoggedIn>\r\n  | ActionType<typeof setUsername>\r\n  | ActionType<typeof setHasSeenTutorial>\r\n  | ActionType<typeof setDarkMode>\r\n"]},"metadata":{},"sourceType":"module"}