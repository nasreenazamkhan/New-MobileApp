{"ast":null,"code":"import*as LoginUserTypes from\"../actionTypes/AllActionTypes\";const initialState={user:{userName:\"\",userType:\"\",selectedAgent:{},userdetails:{lastLoggedIn:\"some date\"}},status:false};const CheckUserStatus=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LoginUserTypes.ADD_USER:return{user:action.payLoad,status:true};case LoginUserTypes.UPDATE_USER:return{user:{userName:\"\",userdetails:{lastLoggedIn:\"some date\"}},status:true};case LoginUserTypes.ADD_AGENTTYPE:state.user.userType=action.payLoad;return state;case LoginUserTypes.ADD_SELECTED_AGENT:state.user.selectedAgent=action.payLoad;return state;case LoginUserTypes.REMOVE_USER:return{user:{userName:\"\",userdetails:{lastLoggedIn:\"some date\"}},status:false};default:return state;}};export default CheckUserStatus;","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/redux/reducers/CheckUserStatus.tsx"],"names":["LoginUserTypes","initialState","user","userName","userType","selectedAgent","userdetails","lastLoggedIn","status","CheckUserStatus","state","action","type","ADD_USER","payLoad","UPDATE_USER","ADD_AGENTTYPE","ADD_SELECTED_AGENT","REMOVE_USER"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,cAAZ,KAAgC,+BAAhC,CAEA,KAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,CACJC,QAAQ,CAAE,EADN,CAEJC,QAAQ,CAAE,EAFN,CAGJC,aAAa,CAAC,EAHV,CAIJC,WAAW,CAAE,CACXC,YAAY,CAAE,WADH,CAJT,CADa,CASnBC,MAAM,CAAE,KATW,CAArB,CAYA,KAAMC,CAAAA,eAAe,CAAG,UAAuC,IAAtCC,CAAAA,KAAsC,2DAA9BT,YAA8B,IAAhBU,CAAAA,MAAgB,2CAC7D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKZ,CAAAA,cAAc,CAACa,QAApB,CACE,MAAO,CACLX,IAAI,CAAES,MAAM,CAACG,OADR,CAELN,MAAM,CAAE,IAFH,CAAP,CAIF,IAAKR,CAAAA,cAAc,CAACe,WAApB,CACE,MAAO,CACLb,IAAI,CAAE,CACJC,QAAQ,CAAE,EADN,CAEJG,WAAW,CAAE,CACXC,YAAY,CAAE,WADH,CAFT,CADD,CAOLC,MAAM,CAAE,IAPH,CAAP,CASF,IAAKR,CAAAA,cAAc,CAACgB,aAApB,CACEN,KAAK,CAACR,IAAN,CAAWE,QAAX,CAAsBO,MAAM,CAACG,OAA7B,CACA,MAAOJ,CAAAA,KAAP,CACF,IAAKV,CAAAA,cAAc,CAACiB,kBAApB,CACEP,KAAK,CAACR,IAAN,CAAWG,aAAX,CAA2BM,MAAM,CAACG,OAAlC,CACA,MAAOJ,CAAAA,KAAP,CACF,IAAKV,CAAAA,cAAc,CAACkB,WAApB,CACE,MAAO,CACLhB,IAAI,CAAE,CACJC,QAAQ,CAAE,EADN,CAEJG,WAAW,CAAE,CACXC,YAAY,CAAE,WADH,CAFT,CADD,CAOLC,MAAM,CAAE,KAPH,CAAP,CASF,QACE,MAAOE,CAAAA,KAAP,CAjCJ,CAmCD,CApCD,CAsCA,cAAeD,CAAAA,eAAf","sourcesContent":["import * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\n\nconst initialState = {\n  user: {\n    userName: \"\",\n    userType: \"\",\n    selectedAgent:{},\n    userdetails: {\n      lastLoggedIn: \"some date\",\n    },\n  },\n  status: false,\n};\n\nconst CheckUserStatus = (state = initialState, action: any) => {\n  switch (action.type) {\n    case LoginUserTypes.ADD_USER:\n      return {\n        user: action.payLoad,\n        status: true,\n      };\n    case LoginUserTypes.UPDATE_USER:\n      return {\n        user: {\n          userName: \"\",\n          userdetails: {\n            lastLoggedIn: \"some date\",\n          },\n        },\n        status: true,\n      };\n    case LoginUserTypes.ADD_AGENTTYPE:\n      state.user.userType = action.payLoad;\n      return state;\n    case LoginUserTypes.ADD_SELECTED_AGENT:\n      state.user.selectedAgent = action.payLoad;\n      return state;\n    case LoginUserTypes.REMOVE_USER:\n      return {\n        user: {\n          userName: \"\",\n          userdetails: {\n            lastLoggedIn: \"some date\",\n          },\n        },\n        status: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default CheckUserStatus;\n"]},"metadata":{},"sourceType":"module"}