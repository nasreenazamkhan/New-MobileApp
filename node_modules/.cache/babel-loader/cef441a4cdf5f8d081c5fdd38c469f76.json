{"ast":null,"code":"import Store from\"../redux/Store\";import*as LoginUser from\"../redux/actionTypes/AllActionTypes\";import{Plugins,Capacitor}from\"@capacitor/core\";import*as EndPointURL from\"../util/EndPointURL\";import\"@capacitor-community/http\";const{Http,Device}=Plugins;var deviceLang=\"\";export function logDeviceLanguageInfo(){Device.getLanguageCode().then(lang=>{console.log(lang);const arr=lang.value.split('-');// setDeviceLang(arr.shift());\ndeviceLang=arr.shift();});};export async function HttpGetRequest(data){logDeviceLanguageInfo();var httprequestStatus;var successData=\"\";//let handler = Network.addListener('networkStatusChange', (status) => {\nhttprequestStatus=await getAccessToken(data.url.includes(\"auth/mobilelogin\")).then(result=>{/*  I add result.token to resolved tempraly token issue   */let access_token=result.access_token;let config={headers:data.header// headers: {\n//   access_token: access_token,\n//   \"Content-Type\": \"application/json\",\n//   mobile: \"yes\",\n// },\n};console.log(config);// let config = {};\nconfig[\"headers\"][\"access_token\"]=access_token;config[\"headers\"][\"Content-Type\"]=\"application/json\";config[\"headers\"][\"mobile\"]=\"YES\";config[\"headers\"][\"locale\"]=deviceLang;//*********************Commented Code start ************\n//get access token\nreturn Store.dispatch(async dispatch=>{dispatch({type:LoginUser.API_REQUEST_STARTED});// let status = await Network.getStatus();\n// console.log(\"Network status before \", JSON.stringify(status));\n// return await axios\n//   .get(data.url, config)\nreturn await Http.request({method:\"GET\",url:data.url,headers:config.headers//params: data.header,\n}).then(response=>{console.log(response);if(response.data.status===\"FAIL\"||response.data.status===\"fail\"||response.data.status===\"error\"||response.status===\"error\"||response.data.status===\"Error\"||response.status===500||response.status===404){if(response.status===500){response.data.message=\"Server Issue. Please try again later\";}successData={success:false,data:response.data};dispatch({type:LoginUser.API_REQUEST_FAILURE,payLoad:response.data.message});}else if(response.status==401){handleUnAutharisedCall(data,\"get\");}else{successData={success:true,data:response.data};}// if (\n//   response.data.status == \"FAIL\" ||\n//   response.data.status == \"fail\" ||\n//   response.data.status == \"error\"\n// ) {\n//   successData = { success: false, data: response.data };\n//   dispatch({\n//     type: LoginUser.API_REQUEST_FAILURE,\n//     payLoad: response.data.message,\n//   });\n// } else if (response.status === 401) {\n//   console.log(44444444000001111);\n//   httprequestStatus = getAccessToken(\n//     data.url.includes(\"mobile/api/auth\")\n//   );\n//   successData = { success: \"401\", data: \"\" };\n// } else {\n//   successData = { success: true, data: response.data };\n// }\ndispatch({type:LoginUser.API_REQUEST_SUCCESS});//const successData = { success: true, data: response.data };\nreturn successData;}).catch(function(error){// handle error\nconst errorData={success:false,data:error};if(!error.success){dispatch({type:LoginUser.API_REQUEST_FAILURE,payLoad:error.message});}else{dispatch({type:LoginUser.API_REQUEST_FAILURE,payLoad:error.errorMessage});}console.error(\"error on \",JSON.stringify(error));return errorData;});//************End */\n});//************End */\n});return httprequestStatus;}export async function httpPostRequest(content){logDeviceLanguageInfo();var contenData={};console.log(content.url);var successData=\"\";var httprequestStatus;httprequestStatus=await getAccessToken(content.url.includes(\"auth/mobilelogin\")).then(result=>{let access_token=result.access_token;let config={headers:{headers:{access_token:access_token,mobile:\"YES\",\"Content-Type\":\"application/json\",locale:\"deviceLang\"}}};// config[\"headers\"][\"Content-Type\"] = \"application/json\";\n// config[\"headers\"][\"Access-Control-Allow-Origin\"] = \"*\";\n//get access token\nreturn Store.dispatch(async dispatch=>{dispatch({type:LoginUser.API_REQUEST_STARTED});contenData=content.data;// return await axios\n//   .post(content.url, content.data, config.headers)\nreturn await Http.request({method:content.callType==\"patch\"?\"PATCH\":\"POST\",url:content.url,headers:config.headers.headers,data:content.data// data: JSON.parse(JSON.stringify(content.data)),\n}).then(response=>{console.info(response);dispatch({type:LoginUser.API_REQUEST_SUCCESS});console.log(response.data.status);if(response.data.status===\"FAIL\"||response.data.status===\"fail\"||response.data.status===\"error\"||response.status===\"error\"||response.data.status===\"Error\"||response.status===500||response.status===404){if(response.status===500){response.data.message=\"Server Issue. Please try again later\";}successData={success:false,data:response.data};}else{successData={success:true,data:response.data};}return successData;}).catch(function(error){console.info(error);// handle error\ndispatch({type:LoginUser.API_REQUEST_FAILURE});console.error(\"Error on \",JSON.stringify(error));const errorData={success:false,data:error};return errorData;});});});return httprequestStatus;}export async function getAccessToken(authUrl){var data;console.log(Store.getState().CheckAccessToken,authUrl);let user=Store.getState().CheckUserStatus.user;if(!authUrl){if(Store.getState().CheckAccessToken.status){var _user$activeCompanyCo,_user$activeCompanyCo2;let isAccessToken=await Store.getState().CheckAccessToken;var agentType=(_user$activeCompanyCo=user.activeCompanyCode)===null||_user$activeCompanyCo===void 0?void 0:_user$activeCompanyCo.split(\"-\")[0];var agentCode=(_user$activeCompanyCo2=user.activeCompanyCode)===null||_user$activeCompanyCo2===void 0?void 0:_user$activeCompanyCo2.split(\"-\")[1];console.log(EndPointURL.tokenUrl+\"&agentCode=\"+agentCode+\"&agentType=\"+agentType+\"&userName=\"+user.userName);return isAccessToken.user;}else{var _user$activeCompanyCo3,_user$activeCompanyCo4;let user=Store.getState().CheckUserStatus.user;var agentType=(_user$activeCompanyCo3=user.activeCompanyCode)===null||_user$activeCompanyCo3===void 0?void 0:_user$activeCompanyCo3.split(\"-\")[0];var agentCode=(_user$activeCompanyCo4=user.activeCompanyCode)===null||_user$activeCompanyCo4===void 0?void 0:_user$activeCompanyCo4.split(\"-\")[1];console.log(agentCode,\"api call for access-token\",agentType,user.userName);if(agentCode&&agentType&&user.userName){await Store.dispatch(async dispatch=>{dispatch({type:LoginUser.API_REQUEST_STARTED});// let url =\n//   EndPointURL.tokenUrl + \"&agentCode=F7100&agentType=F&userName=fzuser\";\nlet url=EndPointURL.tokenUrl+\"&agentCode=\"+agentCode+\"&agentType=\"+agentType+\"&userName=\"+user.userName;// data = await axios\n// .get(url) // access token api\ndata=await Http.request({method:\"GET\",url:url}).then(response=>{dispatch({type:LoginUser.API_REQUEST_SUCCESS});if(response.status==500){dispatch({type:LoginUser.REMOVE_ACCESS_TOKEN});}else{dispatch({type:LoginUser.ADD_ACCESS_TOKEN,data:{access_token:response.data.token,refresh_token:\"00\"}});return{access_token:response.data.token,refresh_token:\"00\"};}}).catch(function(error){// handle error\ndispatch({type:LoginUser.API_REQUEST_FAILURE});console.error(\"Error on \",JSON.stringify(error));return\"error\";});});}return data;}}return{access_token:\"\"};}export function handleUnAutharisedCall(data,type){Store.dispatch(async dispatch=>{dispatch({type:LoginUser.REMOVE_ACCESS_TOKEN});});getAccessToken(data.url.includes(\"auth/mobilelogin\")).then(result=>{if(type===\"get\"){HttpGetRequest(data);}else{httpPostRequest(data);}});}","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/services/HttpsServices.js"],"names":["Store","LoginUser","Plugins","Capacitor","EndPointURL","Http","Device","deviceLang","logDeviceLanguageInfo","getLanguageCode","then","lang","console","log","arr","value","split","shift","HttpGetRequest","data","httprequestStatus","successData","getAccessToken","url","includes","result","access_token","config","headers","header","dispatch","type","API_REQUEST_STARTED","request","method","response","status","message","success","API_REQUEST_FAILURE","payLoad","handleUnAutharisedCall","API_REQUEST_SUCCESS","catch","error","errorData","errorMessage","JSON","stringify","httpPostRequest","content","contenData","mobile","locale","callType","info","authUrl","getState","CheckAccessToken","user","CheckUserStatus","isAccessToken","agentType","activeCompanyCode","agentCode","tokenUrl","userName","REMOVE_ACCESS_TOKEN","ADD_ACCESS_TOKEN","token","refresh_token"],"mappings":"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","sourcesContent":["import Store from \"../redux/Store\";\r\nimport * as LoginUser from \"../redux/actionTypes/AllActionTypes\";\r\nimport { Plugins, Capacitor } from \"@capacitor/core\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\n\r\nimport \"@capacitor-community/http\";\r\nconst { Http, Device } = Plugins;\r\nvar deviceLang = \"\";\r\n\r\nexport function logDeviceLanguageInfo(){\r\n  Device.getLanguageCode().then((lang) => {\r\n    console.log(lang);\r\n    const arr=lang.value.split('-');\r\n    // setDeviceLang(arr.shift());\r\n    deviceLang = arr.shift();\r\n  });\r\n};\r\n\r\nexport async function HttpGetRequest(data) {\r\n  logDeviceLanguageInfo();\r\n  var httprequestStatus;\r\n  var successData = \"\";\r\n  //let handler = Network.addListener('networkStatusChange', (status) => {\r\n\r\n  httprequestStatus = await getAccessToken(\r\n    data.url.includes(\"auth/mobilelogin\")\r\n  ).then((result) => {\r\n    /*  I add result.token to resolved tempraly token issue   */\r\n    let access_token = result.access_token;\r\n    let config = {\r\n      headers: data.header,\r\n      // headers: {\r\n      //   access_token: access_token,\r\n      //   \"Content-Type\": \"application/json\",\r\n      //   mobile: \"yes\",\r\n      // },\r\n    };\r\n    console.log(config);\r\n    // let config = {};\r\n    config[\"headers\"][\"access_token\"] = access_token;\r\n    config[\"headers\"][\"Content-Type\"] = \"application/json\";\r\n    config[\"headers\"][\"mobile\"] = \"YES\";\r\n    config[\"headers\"][\"locale\"] = deviceLang;\r\n    //*********************Commented Code start ************\r\n    //get access token\r\n    return Store.dispatch(async (dispatch) => {\r\n      dispatch({\r\n        type: LoginUser.API_REQUEST_STARTED,\r\n      });\r\n      // let status = await Network.getStatus();\r\n      // console.log(\"Network status before \", JSON.stringify(status));\r\n\r\n      // return await axios\r\n      //   .get(data.url, config)\r\n\r\n      return await Http.request({\r\n        method: \"GET\",\r\n        url: data.url,\r\n        headers: config.headers,\r\n        //params: data.header,\r\n      })\r\n\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (\r\n            response.data.status === \"FAIL\" ||\r\n            response.data.status === \"fail\" ||\r\n            response.data.status === \"error\" ||\r\n            response.status === \"error\" ||\r\n            response.data.status === \"Error\" ||\r\n            response.status === 500 ||\r\n            response.status === 404\r\n          ) {\r\n            if (response.status === 500) {\r\n              response.data.message = \"Server Issue. Please try again later\";\r\n            }\r\n            successData = { success: false, data: response.data };\r\n            dispatch({\r\n              type: LoginUser.API_REQUEST_FAILURE,\r\n              payLoad: response.data.message,\r\n            });\r\n          } else if (response.status == 401) {\r\n            handleUnAutharisedCall(data, \"get\");\r\n          } else {\r\n            successData = { success: true, data: response.data };\r\n          }\r\n          // if (\r\n          //   response.data.status == \"FAIL\" ||\r\n          //   response.data.status == \"fail\" ||\r\n          //   response.data.status == \"error\"\r\n          // ) {\r\n          //   successData = { success: false, data: response.data };\r\n          //   dispatch({\r\n          //     type: LoginUser.API_REQUEST_FAILURE,\r\n          //     payLoad: response.data.message,\r\n          //   });\r\n          // } else if (response.status === 401) {\r\n          //   console.log(44444444000001111);\r\n          //   httprequestStatus = getAccessToken(\r\n          //     data.url.includes(\"mobile/api/auth\")\r\n          //   );\r\n          //   successData = { success: \"401\", data: \"\" };\r\n          // } else {\r\n          //   successData = { success: true, data: response.data };\r\n          // }\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_SUCCESS,\r\n          });\r\n          //const successData = { success: true, data: response.data };\r\n          return successData;\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          const errorData = { success: false, data: error };\r\n          if (!error.success) {\r\n            dispatch({\r\n              type: LoginUser.API_REQUEST_FAILURE,\r\n              payLoad: error.message,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: LoginUser.API_REQUEST_FAILURE,\r\n              payLoad: error.errorMessage,\r\n            });\r\n          }\r\n          console.error(\"error on \", JSON.stringify(error));\r\n          return errorData;\r\n        });\r\n      //************End */\r\n    });\r\n    //************End */\r\n  });\r\n  return httprequestStatus;\r\n}\r\n\r\nexport async function httpPostRequest(content) {\r\n  logDeviceLanguageInfo()\r\n  var contenData = {};\r\n  console.log(content.url);\r\n  var successData = \"\";\r\n  var httprequestStatus;\r\n\r\n  httprequestStatus = await getAccessToken(\r\n    content.url.includes(\"auth/mobilelogin\")\r\n  ).then((result) => {\r\n    let access_token = result.access_token;\r\n    let config = {\r\n      headers: {\r\n        headers: {\r\n          access_token: access_token,\r\n          mobile: \"YES\",\r\n          \"Content-Type\": \"application/json\",\r\n          locale:\"deviceLang\"\r\n        },\r\n      },\r\n    };\r\n    // config[\"headers\"][\"Content-Type\"] = \"application/json\";\r\n    // config[\"headers\"][\"Access-Control-Allow-Origin\"] = \"*\";\r\n    //get access token\r\n    return Store.dispatch(async (dispatch) => {\r\n      dispatch({\r\n        type: LoginUser.API_REQUEST_STARTED,\r\n      });\r\n\r\n      contenData = content.data;\r\n      // return await axios\r\n      //   .post(content.url, content.data, config.headers)\r\n      return await Http.request({\r\n        method: content.callType == \"patch\" ? \"PATCH\" : \"POST\",\r\n        url: content.url,\r\n        headers: config.headers.headers,\r\n        data: content.data,\r\n        // data: JSON.parse(JSON.stringify(content.data)),\r\n      })\r\n        .then((response) => {\r\n          console.info(response);\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_SUCCESS,\r\n          });\r\n          console.log(response.data.status);\r\n          if (\r\n            response.data.status === \"FAIL\" ||\r\n            response.data.status === \"fail\" ||\r\n            response.data.status === \"error\" ||\r\n            response.status === \"error\" ||\r\n            response.data.status === \"Error\" ||\r\n            response.status === 500 ||\r\n            response.status === 404\r\n          ) {\r\n            if (response.status === 500) {\r\n              response.data.message = \"Server Issue. Please try again later\";\r\n            }\r\n            successData = { success: false, data: response.data };\r\n          } else {\r\n            successData = { success: true, data: response.data };\r\n          }\r\n\r\n          return successData;\r\n        })\r\n        .catch(function (error) {\r\n          console.info(error);\r\n          // handle error\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_FAILURE,\r\n          });\r\n          console.error(\"Error on \", JSON.stringify(error));\r\n          const errorData = { success: false, data: error };\r\n          return errorData;\r\n        });\r\n    });\r\n  });\r\n  return httprequestStatus;\r\n}\r\nexport async function getAccessToken(authUrl) {\r\n  var data;\r\n  console.log(Store.getState().CheckAccessToken, authUrl);\r\n  let user = Store.getState().CheckUserStatus.user;\r\n  if (!authUrl) {\r\n    if (Store.getState().CheckAccessToken.status) {\r\n      let isAccessToken = await Store.getState().CheckAccessToken;\r\n      var agentType = user.activeCompanyCode?.split(\"-\")[0];\r\n      var agentCode = user.activeCompanyCode?.split(\"-\")[1];\r\n      console.log(\r\n        EndPointURL.tokenUrl +\r\n          \"&agentCode=\" +\r\n          agentCode +\r\n          \"&agentType=\" +\r\n          agentType +\r\n          \"&userName=\" +\r\n          user.userName\r\n      );\r\n      return isAccessToken.user;\r\n    } else {\r\n      let user = Store.getState().CheckUserStatus.user;\r\n\r\n      var agentType = user.activeCompanyCode?.split(\"-\")[0];\r\n      var agentCode = user.activeCompanyCode?.split(\"-\")[1];\r\n      console.log(\r\n        agentCode,\r\n        \"api call for access-token\",\r\n        agentType,\r\n        user.userName\r\n      );\r\n      if (agentCode && agentType && user.userName) {\r\n        await Store.dispatch(async (dispatch) => {\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_STARTED,\r\n          });\r\n          // let url =\r\n          //   EndPointURL.tokenUrl + \"&agentCode=F7100&agentType=F&userName=fzuser\";\r\n          let url =\r\n            EndPointURL.tokenUrl +\r\n            \"&agentCode=\" +\r\n            agentCode +\r\n            \"&agentType=\" +\r\n            agentType +\r\n            \"&userName=\" +\r\n            user.userName;\r\n          // data = await axios\r\n          // .get(url) // access token api\r\n          data = await Http.request({\r\n            method: \"GET\",\r\n            url: url,\r\n          })\r\n            .then((response) => {\r\n              dispatch({\r\n                type: LoginUser.API_REQUEST_SUCCESS,\r\n              });\r\n              if (response.status == 500) {\r\n                dispatch({\r\n                  type: LoginUser.REMOVE_ACCESS_TOKEN,\r\n                });\r\n              } else {\r\n                dispatch({\r\n                  type: LoginUser.ADD_ACCESS_TOKEN,\r\n                  data: {\r\n                    access_token: response.data.token,\r\n                    refresh_token: \"00\",\r\n                  },\r\n                });\r\n                return {\r\n                  access_token: response.data.token,\r\n                  refresh_token: \"00\",\r\n                };\r\n              }\r\n            })\r\n\r\n            .catch(function (error) {\r\n              // handle error\r\n              dispatch({\r\n                type: LoginUser.API_REQUEST_FAILURE,\r\n              });\r\n              console.error(\"Error on \", JSON.stringify(error));\r\n              return \"error\";\r\n            });\r\n        });\r\n      }\r\n      return data;\r\n    }\r\n  }\r\n  return { access_token: \"\" };\r\n}\r\n\r\nexport function handleUnAutharisedCall(data, type) {\r\n  Store.dispatch(async (dispatch) => {\r\n    dispatch({\r\n      type: LoginUser.REMOVE_ACCESS_TOKEN,\r\n    });\r\n  });\r\n  getAccessToken(data.url.includes(\"auth/mobilelogin\")).then((result) => {\r\n    if (type === \"get\") {\r\n      HttpGetRequest(data);\r\n    } else {\r\n      httpPostRequest(data);\r\n    }\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}