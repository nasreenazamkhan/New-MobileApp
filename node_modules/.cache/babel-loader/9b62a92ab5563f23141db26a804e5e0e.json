{"ast":null,"code":"import{IonButton,IonInput,IonLabel,IonText}from\"@ionic/react\";import React,{useState}from\"react\";import\"./TxtInput.scss\";import{getPatternValue,isValid,validateEmail,validateMobile}from\"../../util/Utilities\";import Icon from\"../Icon\";const TxtInput=_ref=>{let{label,name,type,value,onChange,required,errors,pattern,datatype,description,placeholder,icon,onBlur,readonly,contactForm,max,setError,clearInput,keyDown,isClickable}=_ref;const[validation,setvalidation]=useState(false);//const [error, seterror] = useState(\"\");\nconst checkKey=e=>{if(keyDown){keyDown(e);}if(e.key.length>1)return true;setvalidation(!isValid(datatype,e.key));if(!isValid(datatype,e.key)){e.preventDefault();return false;}};const onInpChange=e=>{let val=e.target.value;let validate;if(type===\"tel\"&&setError){val=\"971\"+val.replace(/\\s/g,\"971\");var nameTest=validateMobile(val,max*1+3);console.log(nameTest);if(val!=null){if(!nameTest){setError(\"Please Enter \"+max+\" digit number\");}else{setError(\"\");}}console.log(\"tteeeelll\",val);}if(e.target.pattern){val=getPatternValue(val,e.target.pattern,\"-\");}if(e.target.type===\"email\"){validate=validateEmail(val);if(!validate){setError(\"Please Enter valid Mail id\");}else{setError(\"\");}console.log(validate);setvalidation(!validate);}if(!readonly)onChange(e,val,validate);};return/*#__PURE__*/React.createElement(\"div\",{className:\"form-element-group\",style:contactForm?{width:\"350px\",padding:\"0\"}:{}},/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(\"legend\",null,label),type===\"tel\"?/*#__PURE__*/React.createElement(IonLabel,{className:\"regularFont-textInput\"},\"971\"):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(IonInput,{name:name,type:type,value:type===\"tel\"&&(value===null||value===void 0?void 0:value.substring(0,3).includes(\"971\"))?value.split(\"971\")[1]:value,spellCheck:false,autocapitalize:\"off\"//readonly={readonly}\n,onKeyDown:checkKey,onIonChange:onInpChange,clearInput:clearInput,required:required,autocomplete:\"off\",pattern:pattern,placeholder:placeholder,className:\"textInput\",onIonBlur:e=>{if(onBlur)onBlur(e);else{}},maxlength:max,minlength:max,readonly:readonly?readonly:false},!isClickable&&icon&&/*#__PURE__*/React.createElement(Icon,{iconProps:icon,iconName:name,fieldPlaceholder:placeholder})// <IonIcon slot=\"primary\" icon={pulseOutline} />\n),isClickable&&icon&&/*#__PURE__*/React.createElement(IonButton,{className:\"icon-button\",expand:\"full\",fill:\"clear\",onClick:()=>icon.iconClick(name,placeholder)},/*#__PURE__*/React.createElement(Icon,{iconProps:icon,iconName:name,fieldPlaceholder:placeholder}))),/*#__PURE__*/React.createElement(\"div\",{className:\"\"},errors&&/*#__PURE__*/React.createElement(IonText,{color:\"danger\",className:\"validation-message\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"ion-padding-start validation-message\"},errors))),validation&&description&&/*#__PURE__*/React.createElement(IonText,{color:\"danger\",className:\"validation-message\"},/*#__PURE__*/React.createElement(IonLabel,{className:\"ion-padding-start validation-message\"},description)));};export default TxtInput;","map":{"version":3,"sources":["D:/DT/ptmsCheckOutNew/New-MobileApp/src/components/txtinput/TxtInput.tsx"],"names":["IonButton","IonInput","IonLabel","IonText","React","useState","getPatternValue","isValid","validateEmail","validateMobile","Icon","TxtInput","label","name","type","value","onChange","required","errors","pattern","datatype","description","placeholder","icon","onBlur","readonly","contactForm","max","setError","clearInput","keyDown","isClickable","validation","setvalidation","checkKey","e","key","length","preventDefault","onInpChange","val","target","validate","replace","nameTest","console","log","width","padding","substring","includes","split","iconClick"],"mappings":"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","sourcesContent":["import { IonButton, IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport {\r\n  getPatternValue,\r\n  isValid,\r\n  validateEmail,\r\n  validateMobile,\r\n} from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n  setError?: any;\r\n  clearInput?: boolean;\r\n  keyDown? : any;\r\n  isClickable?:any\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n  setError,\r\n  clearInput,\r\n  keyDown,\r\n  isClickable\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  //const [error, seterror] = useState(\"\");\r\n  const checkKey = (e) => {\r\n    if(keyDown){\r\n      keyDown(e)\r\n    }\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (type === \"tel\" && setError) {\r\n      val = \"971\" + val.replace(/\\s/g, \"971\");\r\n      var nameTest = validateMobile(val, max * 1 + 3);\r\n      console.log(nameTest);\r\n      if (val != null) {\r\n        if (!nameTest) {\r\n          setError(\"Please Enter \" + max + \" digit number\");\r\n        } else {\r\n          setError(\"\");\r\n        }\r\n      }\r\n      console.log(\"tteeeelll\", val);\r\n    }\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      if (!validate) {\r\n        setError(\"Please Enter valid Mail id\");\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      console.log(validate);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={\r\n            type === \"tel\" && value?.substring(0, 3).includes(\"971\")\r\n              ? value.split(\"971\")[1]\r\n              : value\r\n          }\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={clearInput}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          minlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {!isClickable && icon && (\r\n            <Icon\r\n              iconProps={icon}\r\n              iconName={name}\r\n              fieldPlaceholder={placeholder}\r\n            />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n        {isClickable && icon &&(\r\n          <IonButton\r\n\r\n          className=\"icon-button\"\r\n\r\n          expand=\"full\"\r\n\r\n          fill=\"clear\"\r\n\r\n          onClick={() => icon.iconClick(name, placeholder)}\r\n\r\n        >\r\n\r\n          <Icon\r\n\r\n            iconProps={icon}\r\n\r\n            iconName={name}\r\n\r\n            fieldPlaceholder={placeholder}\r\n\r\n          />\r\n\r\n        </IonButton>\r\n        )}\r\n\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n"]},"metadata":{},"sourceType":"module"}