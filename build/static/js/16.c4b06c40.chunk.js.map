{"version":3,"sources":["components/Icon.tsx","components/Header.tsx","util/ClearReduxStore.js","components/txtinput/TxtInput.tsx","../../../../src/@ionic-native/plugins/social-sharing/index.ts","components/Texts/UnderLinedText.tsx","components/InputBorders/BorderWithFloatingText.tsx","components/dropdownInput/DrpdownInput.tsx","components/AutoComplete/AutoComplete.tsx","components/BookQuick.tsx","components/PayQuick.tsx","pages/quickbook/QuickBook.tsx"],"names":["Icon","props","classes","useStyles","propsIcon","iconProps","src","name","style","styleProps","className","class","slot","onClick","iconClick","iconName","fieldPlaceholder","console","log","createUseStyles","zoom12","zoom","slotEnd","right","bottom","disabledminus","fontSize","calenderMargin","zoom3","zoom2","slotStart","position","absolutePosition","lastIcon","Header","HeaderParam","actionType","setActionType","useState","search","check","close","home","info","userDetails","Store","getState","CheckUserStatus","user","checked","setChecked","checkedLabel","setCheckedLabel","backIconProps","useEffect","updateActionType","action","history","useHistory","back","e","customClick","customBack","backClick","goBack","myValue","agentHeader","height","paddingBottom","checkedProps","hidden","showChecked","fill","onIonChange","addContainerToCart","checkAndUncheckAll","detail","label","searchClick","icon","minWidth","infoClick","checkClick","push","ClearReduxStore","closeSharp","agents","value","selectedAgent","interface","async","data","url","EndPointURL","agentCode","agentType","endPointHeader","userName","userType","response","loginWithAgent","result","dataItems","success","accessToken","reduxActions","dispatch","activeCompanyCode","changedAgent","selectUserType","disabled","showAgent","length","backgroundColor","interfaceOptions","cssClass","map","item","index","key","agentName","type","LoginUserTypes","TxtInput","onChange","required","errors","pattern","datatype","description","placeholder","onBlur","readonly","contactForm","max","setError","clearInput","keyDown","isClickable","validation","setvalidation","width","padding","substring","includes","split","spellCheck","autocapitalize","onKeyDown","isValid","preventDefault","validate","val","target","replace","nameTest","validateMobile","getPatternValue","validateEmail","autocomplete","onIonBlur","maxlength","minlength","expand","color","SocialSharing","shareWithOptions","canShareVia","shareViaTwitter","shareViaFacebook","shareViaFacebookWithPasteMessageHint","pasteMessageHint","shareViaInstagram","shareViaWhatsApp","shareViaWhatsAppToReceiver","shareViaSMS","phoneNumber","canShareViaEmail","shareViaEmail","setIPadPopupCoordinates","targetBounds","saveToPhotoAlbum","fileOrFileArray","shareViaWhatsAppToPhone","UnderLinedText","text","BorderWithFloatingText","content","DrpdownInput","listValues","selectedName","valueD","setValueD","cancel-text","dropAddress","consigneeName","email","AutoComplete","onOptionClick","onSuggestionChange","suggestions","clearIcon","filteredSuggestions","setFilteredSuggestions","activeSuggestionIndex","setActiveSuggestionIndex","showSuggestions","setShowSuggestions","input","setInput","isSuggestionClicked","setISuggestionClicked","autocompleteIcon","setIcon","errorMessage","setErrorMessage","unLinked","filter","suggestion","toLowerCase","indexOf","keyCode","onSuggestionClick","containerList","containerMap","Map","txtInputDeclToAdd","txtInputContaAdd","BookQuick","forwardRef","ref","buttonAction","useRef","plusIcon","placeholderVal","setDeclarationFields","prevState","Date","getMilliseconds","isParent","deleteIcon","declarationFields","setContainerFields","minusIcon","removeTexTInput","plusDisabledIcon","delete","field","txtInputAdd","settxtInputAdd","declNumber","containerNumber","form","setForm","truckCount","dateAndTime","calendarTodayDate","minDate","truckType","droplocation","consigneeContactName","consigneeContactNumber","contactPerson","contactNumber","submitted","valid","dropInterval","initialIcon","setErrors","seticon","setAction","timeAddressTruckDataList","settimeAddressTruckDataList","address","listTruck","disbaleHr","defaultDecField","defaultContainerField","containerFields","isDeclarationReset","setIsDeclarationReset","isContainerReset","setIsConainerReset","setSuggestions","splice","getListAddress","getTruck","res","getContainerTypes","setTimeout","general","message","error","getAddressApi","formattedMindate","utils","disableHrs","toISOString","addressDtoList","newdateTime","moment","format","minformatDate","totalTruckNumber","createArrayOfObjectWithKeyAndValue","handleChange","onHandleChange","updateField","clearContainers","clearDeclarations","fetchSuggestions","prop","findIndex","declarationFieldsTemp","decField","updateIcon","containerFieldsTemp","containerField","fetchDeclarations","fetchContainers","forEach","onDeclarationClick","isExists","some","isValueExist","fetchContainerList","defaultContainerFieldTemp","defaultDecFieldTemp","getRequestByDeclaration","getRequestByContainer","respcontainerList","container","Array","prototype","apply","noOfContainers","set","createRequestObject","from","values","list","element","test","date_time","containerType","requestDetailsNumber","truckTypeArray","interval","dateTime","numberOftruck","truckVar","truckTypes","nbTruck","Number","intervalInMilliSeconds","myInterval","i","vehicleCode","vehicleName","createrequestTruckType","requestTruckType","multiLocAndTime","truckNumber","bookTruckDetails","useImperativeHandle","emptyField","undefined","validateDetails","r","resp","fetchContainerSummaryPayment","payment","createPaymentObject","totalContainerTariff","totalTokenTariff","dropIntervals","Calendar","formatToCalendarDate","datevalue","tt","displayFormat","PayQuick","myref","current","openRosoom","allPayableDetails","location","state","Payment","QuickBook","buttonState","setbuttonState","screen","setscreen","VariableValues","paymentStatus","updatePayStatus","subscribe","bookref","payref","paymentSta","updatePaymentStatus","status","reference_num","onIonTabsDidChange","exact","path","to","render","tab","href","pathname","gotoPaymentDiscPage","payNow","onContinue","arrowForwardOutline"],"mappings":"qHAAA,8EAKe,SAASA,EAAKC,GAC3B,MAAMC,EAAUC,IAChB,IAAIC,EAAYH,EAAMI,UACtB,OACE,kBAAC,IAAD,CACEC,IAAK,eAAiBF,EAAUG,KAAO,OACvCC,MAAOJ,EAAUK,WACjBC,UACEN,EAAUO,MACNT,EAAQE,EAAUO,OAAS,IAAMP,EAAUO,MAK3C,GAENC,KAAMR,EAAUQ,KAChBC,QAAS,KACE,OAATT,QAAS,IAATA,OAAA,EAAAA,EAAWU,WAAX,OACIV,QADJ,IACIA,OADJ,EACIA,EAAWU,UAAUb,EAAMc,SAAUd,EAAMe,kBAC3CC,QAAQC,QAKpB,MAAMf,EAAYgB,YAAgB,CAChCC,OAAQ,CACNC,KAAM,KAQRC,QAAS,CAEPC,MAAO,EAEPC,OAAQ,OAEVC,cAAe,CACbC,SAAU,SACVH,MAAO,OAEPF,KAAM,KAGRM,eAAgB,CACdN,KAAM,KAGRO,MAAO,CACLP,KAAM,GAERQ,MAAO,CACLR,KAAM,GAERS,UAAW,CACTC,SAAU,WACVV,KAAM,KAERW,iBAAkB,CAChBD,SAAU,YAEZE,SAAU,CACRZ,KAAM,MACNE,MAAO,MACPQ,SAAU,e,iCCzEd,qGAiVeG,IA3SwBC,IACrC,MAAOC,EAAYC,GAAiBC,mBAAS,CAC3CC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAGR,IAAIC,EAAcC,IAAMC,WAAWC,gBAAgBC,KAEnD,MAAOC,EAASC,GAAcZ,oBAAS,IAChCa,EAAcC,GAAmBd,mBAAS,cAC3Ce,EAAgB,CACpB9C,KAAM,aACNK,KAAM,YACNS,KAAM,IAyBRiC,oBAAU,KACRC,EAAiBpB,EAAYqB,OAASrB,EAAYqB,OAAS,SAC1D,IAEH,IAAIC,EAAUC,cACd,MAAMC,EAAQC,IACRzB,EAAY0B,YAAa1B,EAAY0B,YAAY,kBAE/C1B,EAAY2B,WACd3B,EAAY4B,UAAUH,GAEtBH,EAAQO,UAKRT,EAAoBU,IACpBA,IACc,WAAZA,EACF5B,EAAc,CACZE,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,UAAZsB,EACT5B,EAAc,CACZE,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,UAAZsB,EACT5B,EAAc,CACZE,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,SAAZsB,EACT5B,EAAc,CACZE,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,SAAZsB,GACT5B,EAAc,CACZE,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,MAsDd,OACE,kBAAC,IAAD,CACEnC,MAAO2B,EAAY+B,YAAc,CAAEC,OAAQ,SAAY,CAAEA,OAAQ,QAEjE,kBAAC,IAAD,CAAYzD,UAAU,UACpB,yBACEA,UAAU,gBACVF,MAAQ2B,EAAY+B,YAAqC,GAAvB,CAAEE,cAAe,IAElDjC,EAAYkC,aACX,yBACE3D,UAAU,cACV4D,QAASnC,EAAYkC,aAAaE,aAElC,6BACE,kBAAC,IAAD,CACEC,KAAK,QACL3D,QAAU+C,IACRD,EAAKC,KAGP,kBAAC,IAAD,CAAMvD,UAAWgD,MAGrB,yBAAK3C,UAAU,qBACb,kBAAC,IAAD,CACEA,UAAU,WACVuC,QAASA,EACTwB,YAAcb,GAtJ9B,SAA4BX,GAC1BhC,QAAQC,IAAI+B,GACZC,EAAWD,GACPA,GACFG,EAAgB,gBAChBjB,EAAYkC,aAAaK,mBAAmB,GAAI,GAAI,aAEpDvC,EAAYkC,aAAaK,mBAAmB,GAAI,GAAI,aACpDtB,EAAgB,eA8IgBuB,CAAmBf,EAAEgB,OAAO3B,YAGpD,yBAAKvC,UAAU,oBACb,kBAAC,IAAD,CAAUA,UAAU,iBAAiByC,GAAyB,MAIlE,qCAEF,yBAAKzC,UAAU,aACS,QAArByB,EAAY0C,OAAmBzC,EAAWK,MACzC,kBAAC,IAAD,CACE+B,KAAK,QACL3D,QAAU+C,IACRD,EAAKC,KAGP,kBAAC,IAAD,CAAMvD,UAAWgD,KAGnB,sCAGJ,yBAAK3C,UAAU,gBACZ,IACD,kBAAC,IAAD,KAAUyB,EAAY0C,QAExB,yBAAKnE,UAAU,gBACb,kBAAC,IAAD,CACE4D,OAAQlC,EAAWG,OACnBiC,KAAK,QACL3D,QAASsB,EAAY2C,aAErB,kBAAC,IAAD,CACElE,KAAK,YACLmE,KAAMxC,IACN/B,MAAO,CAAEwE,SAAU,WAGvB,kBAAC,IAAD,CACEV,OAAQlC,EAAWO,KACnB6B,KAAK,QACL3D,QAASsB,EAAY8C,WAErB,kBAAC,IAAD,CACE3E,IAAK,8BACLM,KAAK,YAELJ,MAAO,CAAEwE,SAAU,WAIvB,kBAAC,IAAD,CACEV,OAAQlC,EAAWI,MACnBgC,KAAK,QACL3D,QAASsB,EAAY+C,YAGrB,kBAAC,IAAD,CAAM7E,UAvNK,CACrBE,KAAM,QACNK,KAAM,YACNS,KAAM,OAsNE,kBAAC,IAAD,CACEiD,OAAQlC,EAAWM,KACnB8B,KAAK,QACL3D,QAAU+C,IA3IhBzB,EAAY0B,YAAa1B,EAAY0B,YAAY,kBAEnDJ,EAAQ0B,KAAK,iBACbC,iBA0IQ,kBAAC,IAAD,CAAM/E,UAnOI,CACpBE,KAAM,WACNK,KAAM,YACNS,KAAM,OAkOE,kBAAC,IAAD,CACEiD,OAAQlC,EAAWK,MACnB+B,KAAK,QACL3D,QAAU+C,IACRD,EAAKC,KAGP,kBAAC,IAAD,CAAShD,KAAK,YAAYmE,KAAMM,OAElC,kBAAC,IAAD,CAAWf,OAA+B,KAAvBnC,EAAYqB,OAAegB,KAAK,SACjD,kBAAC,IAAD,SAIL5B,EAAY0C,QAAUnD,EAAY+B,aACjC,kBAAC,IAAD,CAAYxD,UAAU,qBACpB,kBAAC,IAAD,CACE6E,MAAO3C,EAAY4C,cACnBC,UAAU,UACVhB,YAAcb,GA3JH8B,WACrB,IAAIC,EAAO/B,EAAEgB,OAAOW,MAChBK,EACFC,aACA,cACAF,EAAKG,UACL,cACAH,EAAKI,UAEP,IAAIC,EAAiB,CACnBC,SAAUrD,EAAYqD,SACtBC,SAAU,gBAGRC,QAAiBC,YAAeR,EAAKI,GACrCK,EAASF,EAASR,KAAKA,KAAKW,UAAU,GAC1C,SAAUH,EAASI,QAAS,CAC1B,IAAIC,QAAoBC,IAA4BJ,EAAOG,aACvDA,GAAa3D,IAAM6D,SAASF,GAEhC,IAAIT,QAAkBU,IACpBJ,EAAOrD,KAAK2D,mBAEVZ,GAAWlD,IAAM6D,SAASX,GAE9B,IAAIP,QAAsBiB,IAA8Bd,GAEpDH,GAAe3C,IAAM6D,SAASlB,GAEvB3C,IAAMC,WAAWC,gBAC5BZ,EAAYyE,aACRzE,EAAYyE,eACZ3F,QAAQC,IAAI,aA2HY2F,CAAejD,GACnCkD,UACG3E,EAAY4E,WAA0C,GAA7BnE,EAAY0C,OAAO0B,OAE/CxG,MACG2B,EAAY4E,UAA6C,GAAjC,CAAEE,gBAAiB,WAE9CC,iBA9Ha,CACvBC,SAAU,oBA+HCvE,EAAY0C,OAAO8B,IAAI,CAACC,EAAMC,IAE3B,kBAAC,IAAD,CACE/B,MAAO8B,EACPE,IAAKD,EACL5G,UAAU,oBAET2G,EAAKvB,UAAY,IAAMuB,EAAKG,aAKrC,kBAAC,IAAD,CACElH,IAAI,6BACJI,UAAU,kBACV4D,QAASnC,EAAY4E,WAA0C,GAA7BnE,EAAY0C,OAAO0B,c,uDCxUnE,qDAGe,SAAS5B,IACtBvC,IAAM6D,SAAS,CAAEe,KAAMC,MACvB7E,IAAM6D,SAAS,CAAEe,KAAMC,MACvB7E,IAAM6D,SAAS,CAAEe,KAAMC,MACvB7E,IAAM6D,SAAS,CAAEe,KAAMC,MACvB7E,IAAM6D,SAAS,CAAEe,KAAMC,Q,uDCRzB,sDAwMeC,IArK2B,IAqBnC,IArBoC,MACzC9C,EADyC,KAEzCtE,EAFyC,KAGzCkH,EAHyC,MAIzClC,EAJyC,SAKzCqC,EALyC,SAMzCC,EANyC,OAOzCC,EAPyC,QAQzCC,EARyC,SASzCC,EATyC,YAUzCC,EAVyC,YAWzCC,EAXyC,KAYzCnD,EAZyC,OAazCoD,EAbyC,SAczCC,EAdyC,YAezCC,EAfyC,IAgBzCC,EAhByC,SAiBzCC,EAjByC,WAkBzCC,EAlByC,QAmBzCC,EAnByC,YAoBzCC,GACI,EACJ,MAAOC,EAAYC,GAAiBtG,oBAAS,GA8C7C,OACE,yBACE5B,UAAU,qBACVF,MAAO6H,EAAc,CAAEQ,MAAO,QAASC,QAAS,KAAQ,IAExD,kCACE,gCAASjE,GACC,QAAT4C,EACC,kBAAC,IAAD,CAAU/G,UAAU,yBAApB,OAEA,qCAEF,kBAAC,IAAD,CACEH,KAAMA,EACNkH,KAAMA,EACNlC,MACW,QAATkC,IAAA,OAAkBlC,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOwD,UAAU,EAAG,GAAGC,SAAS,QAC9CzD,EAAM0D,MAAM,OAAO,GACnB1D,EAEN2D,YAAY,EACZC,eAAe,MAEfC,UAnEUxF,IACb6E,GACDA,EAAQ7E,GAENA,EAAE2D,IAAIP,OAAS,IACnB4B,GAAeS,YAAQrB,EAAUpE,EAAE2D,MAC9B8B,YAAQrB,EAAUpE,EAAE2D,UAAzB,GACE3D,EAAE0F,kBACK,KA4DH7E,YAxDab,IACnB,IACI2F,EADAC,EAAM5F,EAAE6F,OAAOlE,MAEnB,GAAa,QAATkC,GAAkBc,EAAU,CAC9BiB,EAAM,MAAQA,EAAIE,QAAQ,MAAO,OACjC,IAAIC,EAAWC,YAAeJ,EAAW,EAANlB,EAAU,GAC7CrH,QAAQC,IAAIyI,GACD,MAAPH,GAIAjB,EAHGoB,EAGM,GAFA,gBAAkBrB,EAAM,iBAKrCrH,QAAQC,IAAI,YAAasI,GAEvB5F,EAAE6F,OAAO1B,UACXyB,EAAMK,YAAgBL,EAAK5F,EAAE6F,OAAO1B,QAAS,MAEzB,UAAlBnE,EAAE6F,OAAOhC,OACX8B,EAAWO,YAAcN,GAIvBjB,EAHGgB,EAGM,GAFA,8BAIXtI,QAAQC,IAAIqI,GACZX,GAAeW,IAEZnB,GAAUR,EAAShE,EAAG4F,EAAKD,IA4B1Bf,WAAYA,EACZX,SAAUA,EACVkC,aAAa,MACbhC,QAASA,EACTG,YAAaA,EACbxH,UAAU,YACVsJ,UAAYpG,IACNuE,GAAQA,EAAOvE,IAIrBqG,UAAW3B,EACX4B,UAAW5B,EACXF,SAAUA,IAAsB,IAE9BM,GAAe3D,GACf,kBAAC,IAAD,CACE1E,UAAW0E,EACXhE,SAAUR,EACVS,iBAAkBkH,KAKvBQ,GAAe3D,GACd,kBAAC,IAAD,CAEArE,UAAU,cAEVyJ,OAAO,OAEP3F,KAAK,QAEL3D,QAAS,IAAMkE,EAAKjE,UAAUP,EAAM2H,IAIpC,kBAAC,IAAD,CAEE7H,UAAW0E,EAEXhE,SAAUR,EAEVS,iBAAkBkH,MASxB,yBAAKxH,UAAU,IACZoH,GACC,kBAAC,IAAD,CAASsC,MAAM,SAAS1J,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,wCACjBoH,KAKRa,GAAcV,GACb,kBAAC,IAAD,CAASmC,MAAM,SAAS1J,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,wCACjBuH,O,scCtJAoC,EAAA,I,+EAAsB,IAAiB,GAalD,YAAK,eAAiB,EAAkB,EAA4B,EAAY,6EAYhF,YAAAC,iBAAgB,SAMf,wFAkBD,YAAAC,YAAW,SAAgB,EAAkB,EAAkB,EAAkB,EAAY,+GAgB7F,YAAAC,gBAAe,SAAgB,EAAkB,EAAY,mHAgB7D,YAAAC,iBAAgB,SAAgB,EAAkB,EAAY,oHAiB9D,YAAAC,qCAAoC,SACnB,EAEf,EACA,EAAAC,GAAyB,qIAc3B,YAAAC,kBAAiB,SAAgB,EAAe,yFAgBhD,YAAAC,iBAAgB,SAAgB,EAAkB,EAAY,oHAiB9D,YAAAC,2BAA0B,SAAiB,EAAiB,EAAkB,EAAY,8HAa1F,YAAAC,YAAW,SAAiB,EAAAC,GAAmB,gFAW/C,YAAAC,iBAAgB,gGAmBhB,YAAAC,cAAa,SACI,EACA,EAGf,EAAc,EACd,EAAyB,iHAmB3B,YAAQ,kBAAgB,EAAiB,EAAkB,EAAkB,EAAY,4GAYzF,YAAAC,wBAAuB,SAACC,GAAoB,0FAU5C,YAAAC,iBAAgB,SAACC,GAAkC,2EAiBnD,YAAAC,wBAAuB,SAErB,EAAe,EACfD,EACY,2H,sPA9ShB,E,CA0CmC,O,iCC1CnC,kCAiBeE,IATuC,IAAe,IAAd,KAAEC,GAAW,EAClE,OACE,yBAAK/K,UAAU,sCACb,yBAAKA,UAAU,2BACb,kBAAC,IAAD,CAAUA,UAAU,IAAI+K,O,iCCZhC,oBAyBeC,IAlBuD,IAI/D,IAJgE,QACrEC,EADqE,MAErE9G,EAFqE,UAGrEnE,GACI,EACJ,OACE,yBACEA,UACEA,EAAYA,EAAY,sBAAwB,sBAGlD,kCACE,gCAASmE,GACR8G,M,iCCpBT,4CAsHeC,IAxFmC,IAY3C,IAZ4C,MACjD/G,EADiD,KAEjDtE,EAFiD,MAGjDgF,EAHiD,SAIjDqC,EAJiD,OAKjDE,EALiD,YAMjDG,EANiD,YAOjDC,EAPiD,WAQjD2D,EARiD,SASjD/E,EATiD,aAUjDgF,EAViD,KAWjDrE,GACI,EAEJ,MAAOsE,EAAQC,GAAa1J,mBAAS,IACrC,IAAImB,EAAUC,cACdJ,oBAAU,KACR0I,EAAU,CAAEnH,MAAOiH,EAAcvG,MAAOA,KACvC,IAgBH,OACE,yBAAK7E,UAAU,sBACb,kCACE,gCAASmE,GACT,kBAAC,IAAD,CAEEtE,KAAMA,EACN2H,YAAaA,EACb3C,MAAOA,GAASwG,EAChBtH,YAvBab,IACnB,IAAI4F,EAAM5F,EAAE6F,OAAOlE,MACnByG,EAAUxC,GACE,eAARA,EACF/F,EAAQ0B,KAAK,eAEbyC,EAAShE,EAAG4F,IAkBRyC,eAAA,EACAxG,UAAU,UACV/E,UAAU,gBACVwG,iBAjBQ,CACdC,SAAU,wBAkBM,YAATM,GACC,kBAAC,IAAD,CAAiBlC,MAAM,aAAa5E,MAAM,iBAA1C,kBAGE,yBAAKL,IAAI,0BAff,OAkBGuL,QAlBH,IAkBGA,OAlBH,EAkBGA,EAAYzE,IAAI,CAACC,EAAMC,IACb,YAATG,EACE,kBAAC,IAAD,CAAiBF,IAAKD,EAAO/B,MAAO8B,GACjCA,EAAK6E,YACL7E,EAAK8E,cAFR,IAEwB9E,EAAK6E,YAC1B7E,EAAK+E,OAGR,kBAAC,IAAD,CAAiB7E,IAAKD,EAAO/B,MAAO8B,EAAK9B,OACtC8B,EAAKxC,UAOhB,yBAAKnE,UAAU,IACZoH,GACC,kBAAC,IAAD,CAASsC,MAAM,SAAS1J,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,qBAAqBoH,KAK/C,kBAAC,IAAD,CAASsC,MAAM,SAAS1J,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,qBAAqBuH,O,4NC0HlCoE,MAlNmC,IAY3C,IAZ4C,MACjD9G,EADiD,KAEjDhF,EAFiD,OAGjDuH,EAHiD,KAIjD/C,EAJiD,cAKjDuH,EALiD,OAMjDnE,EANiD,mBAOjDoE,EAPiD,MAQjD1H,EARiD,YASjD2H,EATiD,QAUjDzE,EAViD,WAWjDS,GACI,EA4BJ,MAAMiE,EAAY,CAChBlM,KAAM,gBACNK,KAAM,MACND,MAAO,UACPG,UAAW,KACT0H,EAAWjI,MAkBRmM,EAAqBC,GAA0BrK,mBAAS,KACxDsK,EAAuBC,GAA4BvK,mBAAS,IAC5DwK,EAAiBC,GAAsBzK,oBAAS,IAEhD0K,EAAOC,GAAY3K,mBAAS,OAC5B4K,EAAqBC,GAAyB7K,oBAAS,IACvD8K,EAAkBC,GAAW/K,mBAAS,OACtCgL,EAAcC,GAAmBjL,mBAASwF,GAIjDxE,oBAAU,KACRiK,EAAgBzF,IACf,CAACA,IAEJxE,oBAAU,KAEN+J,EADC9H,EACOkH,EAEA1H,IAET,CAACA,IAEJzB,oBAAU,KAER,GADArC,QAAQC,IAAI,qCAAsCsL,GAC9CA,GAAeA,EAAYxF,OAAS,EAAG,CACzC,IAAIwG,EAAW,GACW,GAAtBhB,EAAYxF,QAAewF,EAAY,IAAMQ,GAC/C/L,QAAQC,IAAI,cACZsM,EAAW,CAAChB,EAAY,IACxBW,GAAsB,GACtBE,EAAQtI,GACR4H,EAAuB,IACvBI,GAAmB,GACnBT,EAAc/L,EAAMiM,EAAY,KACvBA,IACTgB,EAAWhB,EAAYiB,OACpBC,GACCA,EAAWC,cAAcC,QAAQZ,EAAMW,gBAAkB,GAE7DhB,EAAuBa,GACvBX,EAAyB,GACzBE,GAAmB,GACnBM,EAAQZ,SAGVE,EAAuB,KAGxB,CAACH,IAEHlJ,oBAAU,KACTrC,QAAQC,IAAI,uCAAwCqE,GACpD0H,EAAS1H,IACR,CAACA,IAEJjC,oBAAU,KACRrC,QAAQC,IAAI,sCAAuC8L,GACnDG,GAAsB,GACjBH,GAAyB,GAAhBA,EAAMhG,SAClB2F,EAAuB,IACvBI,GAAmB,GACnBM,EAAQtI,KAET,CAACiI,IAGJ1J,oBAAU,OAIR,CAAC4J,IAgBH,OACE,yBAAKxM,UAAU,kBACb,kBAACiH,EAAA,EAAD,CACEpH,KAAMA,EACNgF,MAAOA,EACPV,MAAOA,EACPiD,OAAQwF,EACR7F,KAAK,OACLI,UAAU,EACVD,SAtBWlC,MAAO9B,EAAQ2B,KAC9B8H,EAAQZ,GACRF,EAAmB3I,EAAG2B,IAqBlByC,SAAS,OACTE,YAAarD,EACbE,KAAMqI,EACNjF,OAASvE,IACP3C,QAAQC,IAAI,wBAEd6G,QAASA,GAAoB,GAC7BE,YAAY,0BACZO,YAAY,EACZE,aAAa,EACbD,QAAU7E,IACS,KAAbA,EAAEiK,UACJ5M,QAAQC,IAAI,kBAAmBgM,GAC1BA,GA3Hb1E,EAAWjI,OAqIPuM,GAGE,kBAAC,IAAD,CAASpM,UAAS,mBAEdgM,GAAuBA,EAAoBtF,IAAI,CAACsG,EAAYpG,IAC1D,kBAAC,IAAD,CAAS5G,UAAS,aAAgBG,QAAS,IA9C9B6M,KACzBP,GAAsB,GACtBJ,GAAmB,GACnBT,EAAc/L,EAAMmN,GACpBL,EAAQtI,IA0CqD+I,CAAkBJ,GAAanG,IAAKmG,EAAapG,GAAQoG,MAM1GhB,GAAsD,IAA/BA,EAAoB1F,SAC7C,kBAAC,IAAD,CAAStG,UAAS,cAAiB,2BClK7CqN,EAAgB,GAMpB,IAAIC,EAAe,IAAIC,IAEvB,IAAIC,EAAoB,GACpBC,EAAmB,GAg/BRC,MA5+B6BC,qBAC1C,CAAC,EAAkBC,KAAS,IAAD,gBAA1B,aAAEC,GAAwB,EACrB9K,EAAUC,cACA8K,mBAAd,MAIMC,EAAW,CACflO,KAAM,YACNK,KAAM,MACND,MAAO,UACPG,UA2GF,SAAsBP,EAAMmO,GAC1BzN,QAAQC,IAAI,eAAeX,GAuBf,eAATA,GACDoO,EAAqBC,GACnB,IACKA,EACH,CACErO,KAAM,cAAgB,IAAIsO,MAAOC,kBACjCvJ,MAAO,GACPwJ,UAAU,EACVvC,YAAc,GACdzH,KAAOiK,KAIb/N,QAAQC,IAAI+N,IACC,mBAAN1O,GACP2O,EAAmBN,GACjB,IACKA,EACH,CACErO,KAAM,mBAAqB,IAAIsO,MAAOC,kBACtCvJ,MAAO,GACPwJ,UAAU,EACVvC,YAAc,GACdzH,KAAOiK,OAnJXG,EAAY,CAChB5O,KAAM,gBACNK,KAAM,MACND,MAAO,gBAEPG,UAAWsO,IAGPC,EAAmB,CACvB9O,KAAM,gBACNK,KAAM,MACND,MAAO,gBAEPG,UAAW,QAUPkO,EAAa,CACjBzO,KAAM,uBACNK,KAAM,MACND,MAAO,UACPG,UAAYP,IACVU,QAAQC,IAAI,gBACZD,QAAQC,IAAIX,GAEZyN,EAAasB,OAAO/O,GACjBA,EAAKyI,SAAS,cACjB2F,EAAqBC,GAAWA,EAAUnB,OAAO8B,GAAQA,EAAK,OAAWhP,IAEvE2O,EAAmBN,GAAWA,EAAUnB,OAAO8B,GAAQA,EAAK,OAAWhP,OAKtEiP,EAAaC,GAAkBnN,mBAAS,CAC7CoN,WAAYxB,EACZyB,gBAAiBxB,KAEZyB,EAAMC,GAAWvN,mBAAS,CAC/BoN,WAAY,GACZC,gBAAiB,GACjBG,WAAY,GACZC,YAAaC,IACbC,QAASA,IACTC,UAAW,GACXC,aAAc,CACZC,qBAAsB,GACtBC,uBAAwB,GACxBrF,YAAa,IAEfsF,cAAe,GACfC,cAAe,GACfC,WAAW,EACXC,OAAO,EACPC,aAAc,KAEhB,IAAIC,EAAc,CAAEjB,WAAYjB,EAAUkB,gBAAiBlB,GAC3D,MAAO3G,EAAQ8I,GAAatO,mBAAc,KACnCyC,EAAM8L,GAAWvO,mBAASqO,IAE1BnN,EAAQsN,GAAaxO,mBAASiM,IAC9BwC,EAA0BC,GAC/B1O,mBAAc,CACZ2O,QAAS,GACTC,UAAW,GACXC,UAAW,EACXpB,YAAa,KAGf,IAAIqB,EAAkB,CACpB7Q,KAAO,aACPgF,MAAQ,GACRwJ,UAAW,EACXvC,YAAc,GACdzH,KAAO0J,GAGL4C,EAAwB,CAC1B9Q,KAAO,kBACPgF,MAAQ,GACRwJ,UAAW,EACXvC,YAAc,GACdzH,KAAO0J,GAIT,MAAOQ,EAAmBN,GAAwBrM,mBAAS,CAAC8O,KACrDE,EAAiBpC,GAAsB5M,mBAAS,CAAC+O,KAEjDE,EAAmBC,GAAyBlP,oBAAS,IACrDmP,EAAiBC,IAAsBpP,oBAAS,IAChDkK,GAAYmF,IAAkBrP,mBAAS,IAyDhD,SAAS8M,GAAgB7O,GACvBkP,EAAe,IACVD,EACH,CAACjP,GACU,oBAATA,EACI2N,EAAkB0D,OAAO,EAAG1D,EAAkBlH,QAC9CmH,EAAiByD,OAAO,EAAGzD,EAAiBnH,UAItD1D,oBAAU,KACRuO,KACAC,MACC,IAGHxO,oBAAU,KACNrC,QAAQC,IAAI0O,IACb,CAACA,IAEJtM,oBAAU,OAIP,CAACiL,IAEJ,MAAMuD,GAAWpM,UACf,IAAIqM,QAAiBC,cAUX,IAAD,KARP,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAKxL,UACPyK,EAA6BpC,IAAD,IACvBA,EACHsC,UAAS,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAKpM,QAElBsM,WAAW,KACThR,QAAQC,IAAI6P,IACX,MAEHH,EAAU,IACL9I,EACHoK,SAAY,OAAHH,QAAG,IAAHA,GAAA,UAAAA,EAAKpM,YAAL,eAAWwM,WAAX,OAAsBJ,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAKpM,YAA3B,aAAsB,EAAWyM,UAM5CP,GAAiBnM,UACrB,IAAIqM,QAAiBM,cAErB,IAIIC,EAJmBC,IACrB,IAAI1D,KACJ,UAAIkD,QAAJ,IAAIA,OAAJ,EAAIA,EAAKS,YAAa,IAAM,GAEUC,cACxCzB,EAA6BpC,IAAD,IACvBA,EACHqC,QAAO,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAKW,eACdvB,UAAS,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAKS,WAChBzC,YAAauC,KAEf,IAAIK,EAAcC,IAAO,IAAI/D,KAAKyD,IAAmBO,OACnD,mBAEFhD,EAAQ,IACHD,EACHK,QAAS6C,YAAcR,GACvBvC,YAAa4C,KAKjB,IAAII,GAAmBC,cAEvB,MAAMC,GAAe,CAACrP,EAAQ2B,KAC5BtE,QAAQC,IAAI0C,EAAE6F,OAAOlJ,MACrBU,QAAQC,IAAI0C,EAAE6F,OAAOlE,OACrBtE,QAAQC,IAAI0O,GACZ3O,QAAQC,IAAI0O,GACZC,EAAQ,IACHD,EACH,CAAChM,EAAE6F,OAAOlJ,MAAOqD,EAAE6F,OAAOlE,QAE5BqL,EAAU,IAAK9I,EAAQ,CAAClE,EAAE6F,OAAOlJ,MAAO,KAClB,eAAlBqD,EAAE6F,OAAOlJ,MACXqP,EAAKD,gBAAkB,GACvBP,GAAgB,cAChByB,EAAQ,CAAElB,gBAAiBR,EAAWO,WAAYjB,KACvB,oBAAlB7K,EAAE6F,OAAOlJ,OAClB6O,GAAgB,mBAChBQ,EAAKF,WAAa,GAClBmB,EAAQ,CAAEnB,WAAYP,EAAWQ,gBAAiBlB,KAEpDoB,EAAQ,IACHD,EACH,CAAChM,EAAE6F,OAAOlJ,MAAOgF,IAGI,KAAnB3B,EAAE6F,OAAOlE,OACXsL,EAAQF,GAEV1P,QAAQC,IAAI0O,IAMRsD,GAAiB,CAACtP,EAAG2B,KACzBtE,QAAQC,IAAI,2BAA4BqE,GACxC,MAAMhF,EAAOqD,EAAE6F,OAAOlJ,KACtBU,QAAQC,IAAI,2BAA4BX,GACnCgF,EAIMA,IACT4N,GAAY5S,EAAM,QAASgF,GACvBhF,EAAKyI,SAAS,cAChBoK,GAAgB7N,GACPhF,EAAKyI,SAAS,oBACvBqK,GAAkB9N,GAGpB+N,GAAiB/S,EAAMgF,KAXvBqL,EAAU,IAAK9I,EAAQ,CAACvH,GAAO,KAC/B4S,GAAY5S,EAAM,QAAS,IAC3B4S,GAAY5S,EAAM,cAAe,MAa/B4S,GAAc,CAAC5S,EAAMgT,EAAMhO,KAC/B,GAAIhF,EAAKyI,SAAS,cAAe,CAC/B,IAAI1B,EAAQ2H,EAAkBuE,UAAUjE,GAAQA,EAAMhP,OAASA,GAC3DkT,EAAwB,IAAIxE,GAC5ByE,EAAWD,EAAsBnM,GAC5B,SAANiM,GACCI,GAAWD,GAEfA,EAASH,GAAQhO,EACjBoJ,EAAqB8E,QAChB,GAAIlT,EAAKyI,SAAS,mBAAoB,CAC3C,IAAI1B,EAAQgK,EAAgBkC,UAAUjE,GAAQA,EAAMhP,OAASA,GACzDqT,EAAsB,IAAItC,GAC1BuC,EAAiBD,EAAoBtM,GAChC,SAANiM,GACDI,GAAWE,GAEbA,EAAeN,GAAQhO,EACvB2J,EAAmB0E,KAIjBN,GAAmB5N,MAAOnF,EAAMgF,KACpC,GAAGhF,EAAKyI,SAAS,cAAc,CAC7B,IAAI3C,QAAeyN,YAAkBvO,GACrC4N,GAAY5S,EAAK,cAAc8F,EAAOV,WAClC,GAAGpF,EAAKyI,SAAS,mBAAmB,CACxC,IAAI3C,QAAe0N,YAAgBxO,GACnC4N,GAAY5S,EAAK,cAAc8F,EAAOV,QAKpCgO,GAAcpE,IACbA,EAAMR,SACPQ,EAAK,KAAWd,EAEhBc,EAAK,KAAWP,GAIhBxG,GAAcjI,IAClBqQ,EAAU,IAAK9I,EAAQ,CAACvH,GAAO,KAC/ByN,EAAasB,OAAO/O,GACjBA,EAAKyI,SAAS,eACfiG,EAAkB+E,QAAQzE,IACrBA,EAAK,MAAUhP,IAChBgP,EAAK,MAAY,GACjBoE,GAAWpE,MAGfZ,EAAqB,IAAIM,KAEnB1O,EAAKyI,SAAS,qBACpBsI,EAAgB0C,QAAQzE,IACnBA,EAAK,MAAUhP,IAChBgP,EAAK,MAAY,GACjBoE,GAAWpE,MAGfL,EAAmB,IAAIoC,MAerB2C,GAAqB,CAAC1T,EAAKgF,KAU/B,GATAtE,QAAQC,IAAI,0BAA0BX,GACtCU,QAAQC,IAAI,2BAA2BqE,GAZpB,EAAChF,EAAMgF,KAC1B,IAAI2O,GAAW,EAMf,OALI3T,EAAKyI,SAAS,cAChBkL,EAAWjF,EAAkBkF,KAAK5E,GAAQA,EAAMhP,MAAMA,GAAQgP,EAAMhK,QAAQA,GACnEhF,EAAKyI,SAAS,qBACvBkL,EAAW5C,EAAgB6C,KAAK5E,GAAQA,EAAMhP,MAAMA,GAAQgP,EAAMhK,QAAQA,IAErE2O,GAOJE,CAAa7T,EAAKgF,GACnBqL,EAAU,IAAK9I,EAAQ,CAACvH,GAAe,eAAPA,EAAuB,oCAAsC,sCAE7FqQ,EAAU,IAAK9I,EAAQ,CAACvH,GAAO,KAC/B8T,GAAmB9T,EAAKgF,EAAMhF,IAE5BA,EAAKyI,SAAS,cAAe,CAC/B,IAAI1B,EAAQ2H,EAAkBuE,UAAUjE,GAAOA,EAAMhP,OAAOA,GACxDkT,EAAwB,IAAIxE,GAChCwE,EAAsBnM,GAAO/B,MAAMA,EACnCkO,EAAsBnM,GAAOkF,YAAY,GACzCmC,EAAqB8E,QAChB,GAAIlT,EAAKyI,SAAS,mBAAoB,CAC3C,IAAI1B,EAAQgK,EAAgBkC,UAAUjE,GAAOA,EAAMhP,OAAOA,GACtDqT,EAAsB,IAAItC,GAC9BsC,EAAoBtM,GAAO/B,MAAMA,EACjCqO,EAAoBtM,GAAOkF,YAAY,GACvC0C,EAAmB0E,KAMnBR,GAAmB7N,IACvBtE,QAAQC,IAAI,mBACZ0P,EAAU,IAAK9I,EAAQ,gBAAoB,KAC3CwJ,EAAgB0C,QAAQzE,IACtBvB,EAAasB,OAAOC,EAAMhP,QAE5B,IAAI+T,EAA4B,IAAIjD,GACpCiD,EAA0BvP,KAAOsK,EACjCH,EAAmB,CAACoF,KAKhBjB,GAAqB9N,IACzBtE,QAAQC,IAAI,qBACZ0P,EAAU,IAAK9I,EAAQ,WAAe,KACtCmH,EAAkB+E,QAAQzE,IACxBvB,EAAasB,OAAOC,EAAMhP,QAE5B,IAAIgU,EAAsB,IAAInD,GAC9BmD,EAAoBxP,KAAKsK,EACzBV,EAAqB,CAAC4F,KA6BhBpM,GAASzC,UAGb,GAFAzE,QAAQC,IAAI,UACZD,QAAQC,IAAI0C,EAAE6F,OAAOlJ,KAAMqD,EAAE6F,OAAOlE,OAChC3B,EAAE6F,OAAOlE,OAA2B,IAAlB3B,EAAE6F,OAAOlE,MAAa,CAAC,IAAD,EAE1C,IAAIY,EAgBJ,GAjBAyK,EAAU,IAAK9I,EAAQ,CAAClE,EAAE6F,OAAOlJ,MAAO,KAatC4F,EAVEvC,EAAE6F,OAAOlJ,KAAKyI,SAAS,oBAURwL,YAAwB5Q,EAAE6F,OAAOlE,aAEjCkP,YAAsB7Q,EAAE6F,OAAOlE,OAElD,UAAIY,SAAJ,aAAI,EAAUI,QAAS,CAAC,IAAD,kBACjBmO,GAAoB,UAAAvO,EAASR,YAAT,mBAAeA,YAAf,mBAAqBW,UAAU,UAA/B,eACpByH,gBAAiB,WAAC5H,EAASR,YAAV,iBAAC,EAAeA,YAAhB,iBAAC,EAAqBW,UAAU,UAAhC,aAAC,EAAmCqO,WAEzDC,MAAMC,UAAU1P,KAAK2P,MAAM/G,EAAe2G,GAC1CzT,QAAQC,IAAIwT,GAUZzT,QAAQC,IAAIwT,EAAmB3G,GAC/B6C,EAAU,IACL9I,EACH,CAAClE,EAAE6F,OAAOlJ,OAAO,UAAA4F,EAASR,YAAT,mBAAeA,YAAf,mBAAqBW,UAAU,UAA/B,eAAmCyO,gBAChD5O,EAASR,KAAKA,KAAKW,UAAU,GAAGyO,eAChC,sBACA,6BAED,CAAC,IAAD,QACL9T,QAAQC,IAAI0C,EAAE6F,OAAOvB,aACrB0I,EAAU,IACL9I,EACH,CAAClE,EAAE6F,OAAOlJ,OACA,QAAR,EAAA4F,SAAA,mBAAUR,YAAV,mBAAgBA,YAAhB,mBAAsBW,UAAU,UAAhC,eAAoC8L,QACpC,WAAaxO,EAAE6F,OAAOvB,eAK9BjH,QAAQC,IAAI0O,IAGRyE,GAAqB3O,MAAOnF,EAAKgF,EAAM2C,KAC3C,GAAI3C,GAAkB,IAATA,EAAa,CAAC,IAAD,EAExB,IAAIY,EAOJ,GARAyK,EAAU,IAAK9I,EAAQ,CAACvH,GAAO,KAI7B4F,EADE5F,EAAKyI,SAAS,oBACCwL,YAAwBjP,SAExBkP,YAAsBlP,GAEzC,UAAIY,SAAJ,aAAI,EAAUI,QAAS,CAAC,IAAD,kBACjBmO,GAAoB,UAAAvO,EAASR,YAAT,mBAAeA,YAAf,mBAAqBW,UAAU,UAA/B,eACpByH,gBAAiB,WAAC5H,EAASR,YAAV,iBAAC,EAAeA,YAAhB,iBAAC,EAAqBW,UAAU,UAAhC,aAAC,EAAmCqO,WAEzDC,MAAMC,UAAU1P,KAAK2P,MAAM/G,EAAe2G,GAC1C1G,EAAagH,IAAIzU,EAAKmU,GACtBzT,QAAQC,IAAIwT,GACZzT,QAAQC,IAAIwT,EAAmB3G,GAC/B6C,EAAU,IACL9I,EACH,CAACvH,IAAO,UAAA4F,EAASR,YAAT,mBAAeA,YAAf,mBAAqBW,UAAU,UAA/B,eAAmCyO,gBACvC5O,EAASR,KAAKA,KAAKW,UAAU,GAAGyO,eAChC,sBACA,6BAED,CAAC,IAAD,QACL9T,QAAQC,IAAIgH,GACZ0I,EAAU,IACL9I,EACH,CAACvH,IACS,QAAR,EAAA4F,SAAA,mBAAUR,YAAV,mBAAgBA,YAAhB,mBAAsBW,UAAU,UAAhC,eAAoC8L,QACpC,WAAalK,OA8CvB,SAAS+M,KACP,IAAI5O,EAAgB,GAGpBpF,QAAQC,IAAI8M,GACZ,IAAID,EAAgB,GACpB6G,MAAMM,KAAKlH,EAAamH,UAAUnB,QAAQoB,IACxCrH,EAAgB,IAAIqH,KAAQrH,KAE9BA,EAAciG,QAASqB,IACrB,IAAIC,EAAO,IACND,KACAzF,EAAKO,aACRoF,UAAW3F,EAAKG,aAElBuF,EAAKE,cAAgB5F,EAAKM,UAC1BoF,EAAKG,qBAAuB,KAC5BpP,EAAOlB,KAAKmQ,KAEd,IAAII,EA0BN,SACEC,EACAC,EACAC,EACA3F,GAEA,IACI4F,EADAC,EAAoB,GAEpBC,EAAUC,OAAOJ,GACjBK,EAAiC3D,IAA2BoD,GAC5DQ,EAAqB,EACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAASI,IAAK,CAAC,IAAD,IAChCN,EAAW,CACT/F,YAAa6C,IAAOhD,EAAKG,aAAa8C,OAAO,mBAC7CvL,MAAO8O,EACPT,SAAUA,EACVU,YAAW,iBAAEnG,QAAF,IAAEA,OAAF,EAAEA,EAAW3K,aAAb,QAAsB,OACjC+Q,YAAW,iBAAEpG,QAAF,IAAEA,OAAF,EAAEA,EAAWrL,aAAb,QAAsB,QAEnCkR,EAAW5Q,KAAK2Q,GAChBK,GAA0BD,EAG5B,OAAOH,EAjDqBQ,CAC1B3G,EAAKc,aACLd,EAAKG,YACLH,EAAKE,WACLF,EAAKM,WAYP,OARAjP,QAAQC,IAAI,CACVsV,iBAAgB,OAAEd,QAAF,IAAEA,IAAkB,GACpC3H,cAAe1H,EACfoQ,iBAAiB,EACjBlB,UAAW3F,EAAKG,YAChB2G,YAAa9G,EAAKE,aAGb,CACL0G,iBAAgB,OAAEd,QAAF,IAAEA,IAAkB,GACpC3H,cAAe1H,EACfoQ,iBAAiB,EACjBlB,UAAW3F,EAAKG,YAChB2G,YAAa9G,EAAKE,YA8BtB,IAAI6G,GAAwB,GAoF5B,OAlFAC,8BAAoBtI,EAAK,MACvB,4BACErN,QAAQC,IAAI,WACZ,IAAI2V,OAjHgBnR,WAEtBkL,EAAU,CACRsB,QACsB,KAApBtC,EAAKF,YAA8C,KAAzBE,EAAKD,gBAC3B,qDACA,GACNO,UACqB,KAAnBN,EAAKM,UAAmB,oCAAsC,GAChEC,aAC6C,KAA3CP,EAAKO,aAAaC,qBACd,iCACA,GACNN,WACsB,KAApBF,EAAKE,WAAoB,+BAAiC,KAG9D,IAAK,IAAIvI,KAAOO,EAQd,GAPA7G,QAAQC,IAAI4G,EAAQ,MAAOP,GAUT,eAAhBO,EAAOP,SAESuP,IAAhBhP,EAAOP,GAEP,OAAO,EAGX,OAAO,GA8EkBwP,GAKvB,GAJAJ,GAAiBF,iBAAkB,EACnCE,GAAiBpB,UAAY3F,EAAKG,YAClC4G,GAAiBD,YAAc9G,EAAKE,WACpC7O,QAAQC,IAAI,aAAc2V,GACtBA,EAAY,CACd,IAAIG,QAAe/B,KACnBhU,QAAQC,IAAI8V,EAAGpH,GACf,IAAIqH,QAAaC,YAA6BF,GAC9C,UAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAM1Q,QAAS,CAAC,IAAD,IACbJ,EAAQ,UAAG8Q,EAAKtR,YAAR,iBAAG,EAAWA,YAAd,aAAG,EAAiBW,UAAU,GAE1CH,EAASwQ,iBAAmBA,GAC5B,IAAIQ,EAAUC,YAAoBjR,GAClCgR,EAAQE,qBAAuBlR,EAASkR,qBACxCF,EAAQG,iBAAmBnR,EAASmR,iBACpCrW,QAAQC,IAAIiW,GACZ1T,EAAQ0B,KAAK,qBAAsBgS,OAY9B,CAAC,IAAD,IACLvG,EAAU,IACL9I,EACHoK,SAAiB,OAAR/L,QAAQ,IAARA,GAAA,UAAAA,EAAUR,YAAV,eAAgBwM,WAAhB,OAA2BhM,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAUR,YAArC,aAA2B,EAAgByM,eAgD5D,kBAAC,IAAD,CAAS1R,UAAU,sBACjB,kBAAC,IAAD,KACE,yBAAKA,UAAU,cACb,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CAAUA,UAAU,GAAG4D,OAA2B,KAAnBwD,EAAOoK,SACnCpK,EAAOoK,UAgCRjD,GAAqBA,EAAkB7H,IAAI,CAACmI,EAAOjI,IAgBrD,oCACA,kBAAC,EAAD,CACA/G,KAAMgP,EAAMhP,KACZuH,OAAQA,EAAOyH,EAAMhP,MAErBwE,KAAMwK,EAAMxK,KACZuH,cAAe2H,GACf1H,mBAAoB2G,GACpB/K,OAAQA,GACRtD,MAAO,qBACPU,MAAOgK,EAAMhK,MACbwC,QAAS,oBACTyE,YAAa+C,EAAM/C,YACnBhE,WAAYA,OA+BV8I,GAAmBA,EAAgBlK,IAAI,CAACmI,EAAOjI,IAcjD,oCACA,kBAAC,EAAD,CACA/B,MAAOgK,EAAMhK,MACbhF,KAAMgP,EAAMhP,KACZuH,OAAQA,EAAOyH,EAAMhP,MAErBwE,KAAMwK,EAAMxK,KACZuH,cAAe2H,GACf1H,mBAAoB2G,GACpB/K,OAAQA,GACRtD,MAAO,mBACP2H,YAAa+C,EAAM/C,YACnBhE,WAAYA,OAKd,yBAAK9H,UAAU,WACb,yBAAKA,UAAU,eACZ,IACD,kBAACkL,EAAA,EAAD,CACErL,KAAM,aACNgF,MAAOqK,EAAKE,WACZjL,MAAM,cACNiD,OAAQA,EAAOgI,WACfrI,KAAK,OACLI,UAAU,EACVD,SAAUqL,GACVjL,SAAS,OACTE,YAAY,cACZ2D,WAAYkH,MAGhB,yBAAKrS,UAAU,eACb,kBAACkL,EAAA,EAAD,CACErL,KAAM,eACNgF,MAAOqK,EAAKc,aACZ7L,MAAM,gBACNiD,OAAQA,EAAO4I,aACf7I,UAAU,EACVD,SAAUqL,GACVjL,SAAS,OACTP,KAAK,OACLS,YAAY,kBACZ2D,WAAY0L,QAIlB,kBAAC7L,EAAA,EAAD,CACE7G,MAAO+K,EAAKK,QACZtE,QACE,kBAAC6L,EAAA,EAAD,CACEjX,KAAM,cACNgF,MAAOkS,YAAqB7H,EAAKG,aACjClL,MAAM,OACNiD,OAAQA,EAAOiI,YACftI,KAAK,OACLI,UAAU,EACVD,SAreS,CAAChE,EAAG2B,KACzBqL,EAAU,IACL9I,EACHiI,YAAa,KAEQ+C,YAAcvN,GAArC,IACImS,EAAY9E,IAAO,IAAI/D,KAAKtJ,IAAQsN,OAAO,mBAC3C8E,EAAKF,YAAqB7H,EAAKG,aACnC9O,QAAQC,IAAI,IAAI2N,KAAKtJ,GAAQqK,EAAKG,YAAa,IAAIlB,KAAK8I,IACpD,IAAI9I,KAAK8I,IAAO,IAAI9I,KAAKtJ,GAC3BsK,EAAQ,IACHD,EAEH,CAAChM,EAAE6F,OAAOlJ,MAAOmX,IAInB9G,EAAU,IACL9I,EACHiI,YAAa,+BAmdL7H,YAAY,OACZ+H,QAASL,EAAKK,QAEdlL,KAp4BO,CACnBxE,KAAM,WACNK,KAAM,QACND,MAAO,kBAk4BKiX,cAAc,oBACdlX,UAAU,oBAIfoH,EAAOiI,aACN,yBAAKrP,UAAU,aACb,kBAAC,IAAD,CAAS0J,MAAM,SAAS1J,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,qBACjBoH,EAAOiI,eAKhB,kBAACnE,EAAA,EAAD,CACErL,KAAM,YACNgF,MAAOqK,EAAKM,UACZrL,MAAM,iBACNiD,OAAQA,EAAOoI,UACfrI,UAAU,EACVD,SAAUqL,GACVjL,SAAS,OACTP,KAAK,OACLS,YAAY,cACZ2D,WAAYkF,EAAyBG,YAGvC,kBAACtF,EAAA,EAAD,CACErL,KAAM,eACNgF,MAAOqK,EAAKO,aACZtL,MAAM,eACNiD,OAAQA,EAAOqI,aACf1I,KAAK,UACLI,UAAU,EACVD,SAAUqL,GACVjL,SAAS,OACTE,YAAY,gBACZ2D,WAAYkF,EAAyBE,UAGvC,kBAACtJ,EAAA,EAAD,CACEpH,KAAM,gBACNgF,MAAK,oBAAEqK,EAAKO,oBAAP,aAAE,EAAmBC,4BAArB,QAA6C,GAClDvL,MAAM,iBACN4C,KAAK,OACLI,UAAU,EACVG,SAAS,OACTE,YAAY,OACZE,UAAU,EACVR,SAAUqL,KAGZ,kBAACtL,EAAA,EAAD,CACEpH,KAAM,yBACNgF,MAAK,oBAAEqK,EAAKO,oBAAP,aAAE,EAAmBE,8BAArB,QAA+C,GACpDxL,MAAM,gBACN4C,KAAK,OACLI,UAAU,EACVG,SAAS,OACTE,YAAY,eACZE,UAAU,EACVR,SAAUqL,KAGZ,kBAACtL,EAAA,EAAD,CACEpH,KAAM,cACNgF,MAAK,oBAAEqK,EAAKO,oBAAP,aAAE,EAAmBnF,mBAArB,QAAoC,GACzCnG,MAAM,eACN4C,KAAK,OACLI,UAAU,EACVG,SAAS,OACTE,YAAY,eACZE,UAAU,EACVR,SAAUqL,U,kBCr+BT4E,MAtC2BxJ,qBACxC,CAAC,EAAkBC,KAAS,IAA3B,aAAEC,GAAwB,EACrB9K,EAAUC,cACd,MAAMoU,EAAQtJ,mBAEdlL,oBAAU,KACa,YAAjBiL,GAEFtN,QAAQC,IAAI,YAEb,CAACqN,IAEJqI,8BAAoBtI,EAAK,MACvB,eACE,IAAIgH,EAAYwC,EAAMC,QAClBD,EAAMC,SACRzC,EAAK0C,iBAKX,IAAIC,EAAoBxU,EAAQyU,SAASC,MAEzC,OADAlX,QAAQC,IAAI+W,GAEV,kBAAC,IAAD,CAASvX,UAAU,sBACjB,kBAAC,IAAD,KACE,yBAAKA,UAAU,cACb,kBAAC0X,EAAA,EAAD,CACEH,kBAAmBA,EACnB1J,aAAcA,EACdD,IAAKwJ,S,uBCkHJO,UA1IIpY,IACjB,MAAOqY,EAAaC,GAAkBjW,mBAAS,IAC/C,IAAImB,EAAUC,cAEd,MAAO8U,EAAQC,GAAanW,mBAC1BO,IAAMC,WAAW4V,eAAeC,eAGlCrV,oBAAU,KACRsV,IACAH,EAAU5V,IAAMC,WAAW4V,eAAeC,gBACzC,IAEH9V,IAAMgW,UAAU,KACdJ,EAAU5V,IAAMC,WAAW4V,eAAeC,iBAO5C,MAAMG,EAAUtK,mBACVuK,EAASvK,mBAyBf,SAASoK,IACP,IACII,EAAaC,YADG,CAAEC,OAAQ,GAAIC,cAAe,MAE7CH,GAAYnW,IAAM6D,SAASsS,GAC/B/X,QAAQC,IAAI,cAAesX,GAE7B,OACE,kBAAC,IAAD,CAAS9X,UAAU,mBAEjB,kBAACwB,EAAA,EAAD,CACE2C,MAAM,aACNrB,OAAO,OACPuD,WAAW,EACX7C,aAAa,IAEf,kBAAC,IAAD,CAAYxD,UAAU,sBACpB,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEA,UAAU,kBACV0Y,mBAAoB,IAAMR,KAE1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUS,OAAK,EAACC,KAAK,aAAaC,GAAG,oBACrC,kBAAC,IAAD,CACED,KAAK,kBACLE,OAAQ,IACN,kBAAC,EAAD,CAAWjL,aAAc+J,EAAahK,IAAKwK,IAE7CO,OAAO,IAET,kBAAC,IAAD,CACEC,KAAK,qBACLE,OAAQ,IACN,kBAAC,EAAD,CAAUjL,aAAc+J,EAAahK,IAAKyK,IAE5CM,OAAO,KAGX,kBAAC,IAAD,CAAWzY,KAAK,OACd,kBAAC,IAAD,CACE6Y,IAAI,WACJC,KAAK,kBACLhZ,UAAU,kBACVoG,SAAsC,uBAA5B7G,EAAMiY,SAASyB,UAEzB,kBAAC,IAAD,cAGF,kBAAC,IAAD,CACEF,IAAI,UACJC,KAAK,qBACLhZ,UAAU,kBACVoG,SAAsC,oBAA5B7G,EAAMiY,SAASyB,UAEzB,kBAAC,IAAD,qBAMV,kBAAC,IAAD,KACE,kBAAC,IAAD,MAEgC,oBAA5B1Z,EAAMiY,SAASyB,UACa,uBAA5B1Z,EAAMiY,SAASyB,WACG,KAAlBnB,EAAOU,QACL,yBAAKxY,UAAU,cACb,yBAAKA,UAAU,gBAAgBG,QAAS,IA1FtD,WACE,GAAgC,oBAA5BZ,EAAMiY,SAASyB,SAAgC,CACjDpB,EAAe,QACf,IAAIjD,EAAYwD,EAAQf,QACxB9W,QAAQC,IAAI4X,GACRA,EAAQf,UACVzC,EAAKsE,sBACL3Y,QAAQC,IAAI,aAGdD,QAAQC,IAAI,aACyB,uBAA5BjB,EAAMiY,SAASyB,UACxBpB,EAAe,WACbjD,EAAYyD,EAAOhB,QACnBgB,EAAOhB,SACTzC,EAAKuE,SA2EmDC,IAC5C,kBAAC,IAAD,CAASlZ,KAAK,YAAYmE,KAAMgV,QAKrB,KAAlBvB,EAAOU,QACN,yBAAKxY,UAAU,cACb,yBAAKA,UAAU,gBAAgBG,QAAS,KA9ElD4C,EAAQ0B,KAAK,mBAmFD,kBAAC,IAAD,CAAS7E,IAAI,2BAA2BI,UAAU","file":"static/js/16.c4b06c40.chunk.js","sourcesContent":["import React from \"react\";\nimport { IonIcon } from \"@ionic/react\";\nimport \"./Icon.css\";\nimport { createUseStyles } from \"react-jss\";\n\nexport default function Icon(props: any) {\n  const classes = useStyles();\n  var propsIcon = props.iconProps; // \"inputIcon\"\n  return (\n    <IonIcon\n      src={\"assets/icon/\" + propsIcon.name + \".svg\"}\n      style={propsIcon.styleProps}\n      className={\n        propsIcon.class\n          ? classes[propsIcon.class] + \" \" + propsIcon.class\n          : // : propsIcon.login\n            // ? classes[propsIcon.class]\n            // : propsIcon.slot === \"end\"\n            // ? classes[propsIcon.class]\n            \"\"\n      }\n      slot={propsIcon.slot}\n      onClick={() =>\n        propsIcon?.iconClick\n          ? propsIcon?.iconClick(props.iconName, props.fieldPlaceholder)\n          : console.log()\n      } //{() => console.log(1111)} //{propsIcon?.iconClick}\n    ></IonIcon>\n  );\n}\nconst useStyles = createUseStyles({\n  zoom12: {\n    zoom: 1.4,\n  },\n  // slotEnd: {\n  //   position: \"absolute\",\n  //   right: 0,\n  //   zoom: 1.5,\n  //   bottom: \"1px\",\n  // },\n  slotEnd: {\n    // position: \"absolute\",\n    right: 0,\n    // zoom: 1.5,\n    bottom: \"1px\",\n  },\n  disabledminus: {\n    fontSize: \"1.6rem\",\n    right: \"-5px\",\n    //position: \"absolute\",\n    zoom: 1.5,\n    //bottom: \"1px\",\n  },\n  calenderMargin: {\n    zoom: 1.4,\n    //marginRight: \"0.5rem\",\n  },\n  zoom3: {\n    zoom: 3,\n  },\n  zoom2: {\n    zoom: 2,\n  },\n  slotStart: {\n    position: \"absolute\",\n    zoom: 1.5,\n  },\n  absolutePosition: {\n    position: \"absolute\",\n  },\n  lastIcon: {\n    zoom: \"1.5\",\n    right: \"3px\",\n    position: \"relative\",\n  },\n});\n","import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { closeSharp, informationCircle, search } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClearReduxStore from \"../util/ClearReduxStore\";\r\nimport \"./Header.scss\";\r\nimport Icon from \"./Icon\";\r\nimport Store from \"../redux/Store\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport { loginWithAgent } from \"../services/EndPointApi\";\r\n\r\ninterface HeaderParam {\r\n  label?: string;\r\n  action?: string;\r\n  showAgent?: boolean;\r\n  agentHeader?: boolean;\r\n  customBack?: boolean;\r\n  searchClick?(e: any): void;\r\n  infoClick?(e: any): void;\r\n  checkClick?(e: any): void;\r\n  backClick?(e: any): void;\r\n  locationProps?: any;\r\n  checkedProps?: any;\r\n  customClick?(actionTYpe: string): void;\r\n  changedAgent?(): void;\r\n}\r\nconst Header: React.FC<HeaderParam> = (HeaderParam) => {\r\n  const [actionType, setActionType] = useState({\r\n    search: true,\r\n    check: true,\r\n    close: true,\r\n    home: true,\r\n    info: false,\r\n  });\r\n\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const [checkedLabel, setCheckedLabel] = useState(\"Select All\");\r\n  const backIconProps = {\r\n    name: \"back-arrow\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const homeIconProps = {\r\n    name: \"home-new\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const checkIconProps = {\r\n    name: \"Check\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n\r\n  function checkAndUncheckAll(checked) {\r\n    console.log(checked);\r\n    setChecked(checked);\r\n    if (checked) {\r\n      setCheckedLabel(\"Unselect All\");\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"checked\");\r\n    } else {\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"unchecked\");\r\n      setCheckedLabel(\"Select All\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateActionType(HeaderParam.action ? HeaderParam.action : \"none\");\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  const back = (e: any) => {\r\n    if (HeaderParam.customClick) HeaderParam.customClick(\"/containerCart\");\r\n    else {\r\n      if (HeaderParam.customBack) {\r\n        HeaderParam.backClick(e);\r\n      } else {\r\n        history.goBack();\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateActionType = (myValue: string) => {\r\n    if (myValue) {\r\n      if (myValue === \"search\") {\r\n        setActionType({\r\n          search: false,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"check\") {\r\n        setActionType({\r\n          search: true,\r\n          check: false,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"close\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: false,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"home\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: false,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"info\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function homeButtonClicked() {\r\n    if (HeaderParam.customClick) HeaderParam.customClick(\"/tabs/landing\");\r\n    else {\r\n      history.push(\"/tabs/landing\");\r\n      ClearReduxStore();\r\n    }\r\n  }\r\n\r\n  const selectUserType = async (e: any) => {\r\n    let data = e.detail.value;\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    var result = response.data.data.dataItems[0];\r\n    if (await response.success) {\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        result.user.activeCompanyCode\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n      HeaderParam.changedAgent\r\n        ? HeaderParam.changedAgent()\r\n        : console.log(\"changed\");\r\n    }\r\n  };\r\n\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface\",\r\n  };\r\n\r\n  return (\r\n    <IonHeader\r\n      style={HeaderParam.agentHeader ? { height: \"102px\" } : { height: \"10%\" }}\r\n    >\r\n      <IonToolbar className=\"header\">\r\n        <div\r\n          className=\"mainContainer\"\r\n          style={!HeaderParam.agentHeader ? { paddingBottom: 0 } : {}}\r\n        >\r\n          {HeaderParam.checkedProps ? (\r\n            <div\r\n              className=\"selectAllBg\"\r\n              hidden={!HeaderParam.checkedProps.showChecked}\r\n            >\r\n              <div>\r\n                <IonButton\r\n                  fill=\"clear\"\r\n                  onClick={(e) => {\r\n                    back(e);\r\n                  }}\r\n                >\r\n                  <Icon iconProps={backIconProps} />\r\n                </IonButton>\r\n              </div>\r\n              <div className=\"checkBoxContainer\">\r\n                <IonCheckbox\r\n                  className=\"checkBox\"\r\n                  checked={checked}\r\n                  onIonChange={(e) => checkAndUncheckAll(e.detail.checked)}\r\n                />\r\n              </div>\r\n              <div className=\"checkBoxLabelCol\">\r\n                <IonLabel className=\"checkBoxLabel\">{checkedLabel}</IonLabel>{\" \"}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"backArrow\">\r\n            {HeaderParam.label != \"Home\" && actionType.close ? (\r\n              <IonButton\r\n                fill=\"clear\"\r\n                onClick={(e) => {\r\n                  back(e);\r\n                }}\r\n              >\r\n                <Icon iconProps={backIconProps} />\r\n              </IonButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"header-label\">\r\n            {\" \"}\r\n            <IonText>{HeaderParam.label}</IonText>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <IonButton\r\n              hidden={actionType.search}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.searchClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={search}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.info}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.infoClick}\r\n            >\r\n              <IonIcon\r\n                src={\"assets/icon/\" + \"info-italic\" + \".svg\"}\r\n                slot=\"icon-only\"\r\n                // icon={informationCircle}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n               \r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.check}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.checkClick}\r\n            >\r\n              {/* <IonIcon slot=\"icon-only\" src=\"\" style={{minWidth:'30px'}}/> */}\r\n              <Icon iconProps={checkIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.home}\r\n              fill=\"clear\"\r\n              onClick={(e) => homeButtonClicked()}\r\n            >\r\n              <Icon iconProps={homeIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.close}\r\n              fill=\"clear\"\r\n              onClick={(e) => {\r\n                back(e);\r\n              }}\r\n            >\r\n              <IonIcon slot=\"icon-only\" icon={closeSharp} />\r\n            </IonButton>\r\n            <IonButton hidden={HeaderParam.action !== \"\"} fill=\"clear\">\r\n              <IonIcon />\r\n            </IonButton>\r\n          </div>\r\n        </div>\r\n        {userDetails.agents && HeaderParam.agentHeader && (\r\n          <IonToolbar className=\"agent-code-header\">\r\n            <IonSelect\r\n              value={userDetails.selectedAgent}\r\n              interface=\"popover\"\r\n              onIonChange={(e) => selectUserType(e)}\r\n              disabled={\r\n                !HeaderParam.showAgent || userDetails.agents.length == 1\r\n              }\r\n              style={\r\n                !HeaderParam.showAgent ? { backgroundColor: \"#DDF1FF\" } : {}\r\n              }\r\n              interfaceOptions={agentCodeoptions}\r\n            >\r\n              {userDetails.agents.map((item, index) => {\r\n                return (\r\n                  <IonSelectOption\r\n                    value={item}\r\n                    key={index}\r\n                    className=\"select-agent-opt\"\r\n                  >\r\n                    {item.agentCode + \"-\" + item.agentName}\r\n                  </IonSelectOption>\r\n                );\r\n              })}\r\n            </IonSelect>\r\n            <IonIcon\r\n              src=\"assets/icon/arrow-down.svg\"\r\n              className=\"arrow-down-icon\"\r\n              hidden={!HeaderParam.showAgent || userDetails.agents.length == 1}\r\n            />\r\n          </IonToolbar>\r\n        )}\r\n        {/* </IonImg> */}\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  );\r\n};\r\nexport default Header;\r\n","import Store from \"../redux/Store\";\nimport * as LoginUserTypes from \"../redux/actionTypes/AllActionTypes\";\n\nexport default function ClearReduxStore() {\n  Store.dispatch({ type: LoginUserTypes.BOOK_TRUCK_CLEAR });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_CONTAINERS });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_TRUCK });\n  Store.dispatch({ type: LoginUserTypes.CLEAR_CART });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_DECLARATIONS });\n}\n","import { IonButton, IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport {\r\n  getPatternValue,\r\n  isValid,\r\n  validateEmail,\r\n  validateMobile,\r\n} from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n  setError?: any;\r\n  clearInput?: boolean;\r\n  keyDown? : any;\r\n  isClickable?:any\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n  setError,\r\n  clearInput,\r\n  keyDown,\r\n  isClickable\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  //const [error, seterror] = useState(\"\");\r\n  const checkKey = (e) => {\r\n    if(keyDown){\r\n      keyDown(e)\r\n    }\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (type === \"tel\" && setError) {\r\n      val = \"971\" + val.replace(/\\s/g, \"971\");\r\n      var nameTest = validateMobile(val, max * 1 + 3);\r\n      console.log(nameTest);\r\n      if (val != null) {\r\n        if (!nameTest) {\r\n          setError(\"Please Enter \" + max + \" digit number\");\r\n        } else {\r\n          setError(\"\");\r\n        }\r\n      }\r\n      console.log(\"tteeeelll\", val);\r\n    }\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      if (!validate) {\r\n        setError(\"Please Enter valid Mail id\");\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      console.log(validate);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={\r\n            type === \"tel\" && value?.substring(0, 3).includes(\"971\")\r\n              ? value.split(\"971\")[1]\r\n              : value\r\n          }\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={clearInput}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          minlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {!isClickable && icon && (\r\n            <Icon\r\n              iconProps={icon}\r\n              iconName={name}\r\n              fieldPlaceholder={placeholder}\r\n            />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n        {isClickable && icon &&(\r\n          <IonButton\r\n\r\n          className=\"icon-button\"\r\n\r\n          expand=\"full\"\r\n\r\n          fill=\"clear\"\r\n\r\n          onClick={() => icon.iconClick(name, placeholder)}\r\n\r\n        >\r\n\r\n          <Icon\r\n\r\n            iconProps={icon}\r\n\r\n            iconName={name}\r\n\r\n            fieldPlaceholder={placeholder}\r\n\r\n          />\r\n\r\n        </IonButton>\r\n        )}\r\n\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n","import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name Social Sharing\n * @premier social-sharing\n * @description\n * Share text, files, images, and links via social networks, sms, and email.\n *\n * For Browser usage check out the Web Share API docs: https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin#5-web-share-api\n *\n * @usage\n * ```typescript\n * import { SocialSharing } from '@ionic-native/social-sharing/ngx';\n *\n * constructor(private socialSharing: SocialSharing) { }\n *\n * ...\n *\n * // Check if sharing via email is supported\n * this.socialSharing.canShareViaEmail().then(() => {\n *   // Sharing via email is possible\n * }).catch(() => {\n *   // Sharing via email is not possible\n * });\n *\n * // Share via email\n * this.socialSharing.shareViaEmail('Body', 'Subject', ['recipient@example.org']).then(() => {\n *   // Success!\n * }).catch(() => {\n *   // Error!\n * });\n * ```\n */\n@Plugin({\n  pluginName: 'SocialSharing',\n  plugin: 'cordova-plugin-x-socialsharing',\n  pluginRef: 'plugins.socialsharing',\n  repo: 'https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows', 'Windows Phone'],\n})\n@Injectable()\nexport class SocialSharing extends IonicNativePlugin {\n  /**\n   * Shares using the share sheet\n   * @param message {string} The message you would like to share.\n   * @param subject {string} The subject\n   * @param file {string|string[]} URL(s) to file(s) or image(s), local path(s) to file(s) or image(s), or base64 data of an image. Only the first file/image will be used on Windows Phone.\n   * @param url {string} A URL to share\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n  })\n  share(message?: string, subject?: string, file?: string | string[], url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares using the share sheet with additional options and returns a result object or an error message (requires plugin version 5.1.0+)\n   * @param options {object} The options object with the message, subject, files, url and chooserTitle properties.\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  shareWithOptions(options: {\n    message?: string;\n    subject?: string;\n    files?: string | string[];\n    url?: string;\n    chooserTitle?: string;\n  }): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if you can share via a specific app.\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n   * @param message {string}\n   * @param subject {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android'],\n  })\n  canShareVia(appName: string, message?: string, subject?: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Twitter\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaTwitter(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Facebook\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaFacebook(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Facebook with a paste message hint\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @param pasteMessageHint {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaFacebookWithPasteMessageHint(\n    message: string,\n    image?: string,\n    url?: string,\n    pasteMessageHint?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Instagram\n   * @param message {string}\n   * @param image {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaInstagram(message: string, image: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to WhatsApp\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaWhatsApp(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to a WhatsApp Contact\n   * @param receiver {string} Pass phone number on Android, and Addressbook ID (abid) on iOS\n   * @param message {string} Message to send\n   * @param image {string} Image to send (does not work on iOS\n   * @param url {string} Link to send\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaWhatsAppToReceiver(receiver: string, message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via SMS\n   * @param messge {string} message to send\n   * @param phoneNumber {string} Number or multiple numbers seperated by commas\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaSMS(messge: string, phoneNumber: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if you can share via email\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  canShareViaEmail(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via Email\n   * @param message {string}\n   * @param subject {string}\n   * @param to {string[]}\n   * @param cc {string[]} Optional\n   * @param bcc {string[]} Optional\n   * @param files {string|string[]} Optional URL or local path to file(s) to attach\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n    successIndex: 6,\n    errorIndex: 7,\n  })\n  shareViaEmail(\n    message: string,\n    subject: string,\n    to: string[],\n    cc?: string[],\n    bcc?: string[],\n    files?: string | string[]\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via AppName\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n   * @param message {string}\n   * @param subject {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android'],\n  })\n  shareVia(appName: string, message: string, subject?: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * defines the popup position before call the share method.\n   * @param targetBounds {string} left, top, width, height\n   */\n  @Cordova({\n    sync: true,\n    platforms: ['iOS'],\n  })\n  setIPadPopupCoordinates(targetBounds: string): void {}\n\n  /**\n   * Save an array of images to the camera roll\n   * @param  {string|string[]} fileOrFileArray Single or multiple files\n   * @returns {Promise<any> }\n   */\n  @Cordova({\n    platforms: ['iOS'],\n  })\n  saveToPhotoAlbum(fileOrFileArray: string | string[]): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to a WhatsApp Contact with phone number.\n   * @param phone {string} Pass phone number\n   * @param message {string} Message to send\n   * @param fileOrFileArray fileOrFileArray Single or multiple files\n   * @param url {string} Link to send\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaWhatsAppToPhone(\n    phone: string,\n    message: string,\n    fileOrFileArray: string | string[],\n    url?: string\n  ): Promise<any> {\n    return;\n  }\n}\n","import { IonLabel } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport \"./InformationText.scss\";\r\n\r\ninterface UnderLinedTextProps {\r\n  text;\r\n}\r\n\r\nconst UnderLinedText: React.FC<UnderLinedTextProps> = ({ text }) => {\r\n  return (\r\n    <div className=\"relativePosition componentMargins1\">\r\n      <div className=\"smallUnderline payLabel\">\r\n        <IonLabel className=\"\">{text}</IonLabel>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default UnderLinedText;\r\n","import React from \"react\";\r\n\r\ninterface BorderWithFloatingTextProps {\r\n  content;\r\n  label;\r\n  className?;\r\n}\r\nconst BorderWithFloatingText: React.FC<BorderWithFloatingTextProps> = ({\r\n  content,\r\n  label,\r\n  className,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={\r\n        className ? className + \" form-element-group\" : \"form-element-group\"\r\n      }\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {content}\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\nexport default BorderWithFloatingText;\r\n","import {\r\n  IonIcon,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { addCircle } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./DrpdownInput.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface DrpDownInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type?: any;\r\n  value?: any;\r\n  onChange: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: any;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  listValues?: Array<any>;\r\n  disabled?: any;\r\n  selectedName?: any;\r\n}\r\nconst DrpdownInput: React.FC<DrpDownInputProps> = ({\r\n  label,\r\n  name,\r\n  value,\r\n  onChange,\r\n  errors,\r\n  description,\r\n  placeholder,\r\n  listValues,\r\n  disabled,\r\n  selectedName,\r\n  type,\r\n}) => {\r\n  // const [selectedName, setselectedName] = useState();\r\n  const [valueD, setValueD] = useState({});\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    setValueD({ label: selectedName, value: value });\r\n  }, []);\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    setValueD(val);\r\n    if (val === \"addAddress\") {\r\n      history.push(\"/addAddress\");\r\n    } else {\r\n      onChange(e, val);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    cssClass: \"my-custom-interface\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-element-group\">\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        <IonSelect\r\n          // selectedText={selectedName}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value || valueD}\r\n          onIonChange={onInpChange}\r\n          cancel-text\r\n          interface=\"popover\"\r\n          className=\"dropdownInput\"\r\n          interfaceOptions={options}\r\n        >\r\n          {type === \"address\" && (\r\n            <IonSelectOption value=\"addAddress\" class=\"selectAddAddr\">\r\n              Add new Address\r\n              {/* <IonIcon icon={addCircle} className=\"addIcon\" /> */}\r\n              <img src=\"/assets/icon/eye.svg\" />\r\n            </IonSelectOption>\r\n          )}\r\n          {listValues?.map((item, index) =>\r\n            type === \"address\" ? (\r\n              <IonSelectOption key={index} value={item}>\r\n                {item.dropAddress}\r\n                {item.consigneeName} {item.dropAddress}\r\n                {item.email}\r\n              </IonSelectOption>\r\n            ) : (\r\n              <IonSelectOption key={index} value={item.value}>\r\n                {item.label}\r\n              </IonSelectOption>\r\n            )\r\n          )}\r\n        </IonSelect>\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start\">{errors}</IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {/* {validation && description && ( */}\r\n      <IonText color=\"danger\" className=\"validation-message\">\r\n        <IonLabel className=\"ion-padding-start\">{description}</IonLabel>\r\n      </IonText>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrpdownInput;\r\n","import { IonAlert, IonContent, IonIcon, IonInput, IonItem, IonList, IonPopover, IonSelect, IonSelectOption, IonText } from \"@ionic/react\";\r\nimport { Autocomplete } from \"@react-google-maps/api\";\r\nimport { compassSharp } from \"ionicons/icons\";\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from \"react\";\r\nimport VariableValues from \"../../redux/reducers/VariableValues\";\r\nimport { fetchContainers, fetchDeclarations } from \"../../services/EndPointApi\";\r\nimport TxtInput from \"../txtinput/TxtInput\";\r\nimport './AutoComplete.scss';\r\n\r\ninterface AutoCompleteProps {\r\n  value?: any;\r\n  name: string;\r\n  errors: any;\r\n  icon: any;\r\n  onOptionClick: (name: string, valx: string) => any;\r\n  onSuggestionChange: (e: any, value: any) => any;\r\n  onBlur?: any;\r\n  label: string;\r\n  suggestions: any;\r\n  pattern?: string,\r\n  clearInput : any;\r\n}\r\n\r\nconst AutoComplete: React.FC<AutoCompleteProps> = ({\r\n  value,\r\n  name,\r\n  errors,\r\n  icon,\r\n  onOptionClick,\r\n  onBlur,\r\n  onSuggestionChange,\r\n  label,\r\n  suggestions,\r\n  pattern,\r\n  clearInput\r\n}) => {\r\n\r\n  // const AutoComplete: React.FC<AutoCompleteProps> = forwardRef(\r\n  //   ({\r\n  //     value,\r\n  //     name,\r\n  //     errors,\r\n  //     icon,\r\n  //     onOptionClick,\r\n  //     onBlur,\r\n  //     onSuggestionChange,\r\n  //     label,\r\n  //     suggestions,\r\n  //     pattern,\r\n  //   }, ref) => {\r\n \r\n  // useImperativeHandle<any,any>(ref, () => ({\r\n\r\n  //   clear(){\r\n  //     console.log(\"useImperativeHandle clearicon click\",name);\r\n  //     setInput(\"\")\r\n  //     setShowSuggestions(false);\r\n  //     setFilteredSuggestions([])\r\n  //   }\r\n\r\n  // }));\r\n\r\n\r\n  const clearIcon = {\r\n    name: \"close-outline\",\r\n    slot: \"end\",\r\n    class: \"slotEnd\",\r\n    iconClick: () => {\r\n      clearInput(name);\r\n    },\r\n  };\r\n\r\n  const clear = () => {\r\n    clearInput(name);\r\n  }\r\n\r\n\r\n  const deleteIcon = {\r\n    name: \"close-circle-outline\",\r\n    slot: \"end\",\r\n    class: \"slotEnd\",\r\n    iconClick: () => {\r\n\r\n    }\r\n  };\r\n\r\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\r\n  const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  // const [input, setInput] = useState(value);\r\n  const [input, setInput] = useState(null);\r\n  const [isSuggestionClicked, setISuggestionClicked] = useState(false);\r\n  const [autocompleteIcon, setIcon] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(errors);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setErrorMessage(errors)\r\n  }, [errors])\r\n\r\n  useEffect(() => {\r\n    if(value){\r\n      setIcon(clearIcon)\r\n    }else{\r\n      setIcon(icon)\r\n    }\r\n  }, [icon])\r\n\r\n  useEffect(() => {\r\n    console.log('autocomplete useEffect suggestions', suggestions)\r\n    if (suggestions && suggestions.length > 0) {\r\n      let unLinked = [];\r\n      if (suggestions.length == 1 && suggestions[0] == input) {\r\n        console.log(\"copy paste\")\r\n        unLinked = [suggestions[0]];\r\n        setISuggestionClicked(true)\r\n        setIcon(icon)\r\n        setFilteredSuggestions([])\r\n        setShowSuggestions(false)\r\n        onOptionClick(name, suggestions[0])\r\n      } else if (suggestions) {\r\n        unLinked = suggestions.filter(\r\n          (suggestion) =>\r\n            suggestion.toLowerCase().indexOf(input.toLowerCase()) > -1\r\n        );\r\n        setFilteredSuggestions(unLinked);\r\n        setActiveSuggestionIndex(0);\r\n        setShowSuggestions(true);\r\n        setIcon(clearIcon)\r\n      }\r\n    } else {\r\n      setFilteredSuggestions([])\r\n      // setShowSuggestions(false)\r\n    }\r\n  }, [suggestions])\r\n\r\n   useEffect(() => {\r\n    console.log(\"autocomplete useEffect value changed\", value)\r\n    setInput(value)\r\n  }, [value])\r\n\r\n  useEffect(() => {\r\n    console.log(\"autocomplete useEfect input changed\", input)\r\n    setISuggestionClicked(false)\r\n    if (!input || input.length == 0) {\r\n      setFilteredSuggestions([])\r\n      setShowSuggestions(false);\r\n      setIcon(icon)\r\n    }\r\n  }, [input])\r\n\r\n\r\n  useEffect(()=> {\r\n      if(isSuggestionClicked){\r\n\r\n      }\r\n  },[isSuggestionClicked])\r\n\r\n\r\n  const onChange = async (e: any, value: any) => {\r\n    setIcon(clearIcon)\r\n    onSuggestionChange(e, value)\r\n  };\r\n\r\n\r\n  const onSuggestionClick = (suggestion) => {\r\n    setISuggestionClicked(true);\r\n    setShowSuggestions(false);\r\n    onOptionClick(name, suggestion)\r\n    setIcon(icon)\r\n  };\r\n\r\n  return (\r\n    <div className=\"parent-postion\">\r\n      <TxtInput\r\n        name={name}\r\n        value={value}\r\n        label={label}\r\n        errors={errorMessage}\r\n        type=\"text\"\r\n        required={true}\r\n        onChange={onChange}\r\n        datatype=\"TEXT\"\r\n        placeholder={label}\r\n        icon={autocompleteIcon}\r\n        onBlur={(e) => {\r\n          console.log(\"Autocomplete OnBlur\")\r\n        }}\r\n        pattern={pattern ? pattern : ''}\r\n        description=\" Format xxx-yyyyyyyy-zz\"\r\n        clearInput={false}\r\n        isClickable={true}\r\n        keyDown={(e) => {\r\n          if (e.keyCode == '9') {\r\n            console.log(\"is sugg clicked\", isSuggestionClicked)\r\n            if (!isSuggestionClicked) {\r\n              clear();\r\n            }\r\n            // setISuggestionClicked(false)\r\n          }\r\n        }\r\n        }\r\n      />\r\n\r\n      {\r\n        showSuggestions && (\r\n          // <div>\r\n\r\n          <IonList className={`suggestion-list`}>\r\n            {\r\n              filteredSuggestions && filteredSuggestions.map((suggestion, index) => (\r\n                <IonItem className={`suggestion`} onClick={() => onSuggestionClick(suggestion)} key={suggestion + index}>{suggestion}</IonItem>\r\n              ))\r\n\r\n\r\n            }\r\n            {\r\n              (!filteredSuggestions || filteredSuggestions.length === 0) &&\r\n              <IonItem className={`suggestion`}>{\"No Suggestions Found\"}</IonItem>\r\n            }\r\n          </IonList>\r\n\r\n          // </div>\r\n        )\r\n      }\r\n\r\n\r\n    </div>\r\n  )\r\n    }\r\n// });\r\n\r\nexport default AutoComplete","import {\r\n  IonContent,\r\n  IonFab,\r\n  IonFabButton,\r\n  IonFooter,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonPage,\r\n  IonText,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport {\r\n  calendarTodayDate,\r\n  createArrayOfObjectWithKeyAndValue,\r\n  createPaymentObject,\r\n  formatDate,\r\n  formatToCalendarDate,\r\n  lastYear,\r\n  minDate,\r\n  minformatDate,\r\n  nextYear,\r\n  todayDate,\r\n} from \"../services/Common\";\r\nimport {\r\n  fetchContainers,\r\n  fetchContainerSummaryPayment,\r\n  fetchDeclarations,\r\n  getAddressApi,\r\n  getContainerTypes,\r\n  getRequestByContainer,\r\n  getRequestByDeclaration,\r\n  getTruckTypeApi,\r\n  reviewSubmit,\r\n} from \"../services/EndPointApi\";\r\nimport { dropIntervals, truckNumber } from \"../util/Constants\";\r\nimport * as utils from \"../util/Utilities\";\r\nimport Calendar from \"./calendar/Calendar\";\r\nimport DrpdownInput from \"./dropdownInput/DrpdownInput\";\r\nimport TxtInput from \"./txtinput/TxtInput\";\r\nimport BorderWithFloatingText from \"./InputBorders/BorderWithFloatingText\";\r\nimport UnderLineOnly from \"./InputBorders/UnderLineOnly\";\r\nimport { add, arrowForwardCircle, arrowForwardOutline } from \"ionicons/icons\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport Store from \"../redux/Store\";\r\nimport Autocomplete from \"./AutoComplete/AutoComplete\";\r\nimport { connectAdvanced } from \"react-redux\";\r\nimport { fireEvent } from \"@testing-library/react\";\r\nvar containerList = [];\r\ninterface bookQuickProps {\r\n  buttonAction: any;\r\n  ref: any;\r\n}\r\n\r\nlet containerMap = new Map<String,Array<any>>();\r\n\r\nvar txtInputDeclToAdd = [];\r\nvar txtInputContaAdd = [];\r\nvar declarationArray = [],\r\n  containerArray = [];\r\n//const PayQuick: React.FC<payQuickProps> = forwardRef(\r\nconst BookQuick: React.FC<bookQuickProps> = forwardRef(\r\n  ({ buttonAction }, ref) => {\r\n    let history = useHistory();\r\n    const myref = useRef();\r\n\r\n    \r\n\r\n    const plusIcon = {\r\n      name: \"plusQuick\",\r\n      slot: \"end\",\r\n      class: \"slotEnd\",\r\n      iconClick: addTextInput,\r\n    };\r\n    const calenderIcon = {\r\n      name: \"calendar\",\r\n      slot: \"start\",\r\n      class: \"calenderMargin\",\r\n    };\r\n    const minusIcon = {\r\n      name: \"plus-disabled\",\r\n      slot: \"end\",\r\n      class: \"disabledminus\",\r\n      //styleProps: { fontSize: \"1.6rem\", right: \"-5px\" },\r\n      iconClick: removeTexTInput,\r\n    };\r\n\r\n    const plusDisabledIcon = {\r\n      name: \"plus-disabled\",\r\n      slot: \"end\",\r\n      class: \"disabledminus\",\r\n      //styleProps: { fontSize: \"1.6rem\", right: \"-5px\" },\r\n      iconClick: ()=>{},\r\n    };\r\n    const blankIcon = {\r\n      name: \"\",\r\n      slot: \"\",\r\n      class: \"\",\r\n      iconClick: () => console.log(),\r\n    };\r\n\r\n\r\n    const deleteIcon = {\r\n      name: \"close-circle-outline\",\r\n      slot: \"end\",\r\n      class: \"slotEnd\",\r\n      iconClick: (name) => {\r\n        console.log(\"delete click\");\r\n        console.log(name);\r\n        // removeTexTInput(name)\r\n        containerMap.delete(name)\r\n        if(name.includes(\"declNumber\")){\r\n        setDeclarationFields(prevState=>prevState.filter(field=> field['name']!==name))\r\n        }else{\r\n          setContainerFields(prevState=>prevState.filter(field=> field['name']!==name))\r\n        }\r\n      }\r\n    };\r\n\r\n    const [txtInputAdd, settxtInputAdd] = useState({\r\n      declNumber: txtInputDeclToAdd,\r\n      containerNumber: txtInputContaAdd,\r\n    });\r\n    const [form, setForm] = useState({\r\n      declNumber: \"\",\r\n      containerNumber: \"\",\r\n      truckCount: \"\",\r\n      dateAndTime: calendarTodayDate,\r\n      minDate: minDate,\r\n      truckType: \"\",\r\n      droplocation: {\r\n        consigneeContactName: \"\",\r\n        consigneeContactNumber: \"\",\r\n        phoneNumber: \"\",\r\n      },\r\n      contactPerson: \"\",\r\n      contactNumber: \"\",\r\n      submitted: false,\r\n      valid: false,\r\n      dropInterval: \"\",\r\n    });\r\n    var initialIcon = { declNumber: plusIcon, containerNumber: plusIcon };\r\n    const [errors, setErrors] = useState<any>({});\r\n    const [icon, seticon] = useState(initialIcon);\r\n\r\n    const [action, setAction] = useState(buttonAction);\r\n    const [timeAddressTruckDataList, settimeAddressTruckDataList] =\r\n      useState<any>({\r\n        address: [],\r\n        listTruck: [],\r\n        disbaleHr: 1,\r\n        dateAndTime: \"\",\r\n      });\r\n\r\n      let defaultDecField = {\r\n        name : \"declNumber\",\r\n        value : \"\",\r\n        isParent : true,\r\n        suggestions : [],\r\n        icon : plusIcon,\r\n      }\r\n\r\n      let defaultContainerField = {\r\n        name : \"containerNumber\",\r\n        value : \"\",\r\n        isParent : true,\r\n        suggestions : [],\r\n        icon : plusIcon,\r\n      }\r\n      \r\n\r\n      const [declarationFields, setDeclarationFields] = useState([defaultDecField]);\r\n      const [containerFields, setContainerFields] = useState([defaultContainerField]);\r\n\r\n      const [isDeclarationReset,setIsDeclarationReset] = useState(false)\r\n      const [isContainerReset,setIsConainerReset] = useState(false)\r\n      const [suggestions,setSuggestions] = useState([])\r\n\r\n\r\n    function addTextInput(name, placeholderVal) {\r\n      console.log(\"addTextInput\",name);\r\n      // console.log(name, 12121, placeholderVal);\r\n      var paramToPass = {};\r\n      // if (name === \"declNumber\") {\r\n      //   txtInputDeclToAdd.push(paramToPass);\r\n      //   setForm((prevState) => ({\r\n      //     ...prevState,\r\n      //     [\"declNumber\" + txtInputDeclToAdd.length]: \"\",\r\n      //   }));\r\n      //   seticon({ containerNumber: minusIcon, declNumber: plusIcon });\r\n      // } else {\r\n      //   txtInputContaAdd.push(paramToPass);\r\n      //   setForm((prevState) => ({\r\n      //     ...prevState,\r\n      //     [\"containerNumber\" + txtInputContaAdd.length]: \"\",\r\n      //   }));\r\n      //   seticon({ containerNumber: plusIcon, declNumber: minusIcon });\r\n      // }\r\n      // settxtInputAdd({\r\n      //   ...txtInputAdd,\r\n      //   [name]: name === \"declNumber\" ? txtInputDeclToAdd : txtInputContaAdd,\r\n      // });\r\n\r\n      if(name === \"declNumber\"){\r\n        setDeclarationFields(prevState=>\r\n          [\r\n            ...prevState,\r\n            {\r\n              name: \"declNumber\" + (new Date().getMilliseconds()),\r\n              value: \"\",\r\n              isParent: false,\r\n              suggestions : [],\r\n              icon : deleteIcon,\r\n            }\r\n          ]\r\n      )\r\n        console.log(declarationFields)\r\n      }else if(name==\"containerNumber\"){\r\n        setContainerFields(prevState=>\r\n          [\r\n            ...prevState,\r\n            {\r\n              name: \"containerNumber\" + (new Date().getMilliseconds()),\r\n              value: \"\",\r\n              isParent: false,\r\n              suggestions : [],\r\n              icon : deleteIcon,\r\n            }\r\n          ]\r\n      )\r\n      }\r\n    }\r\n\r\n    function removeTexTInput(name) {\r\n      settxtInputAdd({\r\n        ...txtInputAdd,\r\n        [name]:\r\n          name === \"containerNumber\"\r\n            ? txtInputDeclToAdd.splice(0, txtInputDeclToAdd.length)\r\n            : txtInputContaAdd.splice(0, txtInputContaAdd.length),\r\n      });\r\n    }\r\n\r\n    useEffect(() => {\r\n      getListAddress();\r\n      getTruck();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(form)\r\n    }, [form]);\r\n\r\n    useEffect(() => {\r\n      if (buttonAction === \"book\") {\r\n        //onContinue();\r\n      }\r\n    }, [buttonAction]);\r\n\r\n    const getTruck = async () => {\r\n      let res: any = await getContainerTypes();\r\n      {\r\n        if (res?.success) {\r\n          settimeAddressTruckDataList((prevState) => ({\r\n            ...prevState,\r\n            listTruck: res?.data,\r\n          }));\r\n          setTimeout(() => {\r\n            console.log(timeAddressTruckDataList);\r\n          }, 2000);\r\n        } else {\r\n          setErrors({\r\n            ...errors,\r\n            general: res?.data?.message || res?.data?.error,\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    const getListAddress = async () => {\r\n      let res: any = await getAddressApi();\r\n      // if (res?.success) {\r\n      var mindateOfDisable = utils.addTimeToDateTime(\r\n        new Date(),\r\n        1 * res?.disableHrs * 60 || 1\r\n      );\r\n      var formattedMindate = mindateOfDisable.toISOString();\r\n      settimeAddressTruckDataList((prevState) => ({\r\n        ...prevState,\r\n        address: res?.addressDtoList,\r\n        disbaleHr: res?.disableHrs,\r\n        dateAndTime: formattedMindate,\r\n      }));\r\n      var newdateTime = moment(new Date(formattedMindate)).format(\r\n        \"DD/MM/YYYY H:mm\"\r\n      );\r\n      setForm({\r\n        ...form,\r\n        minDate: minformatDate(formattedMindate),\r\n        dateAndTime: newdateTime,\r\n      });\r\n      // }\r\n    };\r\n\r\n    var totalTruckNumber = createArrayOfObjectWithKeyAndValue(); //Array.from({ length: truckNumber }, (_, i) => i + 1);\r\n\r\n    const handleChange = (e: any, value: any) => {\r\n      console.log(e.target.name)\r\n      console.log(e.target.value)\r\n      console.log(form)\r\n      console.log(form)\r\n      setForm({\r\n        ...form,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n      setErrors({ ...errors, [e.target.name]: \"\" });\r\n      if (e.target.name === \"declNumber\") {\r\n        form.containerNumber = \"\";\r\n        removeTexTInput(\"declNumber\");\r\n        seticon({ containerNumber: minusIcon, declNumber: plusIcon });\r\n      } else if (e.target.name === \"containerNumber\") {\r\n        removeTexTInput(\"containerNumber\");\r\n        form.declNumber = \"\";\r\n        seticon({ declNumber: minusIcon, containerNumber: plusIcon });\r\n      }\r\n      setForm({\r\n        ...form,\r\n        [e.target.name]: value,\r\n      });\r\n\r\n      if (e.target.value === \"\") {\r\n        seticon(initialIcon);\r\n      }\r\n      console.log(form);\r\n\r\n      //  }\r\n    };\r\n\r\n\r\n    const onHandleChange = (e, value) => {\r\n      console.log(\"BookQuick onHandleChange\", value)\r\n      const name = e.target.name;\r\n      console.log(\"BookQuick onHandleChange\", name)\r\n      if (!value) {\r\n        setErrors({ ...errors, [name]: \"\" });\r\n        updateField(name, \"value\", \"\")\r\n        updateField(name, \"suggestions\", [])\r\n      } else if (value) {\r\n        updateField(name, \"value\", value)\r\n        if (name.includes('declNumber')) {\r\n          clearContainers(value);\r\n        } else if (name.includes('containerNumber')) {\r\n          clearDeclarations(value);\r\n        }\r\n        \r\n        fetchSuggestions(name, value);\r\n      }\r\n    }\r\n\r\n    const updateField = (name, prop, value) => {\r\n      if (name.includes('declNumber')) {\r\n        let index = declarationFields.findIndex(field=> field.name === name);\r\n        let declarationFieldsTemp = [...declarationFields]\r\n        let decField = declarationFieldsTemp[index];\r\n        if(prop=='value'){\r\n            updateIcon(decField)\r\n        }\r\n        decField[prop] = value;\r\n        setDeclarationFields(declarationFieldsTemp)\r\n      } else if (name.includes('containerNumber')) {\r\n        let index = containerFields.findIndex(field=> field.name === name);\r\n        let containerFieldsTemp = [...containerFields]\r\n        let containerField = containerFieldsTemp[index];\r\n        if(prop=='value'){\r\n          updateIcon(containerField)\r\n        }\r\n        containerField[prop] = value\r\n        setContainerFields(containerFieldsTemp)\r\n      }\r\n    }\r\n\r\n    const fetchSuggestions = async (name, value) =>{\r\n      if(name.includes(\"declNumber\")){\r\n        let result = await fetchDeclarations(value);\r\n        updateField(name,\"suggestions\",result.data)\r\n      }else if(name.includes(\"containerNumber\")){\r\n        let result = await fetchContainers(value); \r\n        updateField(name,\"suggestions\",result.data)\r\n      }\r\n      \r\n    }\r\n\r\n    const updateIcon = (field) => {\r\n        if(field.isParent){\r\n          field['icon'] = plusIcon\r\n        }else{\r\n          field['icon'] = deleteIcon\r\n        }\r\n    }\r\n\r\n    const clearInput = (name) =>{\r\n      setErrors({ ...errors, [name]: \"\" });\r\n      containerMap.delete(name)\r\n      if(name.includes('declNumber')){\r\n        declarationFields.forEach(field=>{\r\n          if(field['name']==name){\r\n            field['value'] = ''\r\n            updateIcon(field)\r\n          }\r\n        })\r\n        setDeclarationFields([...declarationFields])\r\n      }\r\n      else if(name.includes('containerNumber')){\r\n        containerFields.forEach(field=>{\r\n          if(field['name']==name){\r\n            field['value'] = ''\r\n            updateIcon(field)\r\n          }\r\n        })\r\n        setContainerFields([...containerFields])\r\n      }\r\n      \r\n    }\r\n\r\n    const isValueExist = (name, value) => {\r\n      let isExists = false;\r\n      if (name.includes(\"declNumber\")) {\r\n        isExists = declarationFields.some(field=>(field.name!=name && field.value===value));\r\n      } else if (name.includes(\"containerNumber\")) {\r\n        isExists = containerFields.some(field=>(field.name!=name && field.value===value));\r\n      }\r\n      return isExists;\r\n    }\r\n\r\n    const onDeclarationClick = (name,value) => {\r\n      console.log(\"onDeclarationClick name\",name)\r\n      console.log(\"onDeclarationClick value\",value)\r\n      \r\n      if(isValueExist(name,value)){\r\n        setErrors({ ...errors, [name]: (name===\"declNumber\") ? 'DeclarationNumber Already Entered' : 'Container Number Already Entered' });\r\n      }else{\r\n        setErrors({ ...errors, [name]: \"\" });\r\n        fetchContainerList(name,value,name)\r\n      }\r\n      if (name.includes(\"declNumber\")) {\r\n        let index = declarationFields.findIndex(field=>field.name===name);\r\n        let declarationFieldsTemp = [...declarationFields];\r\n        declarationFieldsTemp[index].value=value\r\n        declarationFieldsTemp[index].suggestions=[];\r\n        setDeclarationFields(declarationFieldsTemp)\r\n      } else if (name.includes(\"containerNumber\")) {\r\n        let index = containerFields.findIndex(field=>field.name===name);\r\n        let containerFieldsTemp = [...containerFields];\r\n        containerFieldsTemp[index].value=value\r\n        containerFieldsTemp[index].suggestions=[];\r\n        setContainerFields(containerFieldsTemp)\r\n      }\r\n      \r\n     \r\n  }\r\n\r\n  const clearContainers = (value) => {\r\n    console.log(\"clearContainers\")\r\n    setErrors({ ...errors, \"containerNumber\" : \"\" });\r\n    containerFields.forEach(field=>{\r\n      containerMap.delete(field.name);\r\n    })\r\n    let defaultContainerFieldTemp = {...defaultContainerField}\r\n    defaultContainerFieldTemp.icon = plusDisabledIcon\r\n    setContainerFields([defaultContainerFieldTemp]);\r\n    \r\n  }\r\n\r\n\r\n  const clearDeclarations = (value) => {\r\n    console.log(\"clearDeclarations\")\r\n    setErrors({ ...errors, \"declNumber\" : \"\" });\r\n    declarationFields.forEach(field=>{\r\n      containerMap.delete(field.name);\r\n    })\r\n    let defaultDecFieldTemp = {...defaultDecField}\r\n    defaultDecFieldTemp.icon=plusDisabledIcon\r\n    setDeclarationFields([defaultDecFieldTemp])\r\n  }\r\n\r\n    const handleDateTime = (e, value) => {\r\n      setErrors({\r\n        ...errors,\r\n        dateAndTime: \"\",\r\n      });\r\n      var formattedMinDate = minformatDate(value);\r\n      var datevalue = moment(new Date(value)).format(\"DD/MM/YYYY H:mm\");\r\n      var tt = formatToCalendarDate(form.dateAndTime);\r\n      console.log(new Date(value), form.dateAndTime, new Date(tt));\r\n      if (new Date(tt) <= new Date(value)) {\r\n        setForm({\r\n          ...form,\r\n          //minDate: formattedMinDate,\r\n          [e.target.name]: datevalue,\r\n        });\r\n      } else {\r\n        //alert(\"not ok\");\r\n        setErrors({\r\n          ...errors,\r\n          dateAndTime: \"Please enter a valid date\",\r\n        });\r\n      }\r\n\r\n      //   }\r\n    };\r\n\r\n    const onBlur = async (e) => {\r\n      console.log(\"onBlur\")\r\n      console.log(e.target.name, e.target.value);\r\n      if (e.target.value && e.target.value != \"\") {\r\n        setErrors({ ...errors, [e.target.name]: \"\" });\r\n        let response: any;\r\n        // if (e.target.name === \"declNumber\") {\r\n        if (e.target.name.includes(\"declNumber\")) {\r\n          // if (declarationArray.includes(e.target.value)) {\r\n          //   setErrors({\r\n          //     ...errors,\r\n          //     [e.target.name]: \"duplicaed value\",\r\n          //   });\r\n          // } else {\r\n          //   declarationArray.push(e.target.value);\r\n          //   response = await getRequestByDeclaration(e.target.value);\r\n          // }\r\n          response = await getRequestByDeclaration(e.target.value);\r\n        } else {\r\n          response = await getRequestByContainer(e.target.value);\r\n        }\r\n        if (response?.success) {\r\n          var respcontainerList = response.data?.data?.dataItems[0]\r\n            ?.containerList || [response.data?.data?.dataItems[0]?.container];\r\n\r\n          Array.prototype.push.apply(containerList, respcontainerList);\r\n          console.log(respcontainerList);\r\n          // if (typeof respcontainerList === \"object\") {\r\n          //   console.log(\"object\");\r\n          //   // containerList.push(respcontainerList); //eeeaaannnaasss\r\n          //   containerList.concat(respcontainerList);\r\n          // } else {\r\n          //   console.log(\"arrray\");\r\n          //   containerList.concat(respcontainerList);\r\n          // }\r\n\r\n          console.log(respcontainerList, containerList);\r\n          setErrors({\r\n            ...errors,\r\n            [e.target.name]: response.data?.data?.dataItems[0]?.noOfContainers\r\n              ? response.data.data.dataItems[0].noOfContainers +\r\n                \" container selected\"\r\n              : \"1 Container Selected\",\r\n          });\r\n        } else {\r\n          console.log(e.target.placeholder);\r\n          setErrors({\r\n            ...errors,\r\n            [e.target.name]:\r\n              response?.data?.data?.dataItems[0]?.error ||\r\n              \"Invalid \" + e.target.placeholder,\r\n          });\r\n        }\r\n      }\r\n      //seticon({ declNumber: blankIcon, containerNumber: minusIcon });\r\n      console.log(form)\r\n    };\r\n\r\n    const fetchContainerList = async (name,value,placeholder) =>{\r\n      if (value && value != \"\") {\r\n        setErrors({ ...errors, [name]: \"\" });\r\n        let response: any;\r\n        // if (name === \"declNumber\") {\r\n        if (name.includes(\"declNumber\")) {\r\n          response = await getRequestByDeclaration(value);\r\n        } else {\r\n          response = await getRequestByContainer(value);\r\n        }\r\n        if (response?.success) {\r\n          var respcontainerList = response.data?.data?.dataItems[0]\r\n            ?.containerList || [response.data?.data?.dataItems[0]?.container];\r\n\r\n          Array.prototype.push.apply(containerList, respcontainerList);\r\n          containerMap.set(name,respcontainerList)\r\n          console.log(respcontainerList);\r\n          console.log(respcontainerList, containerList);\r\n          setErrors({\r\n            ...errors,\r\n            [name]: response.data?.data?.dataItems[0]?.noOfContainers\r\n              ? response.data.data.dataItems[0].noOfContainers +\r\n                \" container selected\"\r\n              : \"1 Container Selected\",\r\n          });\r\n        } else {\r\n          console.log(placeholder);\r\n          setErrors({\r\n            ...errors,\r\n            [name]:\r\n              response?.data?.data?.dataItems[0]?.error ||\r\n              \"Invalid \" + placeholder,\r\n          });\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    //\r\n    const validateDetails = async () => {\r\n      //console.log(form, Object.keys(form.droplocation).length);\r\n      setErrors({\r\n        general:\r\n          form.declNumber === \"\" && form.containerNumber === \"\"\r\n            ? \"one from declaration/container number is mandatory\"\r\n            : \"\",\r\n        truckType:\r\n          form.truckType === \"\" ? \"Truck Type Selection is Mandatory\" : \"\",\r\n        droplocation:\r\n          form.droplocation.consigneeContactName === \"\"\r\n            ? \"Address Selection is Mandatory\"\r\n            : \"\",\r\n        truckCount:\r\n          form.truckCount === \"\" ? \"Truck Selection is Mandatory\" : \"\",\r\n      });\r\n      var outPut = true;\r\n      for (var key in errors) {\r\n        console.log(errors, \"key\", key);\r\n        //   // if (\r\n        //   //   errors[key] === null &&\r\n        //   //   errors[key] === \"\" &&\r\n        //   //   (errors[key] === \"declNumber\" || errors[key] === \"\")\r\n        //   // )\r\n        //   //   return false;\r\n        if (\r\n          // errors[key] !== null &&\r\n          // errors[key] != \"\" &&\r\n          errors[key] === \"declNumber\" ||\r\n          // errors[key] === \"\" ||\r\n          errors[key] === undefined\r\n        )\r\n          return false;\r\n        //else return;\r\n      }\r\n      return true;\r\n    };\r\n\r\n    function createRequestObject(): any {\r\n      let result: any[] = [];\r\n      let vals;\r\n      //if (form.declNumber && form.declNumber != \"\") {\r\n      console.log(containerMap)\r\n      let containerList = [];\r\n      Array.from(containerMap.values()).forEach(list=>{\r\n        containerList = [...list,...containerList]\r\n      })\r\n      containerList.forEach((element: any) => {\r\n        var test = {\r\n          ...element,\r\n          ...form.droplocation,\r\n          date_time: form.dateAndTime,\r\n        };\r\n        test.containerType = form.truckType;\r\n        test.requestDetailsNumber = null;\r\n        result.push(test);\r\n      });\r\n      let truckTypeArray: any[] = createrequestTruckType(\r\n        form.dropInterval,\r\n        form.dateAndTime,\r\n        form.truckCount,\r\n        form.truckType\r\n      );\r\n\r\n\r\n      console.log({\r\n        requestTruckType: truckTypeArray ?? [],\r\n        containerList: result,\r\n        multiLocAndTime: false,\r\n        date_time: form.dateAndTime,\r\n        truckNumber: form.truckCount,\r\n      })\r\n\r\n      return {\r\n        requestTruckType: truckTypeArray ?? [],\r\n        containerList: result,\r\n        multiLocAndTime: false,\r\n        date_time: form.dateAndTime,\r\n        truckNumber: form.truckCount,\r\n      };\r\n      //  }\r\n    }\r\n\r\n    function createrequestTruckType(\r\n      interval: string,\r\n      dateTime: string,\r\n      numberOftruck: string,\r\n      truckType: any\r\n    ): any[] {\r\n      let truckTypes: any[] = [];\r\n      let truckVar: any;\r\n      let nbTruck = Number(numberOftruck);\r\n      let intervalInMilliSeconds: number = utils.convertToMillSeconds(interval);\r\n      let myInterval: number = 0;\r\n      for (let i = 0; i < nbTruck; i++) {\r\n        truckVar = {\r\n          dateAndTime: moment(form.dateAndTime).format(\"DD/MM/YYYY H:mm\"),\r\n          index: i,\r\n          interval: interval,\r\n          vehicleCode: truckType?.value ?? \"code\",\r\n          vehicleName: truckType?.label ?? \"name\",\r\n        };\r\n        truckTypes.push(truckVar);\r\n        myInterval = myInterval + intervalInMilliSeconds;\r\n      }\r\n\r\n      return truckTypes;\r\n    }\r\n    var bookTruckDetails: any = {};\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      async gotoPaymentDiscPage() {\r\n        console.log(\"clicked\");\r\n        var emptyField = await validateDetails();\r\n        bookTruckDetails.multiLocAndTime = false;\r\n        bookTruckDetails.date_time = form.dateAndTime;\r\n        bookTruckDetails.truckNumber = form.truckCount;\r\n        console.log(\"emptyField\", emptyField);\r\n        if (emptyField) {\r\n          let r: any = await createRequestObject();\r\n          console.log(r, form);\r\n          var resp = await fetchContainerSummaryPayment(r);\r\n          if (resp?.success) {\r\n            var response = resp.data?.data?.dataItems[0];\r\n            //response.bookTruckDetails.date_time = \"19/10/2021 14:44\"; //form.dateAndTime; //r.date_time;\r\n            response.bookTruckDetails = bookTruckDetails;\r\n            var payment = createPaymentObject(response);\r\n            payment.totalContainerTariff = response.totalContainerTariff;\r\n            payment.totalTokenTariff = response.totalTokenTariff;\r\n            console.log(payment);\r\n            history.push(\"/quickBook/payment\", payment);\r\n            // if (\r\n            //   (form.declNumber !== \"\" || form.containerNumber !== \"\") &&\r\n            //   Object.keys(form.truckType).length !== 0 &&\r\n            //   //Object.keys(dropLocation).length !== 0 &&\r\n            //   form.droplocation.consigneeContactName !== \"\" &&\r\n            //   form.truckCount !== \"\"\r\n            // ) {\r\n            //   let r: any = await createRequestObject();\r\n            //   // props.clickedContinue(r, r?.requestTruckType);\r\n            // }\r\n            //};\r\n          } else {\r\n            setErrors({\r\n              ...errors,\r\n              general: response?.data?.message || response?.data?.error,\r\n            });\r\n          }\r\n        }\r\n      },\r\n    }));\r\n    // const onContinue = async () => {\r\n    // console.log(\"clicked\");\r\n    // var emptyField = await validateDetails();\r\n    // bookTruckDetails.multiLocAndTime = false;\r\n    // bookTruckDetails.date_time = form.dateAndTime;\r\n    // bookTruckDetails.truckNumber = form.truckCount;\r\n    // console.log(\"emptyField\", emptyField);\r\n    // if (emptyField) {\r\n    //   let r: any = await createRequestObject();\r\n    //   console.log(r, form);\r\n    //   var resp = await fetchContainerSummaryPayment(r);\r\n    //   if (resp?.success) {\r\n    //     var response = resp.data?.data?.dataItems[0];\r\n    //     //response.bookTruckDetails.date_time = \"19/10/2021 14:44\"; //form.dateAndTime; //r.date_time;\r\n    //     response.bookTruckDetails = bookTruckDetails;\r\n    //     var payment = createPaymentObject(response);\r\n\r\n    //     console.log(payment);\r\n    //     history.push(\"/quickBook/payment\", payment);\r\n    //     // if (\r\n    //     //   (form.declNumber !== \"\" || form.containerNumber !== \"\") &&\r\n    //     //   Object.keys(form.truckType).length !== 0 &&\r\n    //     //   //Object.keys(dropLocation).length !== 0 &&\r\n    //     //   form.droplocation.consigneeContactName !== \"\" &&\r\n    //     //   form.truckCount !== \"\"\r\n    //     // ) {\r\n    //     //   let r: any = await createRequestObject();\r\n    //     //   // props.clickedContinue(r, r?.requestTruckType);\r\n    //     // }\r\n    //     //};\r\n    //   } else {\r\n    //     setErrors({\r\n    //       ...errors,\r\n    //       general: response?.data?.message || response?.data?.error,\r\n    //     });\r\n    //   }\r\n    // }\r\n    //  };\r\n\r\n\r\n\r\n    return (\r\n      <IonPage className=\"BookTruck-Location\">\r\n        <IonContent>\r\n          <div className=\"book-quick\">\r\n            <div className=\"validationMessage \">\r\n              <IonLabel className=\"\" hidden={errors.general === \"\"}>\r\n                {errors.general}\r\n              </IonLabel>\r\n            </div>\r\n            {/* <TxtInput\r\n              name={\"declNumber\"}\r\n              value={form.declNumber}\r\n              label=\"Declaration Number\"\r\n              errors={errors.declNumber}\r\n              type=\"text\"\r\n              required={true}\r\n              onChange={handleChange}\r\n              datatype=\"TEXT\"\r\n              placeholder=\"Declaration Number\"\r\n              icon={icon.declNumber}\r\n              onBlur={onBlur}\r\n              pattern=\"###-########-###\"\r\n              description=\" Format xxx-yyyyyyyy-zz\"\r\n              clearInput={false}\r\n            /> */}\r\n            {/* <Autocomplete\r\n              name={\"declNumber\"}\r\n              errors={errors.declNumber}\r\n              icon={icon.declNumber}\r\n              onOptionClick={onDeclarationClick}\r\n              onSuggestionChange={onHandleChange}\r\n              label={\"Declaration Number\"}\r\n              isReset={isDeclarationReset}\r\n              suggestions={suggestions}\r\n              value={\"\"}\r\n            /> */}\r\n            {/* eanas */}\r\n            {/* {txtInputAdd.declNumber.map((item, index) => ( */}\r\n              { declarationFields && declarationFields.map((field, index) =>(\r\n              // <TxtInput\r\n              //   key={index}\r\n              //   name={\"declNumber\" + (index * 1 + 1)}\r\n              //   value={form[\"declNumber\" + (index * 1 + 1)]}\r\n              //   label=\"Declaration Number\"\r\n              //   errors={errors[\"declNumber\" + (index * 1 + 1)]}\r\n              //   type=\"text\"\r\n              //   //required={true}\r\n              //   onChange={handleChange}\r\n              //   datatype=\"TEXT\"\r\n              //   placeholder={\"Declaration Number\"}\r\n              //   onBlur={onBlur}\r\n              //   pattern=\"###-########-###\"\r\n              //   description=\" Format xxx-yyyyyyyy-zz\"\r\n              // />\r\n              <>\r\n              <Autocomplete\r\n              name={field.name}\r\n              errors={errors[field.name]}\r\n              // icon={(field.isParent && field.isIconDisabled) ? plusDisabledIcon : (field.isParent && !field.isIconDisabled) ? plusIcon : deleteIcon}\r\n              icon={field.icon}\r\n              onOptionClick={onDeclarationClick}\r\n              onSuggestionChange={onHandleChange}\r\n              onBlur={onBlur}\r\n              label={\"Declaration Number\"}\r\n              value={field.value}\r\n              pattern={\"###-########-####\"}\r\n              suggestions={field.suggestions}\r\n              clearInput={clearInput}\r\n              // ref={field.ref}\r\n            />\r\n            </>\r\n            ))}\r\n\r\n            {/* eanas */}\r\n            {/* <TxtInput\r\n              name={\"containerNumber\"}\r\n              value={form.containerNumber}\r\n              label=\"Container Number\"\r\n              errors={errors.containerNumber}\r\n              type=\"text\"\r\n              required={true}\r\n              onChange={handleChange}\r\n              datatype=\"TEXT\"\r\n              placeholder=\"Container Number\"\r\n              icon={icon.containerNumber}\r\n              onBlur={onBlur}\r\n              clearInput={false}\r\n            /> */}\r\n             {/* <Autocomplete\r\n              name={\"containerNumber\"}\r\n              errors={errors.containerNumber}\r\n              icon={plusIcon}\r\n              onOptionClick={onDeclarationClick}\r\n              onSuggestionChange={onHandleChange}\r\n              label={\"Container Number\"}\r\n              suggestions={suggestions}\r\n              value={\"\"}\r\n            /> */}\r\n              { containerFields && containerFields.map((field, index) =>( \r\n              // <TxtInput\r\n              //   key={index}\r\n              //   name={\"containerNumber\" + (index * 1 + 1)}\r\n              //   value={form[\"containerNumber\" + (index * 1 + 1)]}\r\n              //   label=\"Container Number\"\r\n              //   errors={errors[\"containerNumber\" + (index * 1 + 1)]}\r\n              //   type=\"text\"\r\n              //   //required={true}\r\n              //   onChange={handleChange}\r\n              //   datatype=\"TEXT\"\r\n              //   placeholder=\"Container Number\"\r\n              //   onBlur={onBlur}\r\n              // />\r\n              <>\r\n              <Autocomplete\r\n              value={field.value}\r\n              name={field.name}\r\n              errors={errors[field.name]}\r\n              // icon={(field.isParent && !field.isIconDisabled) ? plusIcon : (field.isParent && field.isIconDisabled) ? plusDisabledIcon : deleteIcon}\r\n              icon={field.icon}\r\n              onOptionClick={onDeclarationClick}\r\n              onSuggestionChange={onHandleChange}\r\n              onBlur={onBlur}\r\n              label={\"Container Number\"}\r\n              suggestions={field.suggestions}\r\n              clearInput={clearInput}\r\n              // ref={field.ref}\r\n            />\r\n            </>\r\n            ))}\r\n            <div className=\"twoItem\">\r\n              <div className=\"eachElement\">\r\n                {\" \"}\r\n                <DrpdownInput\r\n                  name={\"truckCount\"}\r\n                  value={form.truckCount}\r\n                  label=\"Truck Count\"\r\n                  errors={errors.truckCount}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  placeholder=\"Enter Count\"\r\n                  listValues={totalTruckNumber}\r\n                />\r\n              </div>\r\n              <div className=\"eachElement\">\r\n                <DrpdownInput\r\n                  name={\"dropInterval\"}\r\n                  value={form.dropInterval}\r\n                  label=\"Drop Interval\"\r\n                  errors={errors.dropInterval}\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  type=\"text\"\r\n                  placeholder=\"Select Interval\"\r\n                  listValues={dropIntervals}\r\n                />\r\n              </div>\r\n            </div>\r\n            <BorderWithFloatingText\r\n              label={form.minDate}\r\n              content={\r\n                <Calendar\r\n                  name={\"dateAndTime\"}\r\n                  value={formatToCalendarDate(form.dateAndTime)}\r\n                  label=\"Date\"\r\n                  errors={errors.dateAndTime}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleDateTime}\r\n                  placeholder=\"text\"\r\n                  minDate={form.minDate}\r\n                  //max={form.minDate}\r\n                  icon={calenderIcon}\r\n                  displayFormat=\"DD-MMM-YYYY HH:mm\"\r\n                  className=\"dropdownInput\"\r\n                />\r\n              }\r\n            />\r\n            {errors.dateAndTime && (\r\n              <div className=\"topMargin\">\r\n                <IonText color=\"danger\" className=\"validation-message\">\r\n                  <IonLabel className=\"ion-padding-start\">\r\n                    {errors.dateAndTime}\r\n                  </IonLabel>\r\n                </IonText>\r\n              </div>\r\n            )}\r\n            <DrpdownInput\r\n              name={\"truckType\"}\r\n              value={form.truckType}\r\n              label=\"Container Type\"\r\n              errors={errors.truckType}\r\n              required={true}\r\n              onChange={handleChange}\r\n              datatype=\"TEXT\"\r\n              type=\"text\"\r\n              placeholder=\"Select Type\"\r\n              listValues={timeAddressTruckDataList.listTruck}\r\n            />\r\n\r\n            <DrpdownInput\r\n              name={\"droplocation\"}\r\n              value={form.droplocation}\r\n              label=\"Drop Address\"\r\n              errors={errors.droplocation}\r\n              type=\"address\"\r\n              required={true}\r\n              onChange={handleChange}\r\n              datatype=\"TEXT\"\r\n              placeholder=\"Enter Address\"\r\n              listValues={timeAddressTruckDataList.address}\r\n            />\r\n\r\n            <TxtInput\r\n              name={\"contactPerson\"}\r\n              value={form.droplocation?.consigneeContactName ?? \"\"}\r\n              label=\"Contact Person\"\r\n              type=\"text\"\r\n              required={true}\r\n              datatype=\"TEXT\"\r\n              placeholder=\"Name\"\r\n              readonly={true}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <TxtInput\r\n              name={\"consigneeContactNumber\"}\r\n              value={form.droplocation?.consigneeContactNumber ?? \"\"}\r\n              label=\"Mobile Number\"\r\n              type=\"text\"\r\n              required={true}\r\n              datatype=\"TEXT\"\r\n              placeholder=\"Enter Number\"\r\n              readonly={true}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <TxtInput\r\n              name={\"phoneNumber\"}\r\n              value={form.droplocation?.phoneNumber ?? \"\"}\r\n              label=\"Phone Number\"\r\n              type=\"text\"\r\n              required={true}\r\n              datatype=\"TEXT\"\r\n              placeholder=\"Enter Number\"\r\n              readonly={true}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {/* <IonToolbar> */}\r\n          {/* <div className=\"button-div\">\r\n          <div className=\"button-holder\" onClick={() => onContinue()}>\r\n            <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n          </div>\r\n        </div> */}\r\n\r\n          {/* </IonToolbar> */}\r\n        </IonContent>\r\n        {/* <IonFooter></IonFooter> */}\r\n      </IonPage>\r\n    );\r\n  }\r\n);\r\nexport default BookQuick;\r\n","import {\r\n  IonContent,\r\n  IonFooter,\r\n  IonItem,\r\n  IonLabel,\r\n  IonPage,\r\n} from \"@ionic/react\";\r\nimport React, {\r\n  useEffect,\r\n  useRef,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport Icon from \"./Icon\";\r\nimport Payment from \"./Payment\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface payQuickProps {\r\n  buttonAction?: any;\r\n  ref?: any;\r\n}\r\n\r\nconst PayQuick: React.FC<payQuickProps> = forwardRef(\r\n  ({ buttonAction }, ref) => {\r\n    let history = useHistory();\r\n    const myref = useRef();\r\n\r\n    useEffect(() => {\r\n      if (buttonAction === \"payment\") {\r\n        // onContinue();\r\n        console.log(\"payment\");\r\n      }\r\n    }, [buttonAction]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      async payNow() {\r\n        var test: any = myref.current;\r\n        if (myref.current) {\r\n          test.openRosoom();\r\n        }\r\n      },\r\n    }));\r\n\r\n    var allPayableDetails = history.location.state;\r\n    console.log(allPayableDetails);\r\n    return (\r\n      <IonPage className=\"BookTruck-Location\">\r\n        <IonContent>\r\n          <div className=\"book-quick\">\r\n            <Payment\r\n              allPayableDetails={allPayableDetails}\r\n              buttonAction={buttonAction}\r\n              ref={myref}\r\n            />\r\n          </div>\r\n        </IonContent>\r\n      </IonPage>\r\n    );\r\n  }\r\n);\r\nexport default PayQuick;\r\n","import {\r\n  IonContent,\r\n  IonFab,\r\n  IonFabButton,\r\n  IonFooter,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRouterOutlet,\r\n  IonTabBar,\r\n  IonTabButton,\r\n  IonTabs,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { arrowForwardOutline } from \"ionicons/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Redirect, Route, useHistory } from \"react-router\";\r\nimport BookQuick from \"../../components/BookQuick\";\r\nimport Header from \"../../components/Header\";\r\nimport PayQuick from \"../../components/PayQuick\";\r\nimport TxtInput from \"../../components/txtinput/TxtInput\";\r\nimport {\r\n  updateAddress,\r\n  updatePaymentStatus,\r\n} from \"../../redux/actions/AllActions\";\r\nimport Store from \"../../redux/Store\";\r\n\r\nimport \"./QuickBook.scss\";\r\nconst QuickBook = (props) => {\r\n  const [buttonState, setbuttonState] = useState(\"\");\r\n  var history = useHistory();\r\n\r\n  const [screen, setscreen] = useState<any>(\r\n    Store.getState().VariableValues.paymentStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    updatePayStatus();\r\n    setscreen(Store.getState().VariableValues.paymentStatus);\r\n  }, []);\r\n\r\n  Store.subscribe(() => {\r\n    setscreen(Store.getState().VariableValues.paymentStatus);\r\n    // console.log(\r\n    //   Store.getState().VariableValues.paymentStatus,\r\n    //   \"calling storeee\",\r\n    //   screen\r\n    // );\r\n  });\r\n  const bookref = useRef();\r\n  const payref = useRef();\r\n\r\n  function onContinue() {\r\n    if (props.location.pathname === \"/quickBook/book\") {\r\n      setbuttonState(\"book\");\r\n      var test: any = bookref.current;\r\n      console.log(bookref);\r\n      if (bookref.current) {\r\n        test.gotoPaymentDiscPage();\r\n        console.log(\"09090909\");\r\n      }\r\n\r\n      console.log(\"00000\");\r\n    } else if (props.location.pathname === \"/quickBook/payment\")\r\n      setbuttonState(\"payment\");\r\n    var test: any = payref.current;\r\n    if (payref.current) {\r\n      test.payNow();\r\n    }\r\n  }\r\n\r\n  function goToHome() {\r\n    history.push(\"/tabs/landing\");\r\n  }\r\n\r\n  function updatePayStatus() {\r\n    var paymentStatus = { status: \"\", reference_num: \"0\" };\r\n    var paymentSta = updatePaymentStatus(paymentStatus);\r\n    if (paymentSta) Store.dispatch(paymentSta);\r\n    console.log(\"^^^^^^^^^^^\", screen);\r\n  }\r\n  return (\r\n    <IonPage className=\"quick-book-page\">\r\n      {/* <Header label=\"QuickBook\" action=\"home\" /> */}\r\n      <Header\r\n        label=\"Quick Book\"\r\n        action=\"home\"\r\n        showAgent={true}\r\n        agentHeader={true}\r\n      />\r\n      <IonContent className=\"quick-book-content\">\r\n        <div className=\"form-div\">\r\n          <IonTabs\r\n            className=\"declaration-tab\"\r\n            onIonTabsDidChange={() => updatePayStatus()}\r\n          >\r\n            <IonRouterOutlet>\r\n              <Redirect exact path=\"/quickBook\" to=\"/quickBook/book\" />\r\n              <Route\r\n                path=\"/quickBook/book\"\r\n                render={() => (\r\n                  <BookQuick buttonAction={buttonState} ref={bookref} />\r\n                )} //}\r\n                exact={true}\r\n              />\r\n              <Route\r\n                path=\"/quickBook/payment\"\r\n                render={() => (\r\n                  <PayQuick buttonAction={buttonState} ref={payref} />\r\n                )}\r\n                exact={true}\r\n              />\r\n            </IonRouterOutlet>\r\n            <IonTabBar slot=\"top\">\r\n              <IonTabButton\r\n                tab=\"location\"\r\n                href=\"/quickBook/book\"\r\n                className=\"quick-tabButton\"\r\n                disabled={props.location.pathname === \"/quickBook/payment\"}\r\n              >\r\n                <IonLabel>Book</IonLabel>\r\n              </IonTabButton>\r\n\r\n              <IonTabButton\r\n                tab=\"Payment\"\r\n                href=\"/quickBook/payment\"\r\n                className=\"quick-tabButton\"\r\n                disabled={props.location.pathname === \"/quickBook/book\"}\r\n              >\r\n                <IonLabel>Payment</IonLabel>\r\n              </IonTabButton>\r\n            </IonTabBar>\r\n          </IonTabs>\r\n        </div>\r\n      </IonContent>\r\n      <IonFooter>\r\n        <IonToolbar>\r\n          {/* {screen.status === \"\" && ( */}\r\n          {(props.location.pathname === \"/quickBook/book\" ||\r\n            props.location.pathname === \"/quickBook/payment\") &&\r\n            screen.status === \"\" && (\r\n              <div className=\"button-div\">\r\n                <div className=\"button-holder\" onClick={() => onContinue()}>\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n          {screen.status !== \"\" && (\r\n            <div className=\"button-div\">\r\n              <div className=\"button-holder\" onClick={() => goToHome()}>\r\n                {/* {buttonState !== \"payment\" && buttonState !== \"book\" && (\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                )}\r\n                {buttonState === \"payment\" && ( */}\r\n                <IonIcon src=\"assets/icon/home-new.svg\" className=\"button\" />\r\n                {/* )} */}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </IonToolbar>\r\n      </IonFooter>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default QuickBook;\r\n"],"sourceRoot":""}