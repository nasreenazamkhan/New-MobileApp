{"version":3,"sources":["util/Utilities.ts","components/txtinput/TxtInput.tsx","components/Texts/InformationText.tsx","components/topMenu/TopMenu.tsx","pages/profile/Profile.tsx","pages/landingpage/LandingPage.tsx","pages/address/addressCard/AddressCard.tsx","pages/address/Address.tsx","components/Star/Star.tsx","pages/VerifyPOD/PODDetails.tsx","components/InformationText.tsx","pages/VerifyPOD/ListAllPod.tsx","components/statusCard/statuscard.tsx","pages/ManualInvoice/Invoice.tsx","pages/MainTabs.tsx","pages/myBooking/status/statusCard/StatusCard.tsx","pages/myBooking/status/Status.tsx"],"names":["isEmpty","data","trim","isValid","dataType","delimiter","replaceAll","RegExp","REGEX_MAP","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","length","validateEmail","mail","validatePhone","number","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","convertToMillSeconds","interval","timeParts","split","h","m","TxtInput","label","name","type","value","onChange","required","errors","datatype","description","placeholder","icon","onBlur","readonly","contactForm","max","setError","clearInput","keyDown","isClickable","validation","setvalidation","useState","className","style","width","padding","substring","includes","spellCheck","autocapitalize","onKeyDown","e","key","preventDefault","onIonChange","validate","val","target","replace","nameTest","console","log","autocomplete","onIonBlur","maxlength","minlength","iconProps","iconName","fieldPlaceholder","expand","fill","onClick","iconClick","color","InformationText","message","TopMenu","props","agentCodeoptions","cssClass","setValue","topMenuProps","map","item","index","size","clickedOnTopMenu","slot","src","fontSize","paddingLeft","paddingRight","transform","rotate","id","selectedText","interface","detail","selected","cancel-text","interfaceOptions","list","opt","Profile","userDetails","Store","getState","CheckUserStatus","userInfo","setUser","userName","user","agentCode","activeCompanyCode","alertPopup","showAlertPopup","toGoPathName","settoGoPathName","history","useHistory","form","setForm","firstName","lastName","email","mobileNumber","landlineNumber","submitted","valid","setErrors","initialFormData","setinitialFormData","useEffect","fetchDetails","unblockHandle","useRef","current","block","action","pathname","finalData","_","isEqual","async","resp","getProfileData","success","dataItems","updateFlag","profileUpdate","errs","Object","values","some","x","updateProfileResp","updateProfile","handleChange","alertProps","isShow","alertAction","actionType","push","content","okButtonName","cancelButtonName","itemName","checkClick","class","styleProps","stroke","zoom","noValidate","onSubmit","autoComplete","erro","LandingPage","notficationCount","setNotificationCount","showModal","setShowModal","errorMessage","setErrorMessage","input","setInput","setAlertPopup","draftCount","setdraftCount","getAllSavedDraftsCount","getDraftCount","VariableValues","showDraftInHome","updateDRaftsPopupHome","reduxActions","dispatch","ClearReduxStore","httpGetCallWithoutHeader","EndPointURL","then","result","undefined","userType","agents","selectedAgent","agentName","find","cancelPolicy","isOpen","onDidDismiss","header","subHeader","backdropDismiss","inputs","buttons","text","role","handler","url","agentType","endPointHeader","response","loginWithAgent","accessToken","selectUserType","Alert","httpPatchCallWithoutHeaderAndBody","clickedNotification","chevronForwardOutline","AddressCard","address","setAddress","agent","setAgent","setMessage","itemAddress","setItem","subscribe","Addresses","getAddress","addressess","addressDtoList","forEach","element","dropZone","selectedDropZone","disableHrs","isSelected","newAddressess","payLoad","code","error","httpPostCallWithoutHeaderAndBody","addCircle","onAddressSelect","addressNickname","selectedDropZoneLabel","dropAddress","consigneeContactNumber","phoneNumber","createMode","updateAddress","showAlert","Address","Header","locationProps","showAgent","agentHeader","fullscreen","editable","Star","starValue","arr","n","starFill","setstarFill","borderStartIconProps","startIconProps","onStarClick","Icon","PODDetails","trackTruckIconProps","editContactIconProps","downloadIconProps","allBookingRelated","location","state","showSlideUpModal","setshowSlideUpModal","downloadList","setdownloadList","downloadPodPopupContent","ListDownload","downloadableListItem","okButton","cancelButton","textAreaComment","isClose","setshowModal","podDownLoadModalContent","setpodDownLoadModalContent","setresponse","selectedIndexNumber","setselectedIndexNumber","ratingObj","setratingObj","container_number","BookingReferenceNumber","feedback","rating","bookingDetails","getdetailsOfBookingNumber","bookingNumber","podCardClick","centerPopupModalOkClick","postApprovePod","textAreaHeading","mainHead","podRejectResp","postRejectPod","reviewSubmit","submitReview","openDownloadCenterpopup","status","obj","referenceNumber","containerNumber","fetchPods","topMenuItems","SlideUpModal","openOrCloseModal","modalState","DeclarationDetails","click","fromPod","CenterPopup","getTextArea","containerList","PodCard","cardClick","clickedDownloadPOD","expiryDate","verifyPodBy","verifyPodTime","icon1","icon2","icon3","ListAllPod","podList","setpodList","param","res","getAllPods","elements","getAllPod","gotoPodDetails","noOfContainers","noOfTrucks","totalAmount","amountPaid","bookedOn","SLAExpire","Statuscard","statuscardProps","gotoDetails","statusCode","addPreZero","containersInYard","containersDelivered","containersCompleted","Invoice","miscellaneousList","setmiscellaneousList","fetchAllmiscellaneousList","fetchMiscellanious","getAllmiscellaneousList","goToInvoiceTabPage","MainTabs","Keyboard","Plugins","setSelected","direction","exact","path","to","render","Status","routeProps","InvoiceTabs","tab","href","disabled","React","memo","MenuParam","handleClick","total","countsRequest","setCountsRequest","getCountRequest","respObj","keys","searchClick","customBack","backClick","padding-top","margin-top","ALL","PODUPL","INVAPPR"],"mappings":"oHAAA,4RAKO,MAAMA,EAAWC,IACZ,OAAPA,IACHA,EAAK,IACkB,KAAhBA,EAAKC,QAGDC,EAAU,CAACC,EAAeH,EAAWI,KAC5CA,IACFJ,EAAOA,EAAKK,WAAWD,EAAW,KAE7B,IAAIE,OAAOC,IAAUJ,IAAWK,KAAKR,IAGjCS,EAAkB,CAACT,EAAWU,EAAcN,KACvD,IAAKJ,IAASU,IAAYN,EACxB,OAAOJ,EAET,IAAIW,EAAUX,EAAKK,WAAW,IAAK,IAAIA,WAAWD,EAAW,IAC7D,IAAIQ,EAAW,GACXC,EAAM,EAEV,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQK,QAAUF,EAAMF,EAAQI,OAAQD,IACtDJ,EAAQI,IAAMV,GAChBQ,GAAsBD,EAAQE,GAC9BA,GAAY,GAEZD,GAAsBR,EAG1B,OAAOQ,GAgBII,EAAeC,GACnB,IAAIX,OAAO,4CAA4CE,KAAKS,GAGxDC,EAAeC,GACZ,IAAIb,OAAO,YACHE,KAAKW,GAIhBC,EAAe,CAACD,EAAOJ,IACpB,IAAIT,OAAO,QAAQS,EAAO,MAClBP,KAAKW,GAItB,SAASE,EAAkBC,EAAWC,GAC3C,IAAIC,EAAK,IAAIC,KAAKH,GAClB,OAAO,IAAIG,KAAKD,EAAGE,WAAWJ,EAAKK,aAAeJ,IAe7C,MAAMK,EAAwBC,IACnC,IAAIC,EAAYD,EAASE,MAAM,KAlFZ,IAACC,EAAGC,EAqFvB,OArFoBD,EAmFMF,EAAU,GAnFbG,EAmFiBH,EAAU,GAnFY,KAAxB,GAAJE,EAAS,GAAS,GAAJC,EAmFM,K,iCCrFxD,sDAwMeC,IArK2B,IAqBnC,IArBoC,MACzCC,EADyC,KAEzCC,EAFyC,KAGzCC,EAHyC,MAIzCC,EAJyC,SAKzCC,EALyC,SAMzCC,EANyC,OAOzCC,EAPyC,QAQzC/B,EARyC,SASzCgC,EATyC,YAUzCC,EAVyC,YAWzCC,EAXyC,KAYzCC,EAZyC,OAazCC,EAbyC,SAczCC,EAdyC,YAezCC,EAfyC,IAgBzCC,EAhByC,SAiBzCC,EAjByC,WAkBzCC,EAlByC,QAmBzCC,EAnByC,YAoBzCC,GACI,EACJ,MAAOC,EAAYC,GAAiBC,oBAAS,GA8C7C,OACE,yBACEC,UAAU,qBACVC,MAAOV,EAAc,CAAEW,MAAO,QAASC,QAAS,KAAQ,IAExD,kCACE,gCAASzB,GACC,QAATE,EACC,kBAAC,IAAD,CAAUoB,UAAU,yBAApB,OAEA,qCAEF,kBAAC,IAAD,CACErB,KAAMA,EACNC,KAAMA,EACNC,MACW,QAATD,IAAA,OAAkBC,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOuB,UAAU,EAAG,GAAGC,SAAS,QAC9CxB,EAAMP,MAAM,OAAO,GACnBO,EAENyB,YAAY,EACZC,eAAe,MAEfC,UAnEUC,IACbd,GACDA,EAAQc,GAENA,EAAEC,IAAIpD,OAAS,IACnBwC,GAAerD,YAAQwC,EAAUwB,EAAEC,MAC9BjE,YAAQwC,EAAUwB,EAAEC,UAAzB,GACED,EAAEE,kBACK,KA4DHC,YAxDaH,IACnB,IACII,EADAC,EAAML,EAAEM,OAAOlC,MAEnB,GAAa,QAATD,GAAkBa,EAAU,CAC9BqB,EAAM,MAAQA,EAAIE,QAAQ,MAAO,OACjC,IAAIC,EAAWtD,YAAemD,EAAW,EAANtB,EAAU,GAC7C0B,QAAQC,IAAIF,GACD,MAAPH,GAIArB,EAHGwB,EAGM,GAFA,gBAAkBzB,EAAM,iBAKrC0B,QAAQC,IAAI,YAAaL,GAEvBL,EAAEM,OAAO9D,UACX6D,EAAM9D,YAAgB8D,EAAKL,EAAEM,OAAO9D,QAAS,MAEzB,UAAlBwD,EAAEM,OAAOnC,OACXiC,EAAWtD,YAAcuD,GAIvBrB,EAHGoB,EAGM,GAFA,8BAIXK,QAAQC,IAAIN,GACZf,GAAee,IAEZvB,GAAUR,EAAS2B,EAAGK,EAAKD,IA4B1BnB,WAAYA,EACZX,SAAUA,EACVqC,aAAa,MACbnE,QAASA,EACTkC,YAAaA,EACba,UAAU,YACVqB,UAAYZ,IACNpB,GAAQA,EAAOoB,IAIrBa,UAAW9B,EACX+B,UAAW/B,EACXF,SAAUA,IAAsB,IAE9BM,GAAeR,GACf,kBAAC,IAAD,CACEoC,UAAWpC,EACXqC,SAAU9C,EACV+C,iBAAkBvC,KAKvBS,GAAeR,GACd,kBAAC,IAAD,CAEAY,UAAU,cAEV2B,OAAO,OAEPC,KAAK,QAELC,QAAS,IAAMzC,EAAK0C,UAAUnD,EAAMQ,IAIpC,kBAAC,IAAD,CAEEqC,UAAWpC,EAEXqC,SAAU9C,EAEV+C,iBAAkBvC,MASxB,yBAAKa,UAAU,IACZhB,GACC,kBAAC,IAAD,CAAS+C,MAAM,SAAS/B,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,wCACjBhB,KAKRa,GAAcX,GACb,kBAAC,IAAD,CAAS6C,MAAM,SAAS/B,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,wCACjBd,O,uDChMb,2BASe8C,IAHyC,IAAkB,IAAjB,QAAEC,GAAc,EACvE,OAAO,yBAAKjC,UAAU,mBAAf,cAA6CiC,K,iCCPtD,oEAUe,SAASC,EAAQC,GAC9B,MAAMC,EAAmB,CACvBC,SAAU,0BAELxD,EAAOyD,GAAYvC,mBAAc,IAExC,OACE,kBAAC,IAAD,CAAQC,UAAU,qBAChB,yBAAKA,UAAU,kBACZmC,EAAMI,aAAaC,IAAI,CAACC,EAAMC,IAC7B,yBAAKhC,IAAKgC,GACM,UAAbD,EAAK7D,MACJ,kBAAC,IAAD,CACEoB,UAAU,cACV2C,KAAK,QACLd,QAAS,IAAMY,EAAKG,oBAEnBH,EAAKrD,MAAQ,kBAAC,IAAD,CAASA,KAAMqD,EAAKrD,KAAMyD,KAAMJ,EAAKI,OAClDJ,EAAKK,KACJ,kBAAC,IAAD,CACED,KAAMJ,EAAKI,KACXC,IAAK,gBAAkBL,EAAKK,IAAM,OAClC7C,MAAO,CACL8C,SAAUN,EAAKE,KACfK,YAAa,MACbC,aAAc,MACdC,UAAUT,EAAKU,UAIpBV,EAAK9D,MAAQ8D,EAAK9D,MAGT,YAAb8D,EAAK7D,MACJ,yBAAKwE,GAAG,iBACN,kCACE,kBAAC,IAAD,CACEvE,MAAOA,EACPwE,aAAcxE,EAAMH,MACpB4E,UAAU,UACV1C,YAAcH,IACZ,IAAIK,EAAML,EAAE8C,OAAO1E,MACnByD,EAASxB,GACTI,QAAQC,IAAIsB,EAAKe,UACjBf,EAAKG,iBAAiB9B,IAExB2C,eAAA,EACAtE,YAAasD,EAAK9D,KAClB+E,iBAAkBtB,EAClBpC,UAAU,eAETyC,EAAKkB,KAAKnB,IAAI,CAACoB,EAAKlB,IAEjB,kBAAC,IAAD,CACE7D,MAAO+E,EACPlD,IAAKgC,EACL1C,UAAU,cAET4D,EAAIlF,iB,mGCpE/B,iIA0SemF,UAxRf,WAAoB,IAAD,EACbC,EAAcC,IAAMC,WAAWC,gBACnC,MAAOC,EAAUC,GAAWpE,mBAAc,CACxCqE,SAAUN,EAAYO,KAAKD,SAC3BE,UAAS,UAAER,EAAYO,KAAKE,yBAAnB,aAAE,EAAoCjG,MAAM,KAAK,MAErDkG,EAAYC,GAAkB1E,oBAAS,IACvC2E,EAAcC,GAAmB5E,mBAAS,IACjD,IAAI6E,EAAUC,cACd,MAAOC,EAAMC,GAAWhF,mBAAS,CAC/BiF,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,aAAc,GACdC,eAAgB,GAChBC,WAAW,EACXC,OAAO,EACPhB,UAAW,GACXF,SAAU,MAgBLpF,EAAQuG,GAAaxF,mBAAc,KACnCyF,EAAiBC,GAAsB1F,mBAAc,IAE5D2F,oBAAU,KACRC,KACC,IAEH,MAAMC,EAAgBC,mBACtBH,oBAAU,KACR,GAAId,EAcF,OAbAgB,EAAcE,QAAUlB,EAAQmB,MAAM,CAAC,EAAcC,KAAY,IAA1B,SAAEC,GAAuB,EAE9D,GADAtB,EAAgBsB,GACC,kBAAbA,EAA8B,CAChC,IAAIC,EAAYpB,EAIhB,UAHOoB,EAAU5B,iBACV4B,EAAUZ,aACVY,EAAUb,WACZc,IAAEC,QAAQZ,EAAiBU,GAE9B,OADAzB,GAAe,IACR,KAIN,WACLmB,EAAcE,QAAQA,SAAWF,EAAcE,QAAQA,YAG1D,CAACN,EAAiBV,IAErB,MAAMa,EAAeU,UACnB,IAAIC,QAAkBC,YAAerC,EAASE,WAC9C,OAAIkC,QAAJ,IAAIA,OAAJ,EAAIA,EAAME,iBACFzB,EAAQ,IACTD,KACAwB,EAAK/J,KAAKA,KAAKkK,UAAU,KAE9BhB,EAAmBa,EAAK/J,KAAKA,KAAKkK,UAAU,MAGhD,IAAIC,GAAa,EACjB,MAAMC,EAAgBN,UACpB,IAAIO,EAAY,GAiBhB,GAhBItK,YAAQwI,EAAKE,aACf4B,EAAK5B,UAAY,0BAEf1I,YAAQwI,EAAKG,YACf2B,EAAK3B,SAAW,yBAGd3I,YAAQwI,EAAKI,SACf0B,EAAK1B,MAAQ,qBAEX5I,YAAQwI,EAAKK,gBACfyB,EAAKzB,aAAe,6BAElB7I,YAAQwI,EAAKM,kBACfwB,EAAKxB,eAAiB,+BAGL,KAAjBpG,EAAOkG,OACiB,KAAxBlG,EAAOmG,cACmB,KAA1BnG,EAAOoG,qBAEF,IAAKyB,OAAOC,OAAO9H,GAAQ+H,KAAMC,GAAY,OAANA,GAAoB,KAANA,GAAW,CACrE,IAAIC,QAA0BC,YAAcpC,GAE1C4B,IADEO,EAAkBT,QAMRK,OAAOC,OAAO9H,GAAQ+H,KAAMC,GAAY,OAANA,GAAoB,KAANA,GAGhE,OADAzB,EAAU,IAAKvG,KAAW4H,IACnBF,GAGHS,EAAe,CAAC1G,EAAQ5B,KAC5BG,EAAOyB,EAAEM,OAAOpC,MAAQ,GACxBoG,EAAQ,IACHD,EACH,CAACrE,EAAEM,OAAOpC,MAAOE,KAIfuI,EAAa,CACjBC,OAAQ7C,EACRvC,QAAS,GACTqF,YASFjB,eAA2B5D,EAAM8E,GAE/B,GADA9C,GAAe,GACX8C,EAAY,OACWZ,MAEvBhB,IACIC,GACFA,EAAcE,UAEhBlB,EAAQ4C,KAAK9C,EAAe,UAG9BK,EAAQS,GACJI,GACFA,EAAcE,UAEhBlB,EAAQ4C,KAAK9C,EAAe,KAxB9B+C,QACE,+EACFC,aAAc,OACdC,iBAAkB,SAClBvI,KAAM,6CACNwI,SAAU,IAsBZ,OACE,kBAAC,IAAD,CAASxE,GAAG,eACV,kBAAC,IAAD,CACE1E,MAAM,aACNsH,OAAO,QACP6B,WAAY,IAAMlB,MAEpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,WAAYA,IACnB,yBAAKpH,UAAU,kBACb,yBAAKA,UAAU,eACf,yBAAKA,UAAU,gBACb,6BACE,kBAAC,IAAD,CAAMwB,UA9IY,CAC5B7C,KAAM,mBACNkE,KAAM,YACNiF,MAAO,aA6IC,yBAAK9H,UAAU,oBACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAMwB,UA5II,CACtB7C,KAAM,SACNoJ,WAAY,CACVC,OAAQ,UACRD,WAAY,CAAEE,KAAM,WA4IhB,yBAAKjI,UAAU,gBACb,yBAAKA,UAAU,qBAEf,0BAAMkI,YAAU,EAACC,SAAUxB,EAAeyB,aAAa,OACrD,kBAAC,IAAD,CAASpI,UAAU,gBACjB,yBAAKA,UAAU,gBACZ8E,EAAKV,UAIR,yBAAKpE,UAAU,eACb,kBAAC,IAAD,CACErB,KAAM,YACNE,MAAOqF,EAASI,UAChB5F,MAAM,aACNM,OAAQA,EAAOsF,UACf1F,KAAK,OACLG,UAAU,EACVO,UAAU,EACVR,SAAUqI,EACVlI,SAAS,OACTE,YAAY,eAEd,kBAAC,IAAD,CACER,KAAM,YACNE,MAAOiG,EAAKE,UACZtG,MAAM,aACNM,OAAQA,EAAOgG,UACfpG,KAAK,OACLG,UAAU,EACVD,SAAUqI,EACVlI,SAAS,OACTE,YAAY,eAGd,kBAAC,IAAD,CACER,KAAM,WACNE,MAAOiG,EAAKG,SACZvG,MAAM,YACNM,OAAQA,EAAOiG,SACfrG,KAAK,OACLG,UAAU,EACVD,SAAUqI,EACVhI,YAAY,cAGd,kBAAC,IAAD,CACER,KAAM,QACNE,MAAOiG,EAAKI,MACZxG,MAAM,QACNM,OAAQA,EAAOkG,MACftG,KAAK,QACLG,UAAU,EACVD,SAAUqI,EAEVhI,YAAY,QACZM,SAAW4I,GAAS9C,EAAU,IAAKvG,EAAQkG,MAAOmD,MAGpD,kBAAC,IAAD,CACE1J,KAAM,eACNE,MAAOiG,EAAKK,aACZzG,MAAM,SACNM,OAAQA,EAAOmG,aACfvG,KAAK,MACLG,UAAU,EACVD,SAAUqI,EACVlI,SAAS,UAETC,YAAY,2BACZC,YAAY,SACZK,IAAK,EACLC,SAAW4I,GACT9C,EAAU,IAAKvG,EAAQmG,aAAckD,MAIzC,kBAAC,IAAD,CACE1J,KAAM,iBACNE,MAAOiG,EAAKM,eACZ1G,MAAM,QACNM,OAAQA,EAAOoG,eACfxG,KAAK,MACLG,UAAU,EACVD,SAAUqI,EACVlI,SAAS,UAETC,YAAY,0BACZC,YAAY,QACZK,IAAK,EACLC,SAAW4I,GACT9C,EAAU,IAAKvG,EAAQoG,eAAgBiD,e,qMCG9CC,MA7Pf,WACE,IAAI1D,EAAUC,cACd,IAAIf,EAAcC,IAAMC,WAAWC,gBAAgBI,KACnD,MAAOkE,EAAkBC,GAAwBzI,mBAAS,MACnD0I,EAAWC,GAAgB3I,oBAAS,IACpC4I,EAAcC,GAAmB7I,mBAAS,KAC1C8I,EAAOC,GAAY/I,mBAAS,KAC5ByE,EAAYuE,GAAiBhJ,oBAAS,IACtCiJ,EAAYC,GAAiBlJ,mBAAS,GA2C7CsG,eAAe6C,IACb,IAAI5C,QAAa6C,cACjB,IAAQ,OAAJ7C,QAAI,IAAJA,OAAA,EAAAA,EAAME,WAAe,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAM/J,MAAO,EAAG,CACnC0M,EAAa,OAAC3C,QAAD,IAACA,OAAD,EAACA,EAAM/J,MACTwH,IAAMC,WAAWoF,eAAeC,gBAC3CN,EAAchF,IAAMC,WAAWoF,eAAeC,iBAC9C,IAAIC,QAA8BC,KAChC,GAEED,GAAuBvF,IAAMyF,SAASF,IAlD9C5D,oBAAU,KACRxE,QAAQC,IAAI,cAAe2C,GAC3B2F,cACeC,YACbC,uCAEOC,KAAMC,IAAY,IAAD,KACxB,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQrD,UACVgC,EAAoB,OAACqB,QAAD,IAACA,GAAD,UAACA,EAAQtN,YAAT,iBAAC,EAAcA,YAAf,aAAC,EAAoBkK,UAAU,OAEtD,IAEHf,oBAAU,KAAO,IAAD,IACd,QAA6BoE,IAAzBhG,EAAYiG,UAAiD,OAAvBjG,EAAYkG,OACpD9I,QAAQC,IAAI2C,QACP,IACM,OAAXA,QAAW,IAAXA,GAAA,UAAAA,EAAakG,cAAb,eAAqB1M,QAAS,QACAwM,IAAnB,OAAXhG,QAAW,IAAXA,OAAA,EAAAA,EAAamG,eAEbnG,EAAYkG,OAAOxH,IAAI,CAACC,EAAWC,IACjCmG,EAAMrB,KAAK,CACT5I,KAAM,QACNF,MAAO+D,EAAK6B,UAAY,IAAM7B,EAAKyH,UACnCrL,MAAO4D,KAGXqG,EAASD,GACLJ,IAEFvH,QAAQC,IAAI,YAAasH,GACzBC,GAAa,IAEfxH,QAAQC,IAAI,iBAAkBsH,QACzB,GAAmC,IAApB,OAAX3E,QAAW,IAAXA,GAAA,UAAAA,EAAakG,cAAb,eAAqB1M,QAAa,CAAC,IAAD,EAC3C,IAAIf,EAAI,OAAGuH,QAAH,IAAGA,GAAH,UAAGA,EAAakG,cAAhB,aAAG,EAAqBG,KAAM1J,IAAM,GAC5C,IAAIwJ,EAAgBV,IAA8BhN,GAC9C0N,GAAelG,IAAMyF,SAASS,GAClCf,MAED,CAACpF,IAeJ,MA4DMsD,EAAa,CACjBC,OAAQ7C,EACRvC,QAAS,IACTwF,QAAS,4BACTrI,KAAM,sCACNkI,YAbuB,CAAC7E,EAAM8E,KAC1BA,IACFwB,GAAc,GACdnE,EAAQ4C,KAAK,kBAYfI,SACEoB,EACA,2GACFoB,cAAc,EACd1C,aAAc,WACdC,iBAAkB,UAEpB,OACE,kBAAC,IAAD,CAAS3H,UAAU,gBACjB,kBAAC,IAAD,CACEqK,OAAQ5B,EACR6B,aAAc,KAAO7B,EACrB8B,OAAQ,oBACRC,UAAW7B,EACX8B,iBAAiB,EACjBC,OAAQ7B,EACRxG,SAAS,cACTsI,QAAS,CACP,CACEC,KAAM,WACNC,KAAM,UACNC,QAAUvO,IAER,GADA2E,QAAQC,IAAI,OAAQ5E,QACPuN,IAATvN,EAEF,OADAqM,EAAgB,iCACT,EAhFEvC,WACrBqC,GAAa,GACbxH,QAAQC,IAAI5E,GACZ,IAAIwO,EACFpB,aACA,cACApN,EAAK+H,UACL,cACA/H,EAAKyO,UAEP,IAAIC,EAAiB,CACnB7G,SAAUN,EAAYM,SACtB2F,SAAU,gBAGRmB,QAAiBC,YAAeJ,EAAKE,GAEzC,GADA/J,QAAQC,IAAI+J,SACFA,EAAS1E,QAAS,CAC1B,IAAIqD,EAASqB,EAAS3O,KAAKA,KAAKkK,UAAU,GACtC2E,QAAoB7B,IAA4BM,EAAOuB,aACvDA,GAAarH,IAAMyF,SAAS4B,GAEhC,IAAIJ,QAAkBzB,IAEpBM,EAAOxF,KAAK0F,UAEViB,GAAWjH,IAAMyF,SAASwB,GAG9B,IAAIf,QAAsBV,IAA8BhN,GAEpD0N,GAAelG,IAAMyF,SAASS,GAElC,IAAIlN,EAAOgH,IAAMC,WAAWC,gBAC5B/C,QAAQC,IAAI,QAASpE,GACrBmM,MA8CemC,CAAe9O,QAK9B,kBAAC,IAAD,KACE,kBAAC+O,EAAA,EAAD,CAAOlE,WAAYA,IACnB,yBAAKpH,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CAAQ6B,QAAS,IAvGDwE,WAC1B,GAAyB,MAArBkC,EAA0B,CAC5B,IAAI2C,QAAiBK,YACnB5B,iCAEQuB,EAAS1E,UACjBgC,EAAqB,KACrB5D,EAAQ4C,KAAK,wBAEV5C,EAAQ4C,KAAK,mBA8FagE,IACrB,kBAAC,IAAD,CACExL,UACuB,OAArBuI,EAA4B,aAAe,aAE7CxG,MAAM,UAELwG,GAEH,kBAAC,IAAD,CAASzF,IAAI,2BAGjB,yBAAK9C,UAAU,kBACb,0BAAMA,UAAU,4BAAhB,SACQ,kBAAC,IAAD,KAAW8D,EAAYkB,WAD/B,KAGA,yDAEF,yBAAKhF,UAAU,oBACb,kBAAC,IAAD,CACEA,UAAU,cACV6B,QAAS,KACP+C,EAAQ4C,KAAK,gBAHjB,aAOE,kBAAC,IAAD,CAAS3E,KAAK,MAAMzD,KAAMqM,SAKhC,yBAAKzL,UAAU,eACb,kBAAC,IAAD,CAASA,UAAU,aACjB,kBAAC,IAAD,CAAQ8C,IAAI,oCACZ,kBAAC,IAAD,KACE,yBAAK9C,UAAU,kBACb,yBAAKA,UAAU,wBACb,0BAAMA,UAAU,cAAhB,cACA,0BAAMA,UAAU,WAAhB,oCAIF,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEA,UAAU,cACV6B,QAAS,KACP+C,EAAQ4C,KAAK,WAHjB,aAcV,yBAAKxH,UAAU,eACb,kBAAC,IAAD,CAASA,UAAU,6BACjB,kBAAC,IAAD,CAAQ8C,IAAI,+BACZ,kBAAC,IAAD,KACE,yBAAK9C,UAAU,kBACb,yBAAKA,UAAU,wBACb,0BAAMA,UAAU,cAAhB,UACA,0BAAMA,UAAU,WAAhB,kCAIF,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEA,UAAU,cACV6B,QAAS,IAAM+C,EAAQ4C,KAAK,iBAF9B,kB,yBCrPL,SAASkE,EAAYvJ,GAClCjB,QAAQC,IAAI,cAAegB,GAC3B,IAAIyC,EAAUC,cACd,MAAO8G,EAASC,GAAc7L,mBAAS,KAChC8L,EAAOC,GAAY/L,sBACnByE,EAAYC,GAAkB1E,oBAAS,IACvCkC,EAAS8J,GAAchM,mBAAS,KAChCiM,EAAaC,GAAWlM,mBAAS,IAExCgE,IAAMmI,UAAU,KACdJ,EAAS/H,IAAMC,WAAWC,gBAAgBI,KAAK4F,eAC/C2B,EAAW7H,IAAMC,WAAWmI,WAC5BjL,QAAQC,IAAI,mBAGduE,oBAAU,KACRxE,QAAQC,IAAI,YAAa4C,IAAMC,WAAWmI,WAC1CC,IACAlL,QAAQC,IAAI,MAAOwK,IAClB,CAACE,IAEJ,MAAMO,EAAa/F,UAAa,IAAD,YACzB6E,QAAiBxB,YAAyBC,cAE9C,SAAI,OAAMuB,QAAN,IAAMA,OAAN,EAAMA,EAAU1E,SAAS,EACvB6F,EAAa9C,QACDxF,IAAMyF,SAAS6C,GAE/BnL,QAAQC,IAAI+J,EAAS3O,KAAK+P,eAAehP,QAEzC4N,EAAS3O,KAAK+P,eAAeC,QAASC,IACpCA,EAAQC,SAAWD,EAAQE,mBAE7BxB,EAAS3O,KAAK+P,eAAeK,WAAazB,EAAS3O,KAAKoQ,WACxDzB,EAAS3O,KAAK+P,eAAe,GAAGM,YAAa,EAE7C,IAAIC,EAAgBtD,IAAwB2B,EAAS3O,KAAK+P,gBACtDO,GAAe9I,IAAMyF,SAASqD,GAClCjB,EAAWiB,EAAcC,cACpB,GACuC,QAApC,OAAR5B,QAAQ,IAARA,GAAA,UAAAA,EAAU3O,YAAV,mBAAgBA,YAAhB,mBAAsBkK,UAAU,UAAhC,eAAoCsG,OACS,uBAArC,OAAR7B,QAAQ,IAARA,GAAA,UAAAA,EAAU3O,YAAV,mBAAgBA,YAAhB,mBAAsBkK,UAAU,UAAhC,eAAoCuG,OACpC,CACA,IAAIX,KAAa9C,QACDxF,IAAMyF,SAAS6C,GAC/BT,EAAW,MA+Bf,MAAMxE,EAAa,CACjBC,OAAQ7C,EACRvC,QAASA,EAAU,KACnBqF,YAlBF,SAAuB7E,EAAM8E,GAC3B9C,GAAe,GACX8C,GACa0F,YACbtD,gBAA4BlH,EAAKsK,MAE1BnD,KAAMC,IACb,GAAIA,EAAOrD,QAAS,CAClB,IAAIqG,EAAgBtD,IAA2B9G,EAAKsK,MAChDF,GAAe9I,IAAMyF,SAASqD,OAUxCpK,KAAMuJ,EACNvE,QAAS,qCACTC,aAAc,WACdC,iBAAkB,SAClBC,SAAU,IAWZ,OACE,yBAAKxE,GAAG,gBACN,kBAACkI,EAAA,EAAD,CAAOlE,WAAYA,IACnB,kBAAC,IAAD,CACEvF,QAAS,IAAM+C,EAAQ4C,KAAK,eAC5BpI,KAAM8N,IACNlN,UAAU,YAEQ,IAAnB2L,EAAQrO,OACP,kBAAC,IAAD,CAAS0C,UAAU,yBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,oBAAnB,qBAIJ,yBAAKA,UAAU,iBACZ2L,EAAQnJ,IAAI,CAACgK,EAAc9J,IAC1B,yBAAK1C,UAAU,cAAcU,IAAKgC,GAChC,kBAAC,IAAD,CACEI,IACE0J,EAAQI,WACJ,mCACA,mCAEN5M,UAAU,gBAEZ,kBAAC,IAAD,CACEA,UAAU,OACV6B,QAAUpB,GApCA,EAACA,EAAGiC,KAC1BiJ,EAAQY,QAASC,IACfA,EAAQI,YAAa,IAEvBjB,EAAQjJ,GAAOkK,YAAa,EAC5BhB,EAAW,IAAID,KA+BawB,CAAgB1M,EAAGiC,IAEnC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,KAAK,MACX,kBAAC,IAAD,KAAS6J,EAAQY,iBACjB,kBAAC,IAAD,KAASZ,EAAQa,uBACjB,kBAAC,IAAD,KAASb,EAAQc,aACjB,kBAAC,IAAD,aAAcd,EAAQe,wBACtB,kBAAC,IAAD,YAAaf,EAAQgB,cAEtBhB,EAAQI,YACP,kBAAC,IAAD,CAAQjK,KAAK,KACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEd,QAAS,IAzFZ2K,KACrBA,EAAQiB,YAAa,EACrBvM,QAAQC,IAAIqL,GACZ5H,EAAQ4C,KAAK,cAAegF,IAsFWkB,CAAclB,GAC7B1J,IAAI,gCACJ9C,UAAU,cAGd,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE6B,QAAS,KAAM8L,OA1FtBlL,EA0FgC+J,EAzFjD/H,GAAe,GACfsH,EAAWtJ,EAAK2K,sBAChBnB,EAAQxJ,GAHV,IAAmBA,GA2FOK,IAAI,kCACJ9C,UAAU,sB,aCpKvB,SAAS4N,EAAQzL,GAC9B,OACE,kBAAC,IAAD,CAASiB,GAAG,gBACV,kBAACyK,EAAA,EAAD,CAAQnP,MAAM,YAAYsH,OAAO,OAAO8H,cAAe3L,EAAO4L,WAAW,EAAMC,aAAa,IAC5F,kBAAC,IAAD,CAAYlG,MAAM,gBAAgBmG,YAAU,GACxC,kBAAC,EAAD,CAAYC,UAAU,M,sCCiDjBC,MAnDmB,IAAoB,IAAnB,UAAEC,GAAgB,EAEnD,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAIC,GAAK,CAAE1M,MAAM,GAGnB,MAAO2M,EAAUC,GAAezO,mBAASsO,GAezC,IAAII,EAAuB,CACzB9P,KAAM,cACNkE,KAAM,GACNiF,MAAO,SACP7H,MAAO,CAAE+H,OAAQ,YAEf0G,EAAiB,CACnB/P,KAAM,OACNkE,KAAM,GACNiF,MAAO,SACP7H,MAAO,CAAE+H,OAAQ,YAEnB,OACE,yBAAKhI,UAAU,iBACZuO,EAAS/L,IAAI,CAACC,EAAMC,IACnB,yBACEhC,IAAKgC,EACL1C,UAAU,WACV6B,QAAS,IA/BjB,SAAqBa,EAAOD,GAC1BvB,QAAQC,IAAIuB,GACZ0L,EAAU1L,EAAQ,GAClB,IAAK,IAAIrF,EAAI,EAAGA,EAAIkR,EAASjR,OAAQD,IACnCkR,EAASlR,GAAGuE,MAAO,EAErB,IAASvE,EAAI,EAAGA,GAAKqF,EAAOrF,IAC1BkR,EAASlR,GAAGuE,MAAO,EACnB4M,EAAYD,GAEdC,EAAY,IAAID,IAqBKI,CAAYjM,IAEzBD,EAAKb,KAGL,kBAACgN,EAAA,EAAD,CAAMpN,UAAWkN,IAFjB,kBAACE,EAAA,EAAD,CAAMpN,UAAWiN,Q,sDCZd,SAASI,EAAW1M,GAAQ,IAAD,IACpC2M,EAAsB,CACxBnQ,KAAM,cACNkE,KAAM,GACNiF,MAAO,SACP7H,MAAO,CAAE+H,OAAQ,WACjBD,WAAY,CAAEE,KAAM,MAGlB8G,EAAuB,CACzBpQ,KAAM,eACNkE,KAAM,GACNiF,MAAO,SACP7H,MAAO,CAAE+H,OAAQ,WACjBD,WAAY,CAAEE,KAAM,MAGlB+G,EAAoB,CACtBrQ,KAAM,oBACNkE,KAAM,GACNiF,MAAO,SACP7H,MAAO,CAAE+H,OAAQ,WACjBD,WAAY,CAAEE,KAAM,MAElBgH,EAAoB9M,EAAMyC,QAAQsK,SAASC,MAC/C,MAAOC,EAAkBC,GAAuBtP,oBAAS,IAClDuP,EAAcC,GAAmBxP,mBAAc,IACtD,IAAIyP,EAA0B,CAC5B/H,QAAS,kBAACgI,EAAA,EAAD,CAAcC,qBAAsBJ,IAC7CK,SAAU,UACVC,aAAc,SACdC,gBAAiB,6BACjBC,SAAS,EACTlR,KAAM,eAER,MAAO6J,EAAWsH,GAAgBhQ,oBAAS,IACpCiQ,EAAyBC,GAA8BlQ,mBAC5DyP,IAEKtE,EAAUgF,GAAenQ,mBAAc,KACvCoQ,EAAqBC,GAA0BrQ,mBAAc,KAC7DsQ,EAAWC,GAAgBvQ,mBAAc,CAC9CwQ,iBAAkB,GAClBC,uBAAwB,GACxBC,SAAU,GACVC,OAAQ,IAWVrK,eAAesK,IACb,IAAIrK,QAAasK,YACfzO,EAAM+M,SAASC,MAAM0B,gBAEvB,OAAIvK,QAAJ,IAAIA,OAAJ,EAAIA,EAAME,UACR0J,EAAW,OAAC5J,QAAD,IAACA,OAAD,EAACA,EAAM/J,MAGtB,SAASuU,EAAarO,GACpBvB,QAAQC,IAAIsB,GACZ4M,GAAoB,GACpBe,EAAuB3N,GAGzB4D,eAAe0K,EAAwBxU,EAAMqC,GAG3C,GAFAmR,GAAa,GACbE,EAA2BT,GACd,gBAAT5Q,EAAwB,CAE1B,GAAa,YAATrC,EAAoB,QACKyU,YAAeb,IACvB3J,UACjByJ,EAA2B,CACzBxI,QACE,kBAAC,EAAD,CACE2G,UAAYtN,GAAQwP,EAAa,IAAKD,EAAWK,OAAQ5P,MAG7D6O,SAAU,SAEVE,gBAAiB,6BACjBC,SAAS,EACTmB,gBAAiB,kBACjBC,SAAU,kDACVtS,KAAM,WAERmR,GAAa,SAEV,GAAa,WAATxT,EAAmB,CAC5B,IAAI4U,QAAsBC,YAAcjB,GACxCjP,QAAQC,IAAI,kBAAmBgQ,GAC3BA,EAAc3K,SAChBmK,SAGc,WAAT/R,IACTsC,QAAQC,IAAI,UAAWkP,GAM3BhK,iBAEsB8J,EAAoBI,iBAKxCD,EAAa,IACRD,EACHE,iBAAkBJ,EAAoBI,mBAExCrP,QAAQC,IAAI,WAAYgP,SACPkB,YAAahB,GAjB5BiB,GACArB,EAA2BT,IAmB/BnJ,eAAekL,EAAwBC,EAAQ/O,GAC7C2N,EAAuB3N,GACvB,IAAIgP,EAAM,CACRC,gBAAiBvP,EAAM+M,SAASC,MAAM0B,cACtCc,gBAAiBlP,EAAK8N,kBAExB,IAAIjK,QAAasL,YAAUH,GACvBnL,EAAKE,UACPtF,QAAQC,IAAI,QAAZ,OAAqBmF,QAArB,IAAqBA,OAArB,EAAqBA,EAAM/J,KAAKA,KAAKkK,YAC7B,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAM/J,KAAKA,KAAKkK,UAAUnJ,QAAS,IACrCiS,EAAe,OAACjJ,QAAD,IAACA,OAAD,EAACA,EAAM/J,KAAKA,KAAKkK,WAChCwJ,EAA2B,CACzBxI,QACE,kBAACgI,EAAA,EAAD,CAAcC,qBAAoB,OAAEpJ,QAAF,IAAEA,OAAF,EAAEA,EAAM/J,KAAKA,KAAKkK,YAEtDkJ,SAAU,UACVC,aAAc,SACdC,gBAAiB,6BACjBC,SAAS,EACTlR,KAAM,gBAERmR,GAAa,KAhGnBrK,oBAAU,KACRiL,KACC,IAoGH,IAAIkB,EAAe,CACjB,CACElT,KAAM,GACNmE,IAAK,SACLiF,WAAY,CAAEE,KAAM,KACpBrJ,KAAM,SACNiE,KAAM,QACND,iBAAkB,IAAM1B,QAAQC,IAAI,aAGtC,CACExC,KAAM,mBACNmE,IAAK,oBACLlE,KAAM,SACNiE,KAAM,QACNF,KAAM,SACNC,iBAAkB,IAAM1B,QAAQC,IAAI,cAGxC,OACE,kBAAC,IAAD,KACE,kBAAC0M,EAAA,EAAD,CACEnP,MAAM,cACNsH,OAAO,OAEPgI,aAAa,IAEf,kBAAC,IAAD,KACE,kBAAC8D,EAAA,EAAD,CACErJ,UAAW2G,EACX2C,iBAAmBC,IACjB3C,EAAoB2C,GACpB/B,EAA2BT,IAE7B/H,QACE,kBAACwK,EAAA,EAAD,CACExP,KAAM0N,EACN+B,MAAO,KACLnC,GAAa,IAEfoC,SAAS,MAGZ,IACH,kBAACC,EAAA,EAAD,CACE3J,UAAWA,EACXhB,QAASuI,EAAwBvI,QACjCsK,iBAAkB,CAACxV,EAAMqC,IAASmS,EAAwBxU,EAAMqC,GAChE+Q,SAAUK,EAAwBL,SAClCC,aAAcI,EAAwBJ,aACtCC,gBAAiBG,EAAwBH,gBACzCC,QAASE,EAAwBF,QACjCmB,gBAAiBjB,EAAwBiB,gBACzCC,SAAUlB,EAAwBkB,SAClCtS,KAAMoR,EAAwBpR,KAC9ByT,YAAcvR,GAAQwP,EAAa,IAAKD,EAAWI,SAAU3P,MAE/D,kBAACoB,EAAA,EAAD,CAASK,aAAcsP,IACvB,kBAAC7P,EAAA,EAAD,CACEC,QAAO,WAAa,OAARiJ,QAAQ,IAARA,GAAA,UAAAA,EAAUoH,qBAAV,eAAyBhV,SAAU,EAAxC,iBAUT,oCACG4N,QADH,IACGA,GADH,UACGA,EAAUoH,qBADb,aACG,EAAyB9P,IAAI,CAACC,EAAMC,IACnC,kBAAC6P,EAAA,EAAD,CACE7R,IAAKgC,EACLD,KAAMA,EACN+P,UAAW1B,EACX2B,mBAAoBlB,EACpBmB,WAAU,OAAEzD,QAAF,IAAEA,OAAF,EAAEA,EAAmB0D,YAC/BC,cAAa,OAAE3D,QAAF,IAAEA,OAAF,EAAEA,EAAmB2D,cAClCC,MAAO/D,EACPgE,MAAO/D,EACPgE,MAAO/D,Q,OClQNhN,MAHyC,IAAkB,IAAjB,QAAEC,GAAc,EACvE,OAAO,yBAAKjC,UAAU,mBAAf,cAA6CiC,I,kBCYvC,SAAS+Q,IACtB,IAAIpO,EAAUC,cACd,MAAOoO,EAASC,GAAcnT,mBAAc,IAC5C2F,oBAAU,MAIVW,eAAyB8M,GAAQ,IAAD,EAC9B,IAAIC,QAAYC,YAAWF,GAC3BD,EAAU,OAACE,QAAD,IAACA,GAAD,UAACA,EAAK7W,YAAN,aAAC,EAAW+W,UALtBC,CAAU,2DACT,IAqBH,OACE,kBAAC,IAAD,CAASnQ,GAAG,gBACV,kBAACyK,EAAA,EAAD,CACEnP,MAAM,aACNsH,OAAO,OACPgI,aAAa,IAGf,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAiB/L,QAAO,WAAY,OAAPgR,QAAO,IAAPA,OAAA,EAAAA,EAAS3V,SAAU,EAAxB,iBAD1B,OAGG2V,QAHH,IAGGA,OAHH,EAGGA,EAASzQ,IAAI,CAACC,EAAMC,IACnB,yBACEU,GAAG,eACH1C,IAAKgC,EACLb,QAAS,IAnBnB,SAAwBY,GACtBmC,EAAQ4C,KAAK,8BAA+B/E,GAkBrB+Q,CAAe/Q,IAE9B,kBAAC,IAAD,CAASzC,UAAU,eACjB,kBAAC,IAAD,CAAgBA,UAAU,gBACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ2C,KAAK,KACX,kBAAC,IAAD,CAAS3C,UAAU,uBAChByC,EAAKoO,gBAGV,kBAAC,IAAD,CAAQlO,KAAK,KACX,kBAAC,IAAD,CACEG,IAAI,6BACJ9C,UAAU,oBAGd,kBAAC,IAAD,CAAQ2C,KAAK,IAAI3C,UAAU,gBACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,aAChByC,EAAKgR,iBAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASzT,UAAU,cACjB,kBAAC,IAAD,sBAIN,kBAAC,IAAD,CAAQ2C,KAAK,KACX,kBAAC,IAAD,CACEG,IAAI,8BACJ9C,UAAU,oBAGd,kBAAC,IAAD,CAAQ2C,KAAK,IAAI3C,UAAU,gBACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,aAAayC,EAAKiR,aAEvC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS1T,UAAU,cAAnB,aAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ2C,KAAK,KACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS3C,UAAU,gBAAnB,gBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,aACG,EAAnByC,EAAKkR,YAAoC,EAAlBlR,EAAKmR,WAD/B,UAKJ,kBAAC,IAAD,CAAQjR,KAAK,KACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS3C,UAAU,gBAAnB,cAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,aAAayC,EAAKoR,YAGzC,kBAAC,IAAD,CAAQlR,KAAK,OAEf,kBAAC,IAAD,CAAQ3C,UAAU,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,uBACiB,qCAInB,kBAAC,IAAD,KACG,IACD,kBAAC8T,EAAA,EAAD,CACEpB,WAAYjQ,EAAKkQ,YACjBC,cAAenQ,EAAKmQ,wB,mBCW3BmB,MA9HgCC,IAC7C9S,QAAQC,IAAI6S,EAAgBvR,MAE1B,yBACEW,GAAG,eACHvB,QAAS,IAAMmS,EAAgBC,YAAYD,EAAgBvR,OAE3D,kBAAC,IAAD,CAASzC,UAAU,eACjB,kBAAC,IAAD,CAAgBA,UAAU,gBACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ2C,KAAK,KACX,kBAAC,IAAD,CAAS3C,UAAU,uBAChBgU,EAAgBvR,KAAKoO,gBAG1B,kBAAC,IAAD,CAAQlO,KAAK,KACX,kBAAC,IAAD,CACEG,IAAI,6BACJ9C,UAAU,oBAGd,kBAAC,IAAD,CAAQ2C,KAAK,IAAI3C,UAAU,gBACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,aAChBgU,EAAgBvR,KAAKgR,iBAG1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASzT,UAAU,cACjB,kBAAC,IAAD,sBAIN,kBAAC,IAAD,CAAQ2C,KAAK,KACX,kBAAC,IAAD,CACEG,IAAI,8BACJ9C,UAAU,oBAGd,kBAAC,IAAD,CAAQ2C,KAAK,IAAI3C,UAAU,gBACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,aAChBgU,EAAgBvR,KAAKiR,aAG1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS1T,UAAU,cAAnB,aAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ2C,KAAK,KACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS3C,UAAU,gBAAnB,gBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,aAChBgU,EAAgBvR,KAAKmR,WADxB,UAKJ,kBAAC,IAAD,CAAQjR,KAAK,KACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS3C,UAAU,gBAAnB,cAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,aAChBgU,EAAgBvR,KAAKoR,YAI5B,kBAAC,IAAD,CAAQlR,KAAK,OAasB,YAApCqR,EAAgBvR,KAAKyR,WACpB,kBAAC,IAAD,CAAQlU,UAAU,OAChB,kBAAC,IAAD,CAAQ2C,KAAK,KACX,yBAAK3C,UAAU,YAEjB,kBAAC,IAAD,yBAGF,kBAAC,IAAD,CAASA,UAAU,OACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQA,UAAU,aAAlB,cACc,IACZ,yBAAKA,UAAU,gBAGZmU,YAAWH,EAAgBvR,KAAK2R,oBAGrC,kBAAC,IAAD,CAAQpU,UAAU,aAAlB,YACY,IACV,yBAAKA,UAAU,eAGZmU,YAAWH,EAAgBvR,KAAK4R,uBAGrC,kBAAC,IAAD,CAAQrU,UAAU,aAAlB,YACY,IACV,yBAAKA,UAAU,cACZ,IACAgU,EAAgBvR,KAAK6R,oBAAsB,GAAK,EAAI,GACpDN,EAAgBvR,KAAK6R,4BCpG3B,SAASC,IACtB,IAAI3P,EAAUC,cACd,MAAO2P,EAAmBC,GAAwB1U,mBAAS,IA4B3D,OA1BA2F,oBAAU,MAIVW,eAAuC8M,GAAgB,IAAD,IAC/CA,IACHA,EAAQ,yCAGV,IAAIjI,QAAiBwJ,YAA0BC,qBAAqBxB,IACxD,OAARjI,QAAQ,IAARA,GAAA,UAAAA,EAAU3O,YAAV,mBAAgB+W,gBAAhB,eAA0BhW,QAAS,GACrCmX,EAAqBvJ,EAAS3O,KAAK+W,UAErCpS,QAAQC,IAAI+J,GAZZ0J,CAAwB,KACvB,IAyBD,kBAAC,IAAD,KACE,kBAAC/G,EAAA,EAAD,CACEnP,MAAM,wBACNsH,OAAO,OAEPgI,aAAa,IAEf,kBAAC,EAAD,CAAiB/L,QAAO,UAAKuS,EAAkBlX,OAAvB,eACxB,kBAAC,IAAD,KACGkX,EAAkBhS,IAAI,CAACC,EAAMC,IAC5B,kBAAC,EAAD,CACEhC,IAAKgC,EACLD,KAAMA,EACNwR,YAAa,IAxBvB5N,eAAkC5D,GAQhCmC,EAAQ4C,KAAK,uBAAwB/E,GAgBVoS,CAAmBpS,Q,aCxDnC,SAASqS,EAAS3S,GAC/B,IAAIyC,EAAUC,cACd,MAAM,SAAEkQ,GAAaC,IACrB9T,QAAQC,IAAIgB,EAAMqB,UAClB,MAAOA,EAAUyR,GAAelV,oBAAS,GASzC,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,cAAc6B,QAXXpB,IACtBS,QAAQC,IAAIV,GACZS,QAAQC,IAAIgB,GACZyC,EAAQ4C,KAAK,eAAgB,CAAE0N,UAAW,WASpC,6BACA,6BACA,+BAGJ,kBAAC,IAAD,CAASlV,UAAU,gBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUmV,OAAK,EAACC,KAAK,QAAQC,GAAG,kBAEhC,kBAAC,IAAD,CACED,KAAK,gBACLE,OAAQ,IAAM,kBAAC,EAAD,MACdH,OAAO,IAET,kBAAC,IAAD,CAAOC,KAAK,eAAeE,OAAQ,IAAM,kBAACC,EAAA,QAAD,MAAYJ,OAAO,IAC5D,kBAAC,IAAD,CACEC,KAAK,8BACLE,OAASE,GAAe,kBAAC3G,EAAe2G,GACxCL,OAAO,IAGT,kBAAC,IAAD,CACEC,KAAK,8BACLE,OAAQ,IAAM,kBAAC,EAAD,MACdH,OAAO,IAET,kBAAC,IAAD,CACEC,KAAK,6BACLE,OAAQ,IAAM,kBAACf,EAAD,MACdY,OAAO,IAET,kBAAC,IAAD,CACEC,KAAK,2BACLE,OAAQ,IAAM,kBAACG,EAAA,QAAD,MACdN,OAAO,IAET,kBAAC,IAAD,CAAOC,KAAK,gBAAgBE,OAAQ,IAAM,kBAACzR,EAAA,QAAD,MAAasR,OAAO,IAC9D,kBAAC,IAAD,CAAOC,KAAK,kBAAkBD,OAAK,EAACG,OAAQ,IAAM,kBAAC1H,EAAD,SAMpD,kBAAC,IAAD,CAAW/K,KAAK,SAAS7C,UAAU,aACjC,kBAAC,IAAD,CAAc0V,IAAI,UAAUC,KAAK,iBAC/B,kBAAC,IAAD,CAAS7S,IAAI,2BAA2B9C,UAAU,WAClD,kBAAC,IAAD,cAEF,kBAAC,IAAD,CAAc0V,IAAI,YAAYC,KAAK,mBACjC,kBAAC,IAAD,CAAS7S,IAAI,0BAA0B9C,UAAU,WACjD,kBAAC,IAAD,mBAEF,kBAAC,IAAD,CAAc4V,UAAU,IACxB,kBAAC,IAAD,CAAcF,IAAI,SAASC,KAAK,gBAC9B,kBAAC,IAAD,CAAS7S,IAAI,yBAAyB9C,UAAU,WAChD,kBAAC,IAAD,gBAEF,kBAAC,IAAD,CAAc0V,IAAI,UAAUC,KAAK,iBAC/B,kBAAC,IAAD,CAAS7S,IAAI,0BAA0B9C,UAAU,WACjD,kBAAC,IAAD,sB,kICvCG6V,UAAMC,KA1CoBC,IACvC,QAAWhW,qBAEX,OACE,oCACE,kBAAC,IAAD,CAAQqD,GAAG,eACT,kBAAC,IAAD,CAAQpD,UAAU,gBAChB,kBAAC,IAAD,CAASA,UAAU,cAAc6B,QAASkU,EAAUC,aAClD,kBAAC,IAAD,CAAgBhW,UAAU,wBACxB,kBAAC,IAAD,CAAQA,UAAU,eAChB,kBAAC,IAAD,CAAQ2C,KAAK,IAAI3C,UAAU,yBACzB,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAASA,UAAU,qBAChB+V,EAAUnX,MACF,MAGf,kBAAC,IAAD,CAAQ+D,KAAK,IAAI3C,UAAU,yBACzB,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAASA,UAAU,sBAChB+V,EAAUE,OAAS,MACX,MAGf,kBAAC,IAAD,CAAQtT,KAAK,IAAI3C,UAAU,yBACzB,6BACE,kBAAC,IAAD,CACEA,UAAU,oBACVZ,KAAMqM,IACN5I,KAAK,cACK,c,gCCvCjB,SAAS0S,EAAOpT,GAAQ,IAAD,MACpCjB,QAAQC,IAAIgB,GACZ,IAAIyC,EAAUC,cACd,MAAOqR,EAAeC,GAAoBpW,mBAAc,KACjD8L,EAAOC,GAAY/L,qBAC1BgE,IAAMmI,UAAU,KACdJ,EAAS/H,IAAMC,WAAWC,gBAAgBI,KAAK4F,iBAGjDvE,oBAAU,KACR0Q,IACAlV,QAAQC,IAAI,cAAe0K,IAC1B,CAACA,IAEJ,MAUMuK,EAAkB/P,UACtB,IAAI6E,QAAiBxB,YACnBC,+BAEF,SAAI,OAAMuB,QAAN,IAAMA,OAAN,EAAMA,EAAU1E,SAAS,CAAC,IAAD,IACvB6P,EAAO,OAAGnL,QAAH,IAAGA,GAAH,UAAGA,EAAU3O,YAAb,iBAAG,EAAgBA,YAAnB,aAAG,EAAsBkK,UAAU,GAC9CI,OAAOyP,KAAKD,GAAS9J,SAAQ,SAAU7L,GACrC2V,EAAQ3V,GAAO2V,EAAQ3V,GAAO,GAAK,IAAM2V,EAAQ3V,GAAO2V,EAAQ3V,YAG5DyV,EAAiB,IAClBD,EACHrM,OAAQwM,MAad,OACE,kBAAC,IAAD,CAASjT,GAAG,eACV,kBAACyK,EAAA,EAAD,CACEnP,MAAM,SACNsH,OAAO,SACPuQ,YAbgB,KACpB3R,EAAQ4C,KAAK,oBAaTuG,WAAW,EACXyI,YAAY,EACZC,UAZS,KACb7R,EAAQ4C,KAAK,kBAYTwG,aAAa,IAEf,kBAAC,IAAD,CAAYC,YAAU,EAACyI,eAAA,EAAY1W,UAAU,gBAC3C,kBAAC,IAAD,CAAS2W,cAAA,GACP,kBAAC,EAAD,CACE/X,KAAK,eACLqX,MAAK,OAAEC,QAAF,IAAEA,GAAF,UAAEA,EAAerM,cAAjB,aAAE,EAAuB+M,IAC9BZ,YAnDa,KACrBpR,EAAQ4C,KAAK,0BAoDP,kBAAC,EAAD,CACE5I,KAAK,eACLqX,MAAK,UAAEC,EAAcrM,cAAhB,aAAE,EAAsBgN,OAC7Bb,YArDS,KACjBpR,EAAQ4C,KAAK,kCAsDP,kBAAC,EAAD,CACE5I,KAAK,yBACLqX,MAAK,UAAEC,EAAcrM,cAAhB,aAAE,EAAsBiN,QAC7Bd,YAvDa,KACrBpR,EAAQ4C,KAAK,sC","file":"static/js/3.6d17aba4.chunk.js","sourcesContent":["import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number,length) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{\"+length+\"}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n","import { IonButton, IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport {\r\n  getPatternValue,\r\n  isValid,\r\n  validateEmail,\r\n  validateMobile,\r\n} from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n  setError?: any;\r\n  clearInput?: boolean;\r\n  keyDown? : any;\r\n  isClickable?:any\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n  setError,\r\n  clearInput,\r\n  keyDown,\r\n  isClickable\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  //const [error, seterror] = useState(\"\");\r\n  const checkKey = (e) => {\r\n    if(keyDown){\r\n      keyDown(e)\r\n    }\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (type === \"tel\" && setError) {\r\n      val = \"971\" + val.replace(/\\s/g, \"971\");\r\n      var nameTest = validateMobile(val, max * 1 + 3);\r\n      console.log(nameTest);\r\n      if (val != null) {\r\n        if (!nameTest) {\r\n          setError(\"Please Enter \" + max + \" digit number\");\r\n        } else {\r\n          setError(\"\");\r\n        }\r\n      }\r\n      console.log(\"tteeeelll\", val);\r\n    }\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      if (!validate) {\r\n        setError(\"Please Enter valid Mail id\");\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      console.log(validate);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={\r\n            type === \"tel\" && value?.substring(0, 3).includes(\"971\")\r\n              ? value.split(\"971\")[1]\r\n              : value\r\n          }\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={clearInput}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          minlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {!isClickable && icon && (\r\n            <Icon\r\n              iconProps={icon}\r\n              iconName={name}\r\n              fieldPlaceholder={placeholder}\r\n            />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n        {isClickable && icon &&(\r\n          <IonButton\r\n\r\n          className=\"icon-button\"\r\n\r\n          expand=\"full\"\r\n\r\n          fill=\"clear\"\r\n\r\n          onClick={() => icon.iconClick(name, placeholder)}\r\n\r\n        >\r\n\r\n          <Icon\r\n\r\n            iconProps={icon}\r\n\r\n            iconName={name}\r\n\r\n            fieldPlaceholder={placeholder}\r\n\r\n          />\r\n\r\n        </IonButton>\r\n        )}\r\n\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n","import React from \"react\";\r\nimport \"./InformationText.scss\";\r\n\r\ninterface informationTextProps {\r\n  message;\r\n}\r\nconst InformationText: React.FC<informationTextProps> = ({ message }) => {\r\n  return <div className=\"container-count\">Displaying {message}</div>;\r\n};\r\nexport default InformationText;\r\n","import {\r\n  IonButton,\r\n  IonIcon,\r\n  IonRow,\r\n  IonSelect,\r\n  IonSelectOption,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TopMenu.scss\";\r\n\r\nexport default function TopMenu(props) {\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface-class\",\r\n  };\r\n  const [value, setValue] = useState<any>({});\r\n\r\n  return (\r\n    <IonRow className=\"horizontal-scroll\">\r\n      <div className=\"filter-buttons\">\r\n        {props.topMenuProps.map((item, index) => (\r\n          <div key={index}>\r\n            {item.type == \"button\" && (\r\n              <IonButton\r\n                className=\"circ-button\"\r\n                size=\"small\"\r\n                onClick={() => item.clickedOnTopMenu()}\r\n              >\r\n                {item.icon && <IonIcon icon={item.icon} slot={item.slot} />}\r\n                {item.src && (\r\n                  <IonIcon\r\n                    slot={item.slot}\r\n                    src={\"/assets/icon/\" + item.src + \".svg\"}\r\n                    style={{\r\n                      fontSize: item.size,\r\n                      paddingLeft: \"5px\",\r\n                      paddingRight: \"5px\",\r\n                      transform:item.rotate\r\n                    }}\r\n                  />\r\n                )}\r\n                {item.name && item.name}\r\n              </IonButton>\r\n            )}\r\n            {item.type == \"dropDown\" && (\r\n              <div id=\"drop-down-css\">\r\n                <fieldset>\r\n                  <IonSelect\r\n                    value={value}\r\n                    selectedText={value.label}\r\n                    interface=\"popover\"\r\n                    onIonChange={(e) => {\r\n                      let val = e.detail.value;\r\n                      setValue(val);\r\n                      console.log(item.selected);\r\n                      item.clickedOnTopMenu(val);\r\n                    }}\r\n                    cancel-text\r\n                    placeholder={item.name}\r\n                    interfaceOptions={agentCodeoptions}\r\n                    className=\"circ-button\"\r\n                  >\r\n                    {item.list.map((opt, index) => {\r\n                      return (\r\n                        <IonSelectOption\r\n                          value={opt}\r\n                          key={index}\r\n                          className=\"select-opt\"\r\n                        >\r\n                          {opt.label}\r\n                        </IonSelectOption>\r\n                      );\r\n                    })}\r\n                  </IonSelect>\r\n                </fieldset>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </IonRow>\r\n  );\r\n}\r\n","import { IonContent, IonIcon, IonList, IonPage } from \"@ionic/react\";\r\nimport { arrowForwardOutline } from \"ionicons/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Prompt, useHistory } from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport Icon from \"../../components/Icon\";\r\nimport TxtInput from \"../../components/txtinput/TxtInput\";\r\nimport Store from \"../../redux/Store\";\r\nimport { getProfileData, updateProfile } from \"../../services/EndPointApi\";\r\nimport * as EndPointURL from \"../../util/EndPointURL\";\r\nimport { isEmpty } from \"../../util/Utilities\";\r\nimport \"./Profile.scss\";\r\nimport _ from \"lodash\";\r\nimport Alert from \"../../components/alert/Alert\";\r\n\r\nvar objectdefn = {\r\n  firstName: {},\r\n};\r\nfunction Profile() {\r\n  var userDetails = Store.getState().CheckUserStatus;\r\n  const [userInfo, setUser] = useState<any>({\r\n    userName: userDetails.user.userName,\r\n    agentCode: userDetails.user.activeCompanyCode?.split(\"-\")[1],\r\n  });\r\n  const [alertPopup, showAlertPopup] = useState(false);\r\n  const [toGoPathName, settoGoPathName] = useState(\"\");\r\n  let history = useHistory();\r\n  const [form, setForm] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    mobileNumber: \"\",\r\n    landlineNumber: \"\",\r\n    submitted: false,\r\n    valid: false,\r\n    agentCode: \"\",\r\n    userName: \"\",\r\n  });\r\n\r\n  const profileImageIconProps = {\r\n    name: \"profile-pic-icon\",\r\n    slot: \"icon-only\",\r\n    class: \"zoom84\",\r\n  };\r\n\r\n  const pencilIconProps = {\r\n    name: \"pencil\",\r\n    styleProps: {\r\n      stroke: \"#FF5959\",\r\n      styleProps: { zoom: 0.7 },\r\n    },\r\n  };\r\n  const [errors, setErrors] = useState<any>({});\r\n  const [initialFormData, setinitialFormData] = useState<any>({});\r\n\r\n  useEffect(() => {\r\n    fetchDetails();\r\n  }, []);\r\n\r\n  const unblockHandle = useRef<any>();\r\n  useEffect(() => {\r\n    if (history) {\r\n      unblockHandle.current = history.block(({ pathname }, action) => {\r\n        settoGoPathName(pathname);\r\n        if (pathname !== \"/tabs/profile\") {\r\n          let finalData = form;\r\n          delete finalData.agentCode;\r\n          delete finalData.valid;\r\n          delete finalData.submitted;\r\n          if (!_.isEqual(initialFormData, finalData)) {\r\n            showAlertPopup(true);\r\n            return false;\r\n          }\r\n        }\r\n      });\r\n      return function () {\r\n        unblockHandle.current.current && unblockHandle.current.current();\r\n      };\r\n    }\r\n  }, [initialFormData, form]);\r\n\r\n  const fetchDetails = async () => {\r\n    let resp: any = await getProfileData(userInfo.userName);\r\n    if (resp?.success) {\r\n      await setForm({\r\n        ...form,\r\n        ...resp.data.data.dataItems[0],\r\n      });\r\n      setinitialFormData(resp.data.data.dataItems[0]);\r\n    }\r\n  };\r\n  var updateFlag = false;\r\n  const profileUpdate = async () => {\r\n    let errs: any = {};\r\n    if (isEmpty(form.firstName)) {\r\n      errs.firstName = \"First Name is required\";\r\n    }\r\n    if (isEmpty(form.lastName)) {\r\n      errs.lastName = \"Last Name is required\";\r\n    }\r\n\r\n    if (isEmpty(form.email)) {\r\n      errs.email = \"Email is required\";\r\n    }\r\n    if (isEmpty(form.mobileNumber)) {\r\n      errs.mobileNumber = \"Mobile Number is required\";\r\n    }\r\n    if (isEmpty(form.landlineNumber)) {\r\n      errs.landlineNumber = \"Landline Number is required\";\r\n    }\r\n    if (\r\n      errors.email !== \"\" ||\r\n      errors.mobileNumber !== \"\" ||\r\n      errors.landlineNumber !== \"\"\r\n    ) {\r\n    } else if (!Object.values(errors).some((x) => x !== null && x !== \"\")) {\r\n      let updateProfileResp = await updateProfile(form);\r\n      if (updateProfileResp.success) {\r\n        updateFlag = true;\r\n      } else {\r\n        updateFlag = false;\r\n      }\r\n    }\r\n    const isEmpt = !Object.values(errors).some((x) => x !== null && x !== \"\");\r\n\r\n    setErrors({ ...errors, ...errs });\r\n    return updateFlag;\r\n  };\r\n\r\n  const handleChange = (e: any, value: any) => {\r\n    errors[e.target.name] = \"\";\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n  const alertProps = {\r\n    isShow: alertPopup,\r\n    message: \"\",\r\n    alertAction: alertAction,\r\n    content:\r\n      \" You have made some changes. Do you want to save the changes before leaving?\",\r\n    okButtonName: \"Save\",\r\n    cancelButtonName: \"Cancel\",\r\n    icon: \"<img src='/assets/icon/are-you-sure.svg'/>\",\r\n    itemName: \"\",\r\n  };\r\n\r\n  async function alertAction(item, actionType) {\r\n    showAlertPopup(false);\r\n    if (actionType) {\r\n      var upadtedOrNot = await profileUpdate();\r\n      if (upadtedOrNot) {\r\n        fetchDetails();\r\n        if (unblockHandle) {\r\n          unblockHandle.current();\r\n        }\r\n        history.push(toGoPathName + \"\");\r\n      }\r\n    } else {\r\n      setForm(initialFormData);\r\n      if (unblockHandle) {\r\n        unblockHandle.current();\r\n      }\r\n      history.push(toGoPathName + \"\");\r\n    }\r\n  }\r\n  return (\r\n    <IonPage id=\"profilePage\">\r\n      <Header\r\n        label=\"My Profile\"\r\n        action=\"check\"\r\n        checkClick={() => profileUpdate()}\r\n      />\r\n      <IonContent>\r\n        <Alert alertProps={alertProps} />\r\n        <div className=\"main-container\">\r\n          <div className=\"login-logo\"></div>\r\n          <div className=\"profile-icon\">\r\n            <div>\r\n              <Icon iconProps={profileImageIconProps} />\r\n            </div>\r\n            <div className=\"pencil-container\">\r\n              <div className=\"border-pencil\">\r\n                <Icon iconProps={pencilIconProps} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <div className=\"login-box-header\"></div>\r\n\r\n            <form noValidate onSubmit={profileUpdate} autoComplete=\"off\">\r\n              <IonList className=\"form-section\">\r\n                <div className=\"login-header\">\r\n                  {form.userName}\r\n                  {/* <hr /> */}\r\n                </div>\r\n\r\n                <div className=\"list-margin\">\r\n                  <TxtInput\r\n                    name={\"agentCode\"}\r\n                    value={userInfo.agentCode}\r\n                    label=\"Agent code\"\r\n                    errors={errors.agentCode}\r\n                    type=\"text\"\r\n                    required={true}\r\n                    readonly={true}\r\n                    onChange={handleChange}\r\n                    datatype=\"TEXT\"\r\n                    placeholder=\"Agent code\"\r\n                  />\r\n                  <TxtInput\r\n                    name={\"firstName\"}\r\n                    value={form.firstName}\r\n                    label=\"First Name\"\r\n                    errors={errors.firstName}\r\n                    type=\"text\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    datatype=\"TEXT\"\r\n                    placeholder=\"First Name\"\r\n                  />\r\n\r\n                  <TxtInput\r\n                    name={\"lastName\"}\r\n                    value={form.lastName}\r\n                    label=\"Last Name\"\r\n                    errors={errors.lastName}\r\n                    type=\"text\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Last Name\"\r\n                  />\r\n\r\n                  <TxtInput\r\n                    name={\"email\"}\r\n                    value={form.email}\r\n                    label=\"Email\"\r\n                    errors={errors.email}\r\n                    type=\"email\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    //description=\"Please enter email\"\r\n                    placeholder=\"Email\"\r\n                    setError={(erro) => setErrors({ ...errors, email: erro })}\r\n                  />\r\n\r\n                  <TxtInput\r\n                    name={\"mobileNumber\"}\r\n                    value={form.mobileNumber}\r\n                    label=\"Mobile\"\r\n                    errors={errors.mobileNumber}\r\n                    type=\"tel\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    datatype=\"TEL_NUM\"\r\n                    //pattern=\"###-##-#######\"\r\n                    description=\"Tel Format 971 123456789\"\r\n                    placeholder=\"Mobile\"\r\n                    max={9}\r\n                    setError={(erro) =>\r\n                      setErrors({ ...errors, mobileNumber: erro })\r\n                    }\r\n                  />\r\n\r\n                  <TxtInput\r\n                    name={\"landlineNumber\"}\r\n                    value={form.landlineNumber}\r\n                    label=\"Phone\"\r\n                    errors={errors.landlineNumber}\r\n                    type=\"tel\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    datatype=\"TEL_NUM\"\r\n                    //pattern=\"###-##-######\"\r\n                    description=\"Tel Format 971 12345678\"\r\n                    placeholder=\"Phone\"\r\n                    max={8}\r\n                    setError={(erro) =>\r\n                      setErrors({ ...errors, landlineNumber: erro })\r\n                    }\r\n                  />\r\n                </div>\r\n              </IonList>\r\n              {/* <div className=\"button-div\">\r\n                <div className=\"button-holder\" onClick={profileUpdate}>\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                </div>\r\n              </div> */}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import {\r\n  IonAlert,\r\n  IonBadge,\r\n  IonButton,\r\n  IonCard,\r\n  IonCardContent,\r\n  IonContent,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRow,\r\n} from \"@ionic/react\";\r\nimport { chevronForwardOutline } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RouteComponentProps, useHistory } from \"react-router\";\r\nimport * as EndPointURL from \"../../util/EndPointURL\";\r\nimport {\r\n  getDraftCount,\r\n  httpGetCallWithoutHeader,\r\n  httpPatchCallWithoutHeaderAndBody,\r\n  loginWithAgent,\r\n} from \"../../services/EndPointApi\";\r\nimport \"./LandingPage.scss\";\r\nimport Store from \"../../redux/Store\";\r\nimport * as reduxActions from \"../../redux/actions/AllActions\";\r\nimport Alert from \"../../components/alert/Alert\";\r\nimport ClearReduxStore from \"../../util/ClearReduxStore\";\r\n\r\ninterface LandingPageProps extends RouteComponentProps {}\r\nfunction LandingPage() {\r\n  let history = useHistory();\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n  const [notficationCount, setNotificationCount] = useState(\"0\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [input, setInput] = useState([]);\r\n  const [alertPopup, setAlertPopup] = useState(false);\r\n  const [draftCount, setdraftCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    console.log(\"userDetails\", userDetails);\r\n    ClearReduxStore();\r\n    var response = httpGetCallWithoutHeader(\r\n      EndPointURL.fetchCountsOfUnreadNotificationsUrl\r\n    );\r\n    response.then((result) => {\r\n      if (result?.success)\r\n        setNotificationCount(result?.data?.data?.dataItems[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userDetails.userType === undefined || userDetails.agents === null) {\r\n      console.log(userDetails);\r\n    } else if (\r\n      userDetails?.agents?.length > 1 &&\r\n      userDetails?.selectedAgent == undefined\r\n    ) {\r\n      userDetails.agents.map((item: any, index: number) =>\r\n        input.push({\r\n          type: \"radio\",\r\n          label: item.agentCode + \"-\" + item.agentName,\r\n          value: item,\r\n        })\r\n      );\r\n      setInput(input);\r\n      if (showModal) {\r\n      } else {\r\n        console.log(\"showModal\", showModal);\r\n        setShowModal(true);\r\n      }\r\n      console.log(\"yes showmaodal\", showModal);\r\n    } else if (userDetails?.agents?.length == 1) {\r\n      let data = userDetails?.agents?.find((e) => true);\r\n      var selectedAgent = reduxActions.AddSelectedAgent(data);\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n      getAllSavedDraftsCount();\r\n    }\r\n  }, [userDetails]);\r\n\r\n  async function getAllSavedDraftsCount() {\r\n    let resp = await getDraftCount();\r\n    if (resp?.success && resp?.data > 0) {\r\n      setdraftCount(resp?.data);\r\n      var test = Store.getState().VariableValues.showDraftInHome;\r\n      setAlertPopup(Store.getState().VariableValues.showDraftInHome);\r\n      var updateDRaftsPopupHome = await reduxActions.updateDRaftsPopupInHome(\r\n        false\r\n      );\r\n      if (updateDRaftsPopupHome) Store.dispatch(updateDRaftsPopupHome);\r\n    }\r\n  }\r\n\r\n  const clickedNotification = async () => {\r\n    if (notficationCount !== \"0\") {\r\n      var response = await httpPatchCallWithoutHeaderAndBody(\r\n        EndPointURL.fetchAllNotificationUrl\r\n      );\r\n      if (await response.success) {\r\n        setNotificationCount(\"0\");\r\n        history.push(\"/notifications\");\r\n      }\r\n    } else history.push(\"/notifications\");\r\n  };\r\n\r\n  const selectUserType = async (data: any) => {\r\n    setShowModal(false);\r\n    console.log(data);\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    console.log(response);\r\n    if (await response.success) {\r\n      var result = response.data.data.dataItems[0];\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        // result.user.activeCompanyCode\r\n        result.user.userType\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      // data.isAgentchanged = true;\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n      console.log(\"*****\", test);\r\n      getAllSavedDraftsCount();\r\n    }\r\n    // }\r\n  };\r\n\r\n  const handleDraftPopup = (item, actionType) => {\r\n    if (actionType) {\r\n      setAlertPopup(false);\r\n      history.push(\"/savedDrafts\");\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const alertProps = {\r\n    isShow: alertPopup,\r\n    message: \" \", //message,\r\n    content: \"Continue where left off? \",\r\n    icon: \"<img src='/assets/icon/draft.svg'/>\",\r\n    alertAction: handleDraftPopup, //handleHeaderClick,\r\n\r\n    itemName:\r\n      draftCount +\r\n      \" Transactions has been saved as drafts. Click continue to view the drafts page and complete ! <br/><br/>\",\r\n    cancelPolicy: true,\r\n    okButtonName: \"Continue\",\r\n    cancelButtonName: \"Cancel\",\r\n  };\r\n  return (\r\n    <IonPage className=\"landing-Page\">\r\n      <IonAlert\r\n        isOpen={showModal}\r\n        onDidDismiss={() => !showModal}\r\n        header={\"Select Agent Code\"}\r\n        subHeader={errorMessage}\r\n        backdropDismiss={false}\r\n        inputs={input}\r\n        cssClass=\"modal-alert\"\r\n        buttons={[\r\n          {\r\n            text: \"Continue\",\r\n            role: \"confirm\",\r\n            handler: (data) => {\r\n              console.log(\"data\", data);\r\n              if (data === undefined) {\r\n                setErrorMessage(\"Please Choose any to proceed\");\r\n                return false;\r\n              } else selectUserType(data);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <IonContent>\r\n        <Alert alertProps={alertProps} />\r\n        <div className=\"main-container\">\r\n          <div className=\"page-header\">\r\n            <div className=\"page-head-not-button\">\r\n              <IonRow onClick={() => clickedNotification()}>\r\n                <IonBadge\r\n                  className={\r\n                    notficationCount === \"5+\" ? \"not-badge1\" : \"not-badge2\"\r\n                  }\r\n                  color=\"danger\"\r\n                >\r\n                  {notficationCount}\r\n                </IonBadge>\r\n                <IonIcon src=\"assets/icon/bell.svg\" />\r\n              </IonRow>\r\n            </div>\r\n            <div className=\"page-head-text\">\r\n              <span className=\"page-header-welcome-name\">\r\n                Hello <IonLabel>{userDetails.firstName}</IonLabel>!\r\n              </span>\r\n              <span>Welcome To Dubai Trade</span>\r\n            </div>\r\n            <div className=\"page-head-button\">\r\n              <IonButton\r\n                className=\"tube-button\"\r\n                onClick={() => {\r\n                  history.push(\"/quickBook\");\r\n                }}\r\n              >\r\n                Quick Book\r\n                <IonIcon slot=\"end\" icon={chevronForwardOutline} />\r\n              </IonButton>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"my-bookings\">\r\n            <IonCard className=\"page-card\">\r\n              <IonImg src=\"assets/img/home-declaration.png\" />\r\n              <IonCardContent>\r\n                <div className=\"my-booking-txt\">\r\n                  <div className=\"my-booking-txt-inner\">\r\n                    <span className=\"header-txt\">My Booking</span>\r\n                    <span className=\"sub-txt\">\r\n                      Select container and book truck\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"book-button\">\r\n                    <IonButton\r\n                      className=\"tube-button\"\r\n                      onClick={() => {\r\n                        history.push(\"/decl\");\r\n                      }}\r\n                    >\r\n                      Book\r\n                    </IonButton>\r\n                  </div>\r\n                </div>\r\n              </IonCardContent>\r\n            </IonCard>\r\n          </div>\r\n\r\n          <div className=\"my-bookings\">\r\n            <IonCard className=\"page-card ion-text-center\">\r\n              <IonImg src=\"assets/img/home-status.png\" />\r\n              <IonCardContent>\r\n                <div className=\"my-booking-txt\">\r\n                  <div className=\"my-booking-txt-inner\">\r\n                    <span className=\"header-txt\">Status</span>\r\n                    <span className=\"sub-txt\">\r\n                      Check status of your bookings\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"book-button\">\r\n                    <IonButton\r\n                      className=\"tube-button\"\r\n                      onClick={() => history.push(\"/tabs/status\")}\r\n                    >\r\n                      Track\r\n                    </IonButton>\r\n                  </div>\r\n                </div>\r\n              </IonCardContent>\r\n            </IonCard>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  IonCard,\r\n  IonCardContent,\r\n  IonCol,\r\n  IonIcon,\r\n  IonRow,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addCircle } from \"ionicons/icons\";\r\nimport \"./AddressCard.scss\";\r\nimport Store from \"../../../redux/Store\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport {\r\n  httpGetCallWithoutHeader,\r\n  httpPostCallWithoutHeaderAndBody,\r\n} from \"../../../services/EndPointApi\";\r\nimport * as reduxActions from \"../../../redux/actions/AllActions\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\n\r\nexport default function AddressCard(props: any) {\r\n  console.log(\"AddressCard\", props)\r\n  let history = useHistory();\r\n  const [address, setAddress] = useState([]);\r\n  const [agent, setAgent] = useState();\r\n  const [alertPopup, showAlertPopup] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [itemAddress, setItem] = useState({});\r\n\r\n  Store.subscribe(() => {\r\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n    setAddress(Store.getState().Addresses);\r\n    console.log(\"calling store\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"addressDB\", Store.getState().Addresses);\r\n    getAddress();\r\n    console.log(\"add\", address);\r\n  }, [agent]);\r\n\r\n  const getAddress = async () => {\r\n    var response = await httpGetCallWithoutHeader(EndPointURL.getAddress);\r\n    var result = response;\r\n    if (await response?.success) {\r\n      var addressess = reduxActions.clearAllAddress();\r\n      if (addressess) Store.dispatch(addressess);\r\n\r\n      console.log(response.data.addressDtoList.length);\r\n\r\n      response.data.addressDtoList.forEach((element) => {\r\n        element.dropZone = element.selectedDropZone;\r\n      });\r\n      response.data.addressDtoList.disableHrs = response.data.disableHrs;\r\n      response.data.addressDtoList[0].isSelected = true;\r\n\r\n      var newAddressess = reduxActions.addAddress(response.data.addressDtoList);\r\n      if (newAddressess) Store.dispatch(newAddressess);\r\n      setAddress(newAddressess.payLoad);\r\n    } else if (\r\n      response?.data?.data?.dataItems[0]?.code == \"168\" ||\r\n      response?.data?.data?.dataItems[0]?.error == \"No data available.\"\r\n    ) {\r\n      var addressess = reduxActions.clearAllAddress();\r\n      if (addressess) Store.dispatch(addressess);\r\n      setAddress([]);\r\n    }\r\n  };\r\n\r\n  const updateAddress = (element) => {\r\n    element.createMode = false;\r\n    console.log(element);\r\n    history.push(\"/addAddress\", element);\r\n  };\r\n\r\n  function showAlert(item) {\r\n    showAlertPopup(true);\r\n    setMessage(item.addressNickname);\r\n    setItem(item);\r\n  }\r\n\r\n  function deleteAddress(item, actionType) {\r\n    showAlertPopup(false);\r\n    if (actionType) {\r\n      var response = httpPostCallWithoutHeaderAndBody(\r\n        EndPointURL.deleteAddress + item.code\r\n      );\r\n      response.then((result) => {\r\n        if (result.success) {\r\n          var newAddressess = reduxActions.deleteAddress(item.code);\r\n          if (newAddressess) Store.dispatch(newAddressess);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const alertProps = {\r\n    isShow: alertPopup,\r\n    message: message + \" ?\",\r\n    alertAction: deleteAddress,\r\n    item: itemAddress,\r\n    content: \" Are you sure to remove contact of\",\r\n    okButtonName: \"Continue\",\r\n    cancelButtonName: \"Cancel\",\r\n    itemName: \"\",\r\n  };\r\n\r\n  const onAddressSelect = (e, index) => {\r\n    address.forEach((element) => {\r\n      element.isSelected = false;\r\n    });\r\n    address[index].isSelected = true;\r\n    setAddress([...address]);\r\n  };\r\n\r\n  return (\r\n    <div id=\"address-card\">\r\n      <Alert alertProps={alertProps} />\r\n      <IonIcon\r\n        onClick={() => history.push(\"/addAddress\")}\r\n        icon={addCircle}\r\n        className=\"addIcon\"\r\n      />\r\n      {address.length === 0 ? (\r\n        <IonCard className=\"card emptyAddressCard\">\r\n          <IonCardContent>\r\n            <IonText className=\"emptyAddressText\">Add new address</IonText>\r\n          </IonCardContent>\r\n        </IonCard>\r\n      ) : (\r\n        <div className=\"cardTopMargin\">\r\n          {address.map((element: any, index: any) => (\r\n            <div className=\"addressCard\" key={index}>\r\n              <IonIcon\r\n                src={\r\n                  element.isSelected\r\n                    ? \"/assets/icon/addressBookBlue.svg\"\r\n                    : \"/assets/icon/addressBookGray.svg\"\r\n                }\r\n                className=\"contactIcon\"\r\n              />\r\n              <IonCard\r\n                className=\"card\"\r\n                onClick={(e) => onAddressSelect(e, index)}\r\n              >\r\n                <IonCardContent>\r\n                  <IonRow>\r\n                    <IonCol size=\"10\">\r\n                      <IonRow>{element.addressNickname}</IonRow>\r\n                      <IonRow>{element.selectedDropZoneLabel}</IonRow>\r\n                      <IonRow>{element.dropAddress}</IonRow>\r\n                      <IonRow>Mob: {element.consigneeContactNumber}</IonRow>\r\n                      <IonRow>Ph: {element.phoneNumber}</IonRow>\r\n                    </IonCol>\r\n                    {element.isSelected && (\r\n                      <IonCol size=\"2\">\r\n                        <IonRow>\r\n                          <IonIcon\r\n                            onClick={() => updateAddress(element)}\r\n                            src=\"/assets/icon/edit-address.svg\"\r\n                            className=\"editIcon\"\r\n                          />\r\n                        </IonRow>\r\n                        <IonRow>\r\n                          <IonIcon\r\n                            onClick={() => showAlert(element)}\r\n                            src=\"/assets/icon/delete-address.svg\"\r\n                            className=\"editIcon\"\r\n                          />\r\n                        </IonRow>\r\n                      </IonCol>\r\n                    )}\r\n                  </IonRow>\r\n                </IonCardContent>\r\n              </IonCard>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { IonContent, IonPage, IonRow } from \"@ionic/react\";\r\nimport AddresCard from \"./addressCard/AddressCard\";\r\nimport Header from \"../../components/Header\";\r\nexport default function Address(props: any) {\r\n  return (\r\n    <IonPage id=\"address-page\">\r\n      <Header label=\"Addresses\" action=\"home\" locationProps={props} showAgent={true} agentHeader={true}/>\r\n      <IonContent class=\"pageContainer\" fullscreen>\r\n          <AddresCard editable={true} />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Icon from \"../Icon\";\r\nimport \"./Star.scss\";\r\n\r\ninterface StarProps {\r\n  starValue: (number) => void;\r\n}\r\nconst Star: React.FC<StarProps> = ({ starValue }) => {\r\n  var arr = [];\r\n  for (var n = 0; n < 5; n++) {\r\n    arr[n] = { fill: false };\r\n  }\r\n\r\n  const [starFill, setstarFill] = useState(arr);\r\n\r\n  function onStarClick(index, item) {\r\n    console.log(index);\r\n    starValue(index + 1);\r\n    for (var i = 0; i < starFill.length; i++) {\r\n      starFill[i].fill = false;\r\n    }\r\n    for (var i = 0; i <= index; i++) {\r\n      starFill[i].fill = true;\r\n      setstarFill(starFill);\r\n    }\r\n    setstarFill([...starFill]);\r\n  }\r\n\r\n  var borderStartIconProps = {\r\n    name: \"star-border\",\r\n    slot: \"\",\r\n    class: \"zoom18\",\r\n    style: { stroke: \"#168FE4\" },\r\n  };\r\n  var startIconProps = {\r\n    name: \"star\",\r\n    slot: \"\",\r\n    class: \"zoom18\",\r\n    style: { stroke: \"#168FE4\" },\r\n  };\r\n  return (\r\n    <div className=\"starContainer\">\r\n      {starFill.map((item, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"eachStar\"\r\n          onClick={() => onStarClick(index, item)}\r\n        >\r\n          {!item.fill ? (\r\n            <Icon iconProps={borderStartIconProps} />\r\n          ) : (\r\n            <Icon iconProps={startIconProps} />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Star;\r\n","import {\r\n  IonCard,\r\n  IonCardContent,\r\n  IonContent,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRow,\r\n} from \"@ionic/react\";\r\nimport { chevronDownOutline } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Icon from \"../../components/Icon\";\r\nimport CenterPopup from \"../../components/PopUp/CenterPopup/CenterPopup\";\r\nimport SlideUpModal from \"../../components/PopUp/SlideUpModal\";\r\nimport Star from \"../../components/Star/Star\";\r\nimport InformationText from \"../../components/Texts/InformationText\";\r\nimport TopMenu from \"../../components/topMenu/TopMenu\";\r\nimport {\r\n  fetchPods,\r\n  getdetailsOfBookingNumber,\r\n  postApprovePod,\r\n  postRejectPod,\r\n  reviewSubmit,\r\n} from \"../../services/EndPointApi\";\r\nimport DeclarationDetails from \"../ContainerCart/DeclarationDetails\";\r\nimport \"./Pod.scss\";\r\nimport ListDownload from \"./PODCard/ListDownload\";\r\nimport PodCard from \"./PODCard/PodCard\";\r\nimport SLAExpire from \"./SLAExpire\";\r\n\r\nvar draftIconProps = {\r\n  name: \"drafts-note\",\r\n  slot: \"\",\r\n  class: \"zoom12\",\r\n  style: { stroke: \"#168FE4\" },\r\n};\r\n\r\nexport default function PODDetails(props) {\r\n  var trackTruckIconProps = {\r\n    name: \"track-truck\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    style: { stroke: \"#168FE4\" },\r\n    styleProps: { zoom: 2.6 },\r\n  };\r\n\r\n  var editContactIconProps = {\r\n    name: \"edit-contact\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    style: { stroke: \"#168FE4\" },\r\n    styleProps: { zoom: 2.6 },\r\n  };\r\n\r\n  var downloadIconProps = {\r\n    name: \"invoices-download\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    style: { stroke: \"#168FE4\" },\r\n    styleProps: { zoom: 1.6 },\r\n  };\r\n  var allBookingRelated = props.history.location.state;\r\n  const [showSlideUpModal, setshowSlideUpModal] = useState(false);\r\n  const [downloadList, setdownloadList] = useState<any>([]);\r\n  var downloadPodPopupContent = {\r\n    content: <ListDownload downloadableListItem={downloadList} />,\r\n    okButton: \"APPROVE\",\r\n    cancelButton: \"REJECT\",\r\n    textAreaComment: \"Importer comments (if any)\",\r\n    isClose: true,\r\n    type: \"podDownload\",\r\n  };\r\n  const [showModal, setshowModal] = useState(false);\r\n  const [podDownLoadModalContent, setpodDownLoadModalContent] = useState<any>(\r\n    downloadPodPopupContent\r\n  );\r\n  const [response, setresponse] = useState<any>([]);\r\n  const [selectedIndexNumber, setselectedIndexNumber] = useState<any>({});\r\n  const [ratingObj, setratingObj] = useState<any>({\r\n    container_number: \"\",\r\n    BookingReferenceNumber: \"\",\r\n    feedback: \"\",\r\n    rating: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    bookingDetails();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setshowModal(true);\r\n  // }, [downloadList]);\r\n\r\n  async function bookingDetails() {\r\n    let resp = await getdetailsOfBookingNumber(\r\n      props.location.state.bookingNumber\r\n    );\r\n    if (resp?.success) {\r\n      setresponse(resp?.data);\r\n    }\r\n  }\r\n  function podCardClick(item) {\r\n    console.log(item);\r\n    setshowSlideUpModal(true);\r\n    setselectedIndexNumber(item);\r\n  }\r\n\r\n  async function centerPopupModalOkClick(data, type) {\r\n    setshowModal(false);\r\n    setpodDownLoadModalContent(downloadPodPopupContent);\r\n    if (type === \"podDownload\") {\r\n      var podApproveObj = { ...selectedIndexNumber, ...downloadList };\r\n      if (data === \"approve\") {\r\n        let podApproveResp = await postApprovePod(selectedIndexNumber);\r\n        if (podApproveResp.success) {\r\n          setpodDownLoadModalContent({\r\n            content: (\r\n              <Star\r\n                starValue={(val) => setratingObj({ ...ratingObj, rating: val })}\r\n              />\r\n            ),\r\n            okButton: \"Submit\",\r\n            //cancelButton: \"REJECT\",\r\n            textAreaComment: \"Importer comments (if any)\",\r\n            isClose: false,\r\n            textAreaHeading: \"Add suggestions\",\r\n            mainHead: \"Would you like to rate the transporter service?\",\r\n            type: \"rating\",\r\n          });\r\n          setshowModal(true);\r\n        }\r\n      } else if (data === \"reject\") {\r\n        let podRejectResp = await postRejectPod(selectedIndexNumber);\r\n        console.log(\"rejeccttteeeddd\", podRejectResp);\r\n        if (podRejectResp.success) {\r\n          bookingDetails();\r\n        }\r\n      }\r\n    } else if (type === \"rating\") {\r\n      console.log(\"8888888\", ratingObj);\r\n      submitReview();\r\n      setpodDownLoadModalContent(downloadPodPopupContent);\r\n    }\r\n  }\r\n\r\n  async function submitReview() {\r\n    var data = {\r\n      container_number: selectedIndexNumber.container_number,\r\n      BookingReferenceNumber: \"\",\r\n      feedback: \"\",\r\n      rating: 0,\r\n    };\r\n    setratingObj({\r\n      ...ratingObj,\r\n      container_number: selectedIndexNumber.container_number,\r\n    });\r\n    console.log(\"((**&&^^\", selectedIndexNumber);\r\n    let resp = await reviewSubmit(ratingObj);\r\n  }\r\n\r\n  async function openDownloadCenterpopup(status, item) {\r\n    setselectedIndexNumber(item);\r\n    var obj = {\r\n      referenceNumber: props.location.state.bookingNumber,\r\n      containerNumber: item.container_number,\r\n    };\r\n    let resp = await fetchPods(obj);\r\n    if (resp.success) {\r\n      console.log(\"99999\", resp?.data.data.dataItems);\r\n      if (resp?.data.data.dataItems.length > 0) {\r\n        setdownloadList(resp?.data.data.dataItems);\r\n        setpodDownLoadModalContent({\r\n          content: (\r\n            <ListDownload downloadableListItem={resp?.data.data.dataItems} />\r\n          ),\r\n          okButton: \"APPROVE\",\r\n          cancelButton: \"REJECT\",\r\n          textAreaComment: \"Importer comments (if any)\",\r\n          isClose: true,\r\n          type: \"podDownload\",\r\n        });\r\n        setshowModal(true);\r\n        // }, 100);\r\n      }\r\n    }\r\n  }\r\n\r\n  var topMenuItems = [\r\n    {\r\n      name: \"\",\r\n      src: \"filter\",\r\n      styleProps: { zoom: 1.3 },\r\n      type: \"button\",\r\n      slot: \"start\",\r\n      clickedOnTopMenu: () => console.log(\"clicked1\"),\r\n    },\r\n\r\n    {\r\n      name: \"Storage Validity\",\r\n      src: \"filter-down-arrow\",\r\n      type: \"button\",\r\n      slot: \"start\",\r\n      size: \"0.7rem\",\r\n      clickedOnTopMenu: () => console.log(\"clicked4\"),\r\n    },\r\n  ];\r\n  return (\r\n    <IonPage>\r\n      <Header\r\n        label=\"Verify POD \"\r\n        action=\"home\"\r\n        //searchClick={onSearchClick}\r\n        agentHeader={true}\r\n      />\r\n      <IonContent>\r\n        <SlideUpModal\r\n          showModal={showSlideUpModal}\r\n          openOrCloseModal={(modalState) => {\r\n            setshowSlideUpModal(modalState);\r\n            setpodDownLoadModalContent(downloadPodPopupContent);\r\n          }}\r\n          content={\r\n            <DeclarationDetails\r\n              item={selectedIndexNumber}\r\n              click={() => {\r\n                setshowModal(false);\r\n              }}\r\n              fromPod={true}\r\n            />\r\n          }\r\n        />{\" \"}\r\n        <CenterPopup\r\n          showModal={showModal}\r\n          content={podDownLoadModalContent.content}\r\n          openOrCloseModal={(data, type) => centerPopupModalOkClick(data, type)}\r\n          okButton={podDownLoadModalContent.okButton}\r\n          cancelButton={podDownLoadModalContent.cancelButton}\r\n          textAreaComment={podDownLoadModalContent.textAreaComment}\r\n          isClose={podDownLoadModalContent.isClose}\r\n          textAreaHeading={podDownLoadModalContent.textAreaHeading}\r\n          mainHead={podDownLoadModalContent.mainHead}\r\n          type={podDownLoadModalContent.type}\r\n          getTextArea={(val) => setratingObj({ ...ratingObj, feedback: val })}\r\n        />\r\n        <TopMenu topMenuProps={topMenuItems} />\r\n        <InformationText\r\n          message={`${response?.containerList?.length || 0} containers`}\r\n        />\r\n        {/* <div className=\"sub-content\">\r\n          <div className=\"booking-num\">\r\n            <Icon iconProps={draftIconProps} />\r\n            <IonLabel className=\"booking-label\">\r\n              {props.location.state.bookingNumber}\r\n            </IonLabel>\r\n          </div>\r\n        </div> */}\r\n        <div>\r\n          {response?.containerList?.map((item, index) => (\r\n            <PodCard\r\n              key={index}\r\n              item={item}\r\n              cardClick={podCardClick}\r\n              clickedDownloadPOD={openDownloadCenterpopup}\r\n              expiryDate={allBookingRelated?.verifyPodBy}\r\n              verifyPodTime={allBookingRelated?.verifyPodTime}\r\n              icon1={trackTruckIconProps}\r\n              icon2={editContactIconProps}\r\n              icon3={downloadIconProps}\r\n            />\r\n          ))}\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./InformationText.scss\";\r\n\r\ninterface informationTextProps {\r\n  message;\r\n}\r\nconst InformationText: React.FC<informationTextProps> = ({ message }) => {\r\n  return <div className=\"container-count\">Displaying {message}</div>;\r\n};\r\nexport default InformationText;\r\n","import {\r\n  IonPage,\r\n  IonContent,\r\n  IonCard,\r\n  IonCardContent,\r\n  IonLabel,\r\n  IonCol,\r\n  IonIcon,\r\n  IonRow,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport InformationText from \"../../components/InformationText\";\r\nimport { getAllPods } from \"../../services/EndPointApi\";\r\nimport \"./ListAllPod.scss\";\r\nimport SLAExpire from \"./SLAExpire\";\r\n\r\nexport default function ListAllPod() {\r\n  let history = useHistory();\r\n  const [podList, setpodList] = useState<any>([]);\r\n  useEffect(() => {\r\n    getAllPod(\"option=ALL&statusCode=PODUPL&pgNo=0&pgSize=5&locale=en\");\r\n  }, []);\r\n\r\n  async function getAllPod(param) {\r\n    let res = await getAllPods(param);\r\n    setpodList(res?.data?.elements);\r\n  }\r\n  var containerIcon = {\r\n    name: \"container\",\r\n    slot: \"\",\r\n    class: \"zoom24\",\r\n  };\r\n  var truckIcon = {\r\n    name: \"truck-grey\",\r\n    slot: \"\",\r\n    class: \"zoom24\",\r\n  };\r\n\r\n  function gotoPodDetails(item) {\r\n    history.push(\"/tabs/status/pod/podDetails\", item);\r\n  }\r\n\r\n  return (\r\n    <IonPage id=\"booking-page\">\r\n      <Header\r\n        label=\"Verify POD\"\r\n        action=\"home\"\r\n        agentHeader={true}\r\n        // searchClick={this.onSearchClick}`Share ${speaker.name}`\r\n      />\r\n      <IonContent>\r\n        <InformationText message={`${podList?.length || 0} containers`} />\r\n\r\n        {podList?.map((item, index) => (\r\n          <div\r\n            id=\"booking-card\"\r\n            key={index}\r\n            onClick={() => gotoPodDetails(item)}\r\n          >\r\n            <IonCard className=\"lightShadow\">\r\n              <IonCardContent className=\"card-content\">\r\n                <IonRow>\r\n                  <IonCol size=\"5\">\r\n                    <IonText className=\"booking-number-font\">\r\n                      {item.bookingNumber}\r\n                    </IonText>\r\n                  </IonCol>\r\n                  <IonCol size=\"1\">\r\n                    <IonIcon\r\n                      src=\"/assets/icon/container.svg\"\r\n                      className=\"container-icon\"\r\n                    />\r\n                  </IonCol>\r\n                  <IonCol size=\"3\" className=\"padding-left\">\r\n                    <IonRow>\r\n                      <IonText className=\"data-font\">\r\n                        {item.noOfContainers}\r\n                      </IonText>\r\n                    </IonRow>\r\n                    <IonRow>\r\n                      <IonText className=\"title-font\">\r\n                        <IonLabel>Containers</IonLabel>\r\n                      </IonText>\r\n                    </IonRow>\r\n                  </IonCol>\r\n                  <IonCol size=\"1\">\r\n                    <IonIcon\r\n                      src=\"/assets/icon/truck-grey.svg\"\r\n                      className=\"container-icon\"\r\n                    />\r\n                  </IonCol>\r\n                  <IonCol size=\"2\" className=\"padding-left\">\r\n                    <IonRow>\r\n                      <IonText className=\"data-font\">{item.noOfTrucks}</IonText>\r\n                    </IonRow>\r\n                    <IonRow>\r\n                      <IonText className=\"title-font\">Trucks</IonText>\r\n                    </IonRow>\r\n                  </IonCol>\r\n                </IonRow>\r\n                <IonRow>\r\n                  <IonCol size=\"5\">\r\n                    <IonRow>\r\n                      <IonText className=\"regular-font\">Amount Paid</IonText>\r\n                    </IonRow>\r\n                    <IonRow>\r\n                      <IonText className=\"data-font\">\r\n                        {item.totalAmount * 1 - item.amountPaid * 1} AED\r\n                      </IonText>\r\n                    </IonRow>\r\n                  </IonCol>\r\n                  <IonCol size=\"5\">\r\n                    <IonRow>\r\n                      <IonText className=\"regular-font\">Booked On</IonText>\r\n                    </IonRow>\r\n                    <IonRow>\r\n                      <IonText className=\"data-font\">{item.bookedOn}</IonText>\r\n                    </IonRow>\r\n                  </IonCol>\r\n                  <IonCol size=\"2\"></IonCol>\r\n                </IonRow>\r\n                <IonRow className=\"sla\">\r\n                  <IonCol>\r\n                    <IonRow>\r\n                      No. of POD's : <div>01</div>\r\n                    </IonRow>\r\n                  </IonCol>\r\n\r\n                  <IonCol>\r\n                    {\" \"}\r\n                    <SLAExpire\r\n                      expiryDate={item.verifyPodBy}\r\n                      verifyPodTime={item.verifyPodTime}\r\n                    />\r\n                  </IonCol>\r\n                </IonRow>\r\n              </IonCardContent>\r\n            </IonCard>\r\n          </div>\r\n        ))}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n","import {\r\n  IonCard,\r\n  IonCardContent,\r\n  IonRow,\r\n  IonCol,\r\n  IonText,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonGrid,\r\n  IonItem,\r\n} from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport SLAExpire from \"../../pages/VerifyPOD/SLAExpire\";\r\nimport { addPreZero } from \"../../services/Common\";\r\nimport \"./statuscard.scss\";\r\n\r\ninterface statuscardProps {\r\n  gotoDetails: (item) => void;\r\n  item: any;\r\n}\r\nconst Statuscard: React.FC<statuscardProps> = (statuscardProps) => {\r\n  console.log(statuscardProps.item);\r\n  return (\r\n    <div\r\n      id=\"booking-card\"\r\n      onClick={() => statuscardProps.gotoDetails(statuscardProps.item)}\r\n    >\r\n      <IonCard className=\"lightShadow\">\r\n        <IonCardContent className=\"card-content\">\r\n          <IonRow>\r\n            <IonCol size=\"5\">\r\n              <IonText className=\"booking-number-font\">\r\n                {statuscardProps.item.bookingNumber}\r\n              </IonText>\r\n            </IonCol>\r\n            <IonCol size=\"1\">\r\n              <IonIcon\r\n                src=\"/assets/icon/container.svg\"\r\n                className=\"container-icon\"\r\n              />\r\n            </IonCol>\r\n            <IonCol size=\"3\" className=\"padding-left\">\r\n              <IonRow>\r\n                <IonText className=\"data-font\">\r\n                  {statuscardProps.item.noOfContainers}\r\n                </IonText>\r\n              </IonRow>\r\n              <IonRow>\r\n                <IonText className=\"title-font\">\r\n                  <IonLabel>Containers</IonLabel>\r\n                </IonText>\r\n              </IonRow>\r\n            </IonCol>\r\n            <IonCol size=\"1\">\r\n              <IonIcon\r\n                src=\"/assets/icon/truck-grey.svg\"\r\n                className=\"container-icon\"\r\n              />\r\n            </IonCol>\r\n            <IonCol size=\"2\" className=\"padding-left\">\r\n              <IonRow>\r\n                <IonText className=\"data-font\">\r\n                  {statuscardProps.item.noOfTrucks}\r\n                </IonText>\r\n              </IonRow>\r\n              <IonRow>\r\n                <IonText className=\"title-font\">Trucks</IonText>\r\n              </IonRow>\r\n            </IonCol>\r\n          </IonRow>\r\n          <IonRow>\r\n            <IonCol size=\"5\">\r\n              <IonRow>\r\n                <IonText className=\"regular-font\">Amount Paid</IonText>\r\n              </IonRow>\r\n              <IonRow>\r\n                <IonText className=\"data-font\">\r\n                  {statuscardProps.item.amountPaid} AED\r\n                </IonText>\r\n              </IonRow>\r\n            </IonCol>\r\n            <IonCol size=\"5\">\r\n              <IonRow>\r\n                <IonText className=\"regular-font\">Booked On</IonText>\r\n              </IonRow>\r\n              <IonRow>\r\n                <IonText className=\"data-font\">\r\n                  {statuscardProps.item.bookedOn}\r\n                </IonText>\r\n              </IonRow>\r\n            </IonCol>\r\n            <IonCol size=\"2\"></IonCol>\r\n          </IonRow>\r\n          {/* <IonRow className=\"sla\">\r\n            <IonCol>No. of POD's : 01</IonCol>\r\n\r\n            <IonCol>\r\n              {\" \"}\r\n              <SLAExpire\r\n                expiryDate={statuscardProps.item.verifyPodBy}\r\n                verifyPodTime={statuscardProps.item.verifyPodTime}\r\n              />\r\n            </IonCol>\r\n          </IonRow> */}\r\n          {statuscardProps.item.statusCode !== \"STARTED\" ? (\r\n            <IonRow className=\"sla\">\r\n              <IonCol size=\"1\">\r\n                <div className=\"mt-dot\"></div>\r\n              </IonCol>\r\n              <IonCol>MT IN Delivered</IonCol>\r\n            </IonRow>\r\n          ) : (\r\n            <IonGrid className=\"sla\">\r\n              <IonRow>\r\n                <IonCol className=\"same-line\">\r\n                  In progress{\" \"}\r\n                  <div className=\"count orange\">\r\n                    {/* {statuscardProps.item.containersInYard < 10 ? 0 : \"\"}\r\n                    {statuscardProps.item.containersInYard} */}\r\n                    {addPreZero(statuscardProps.item.containersInYard)}\r\n                  </div>\r\n                </IonCol>\r\n                <IonCol className=\"same-line\">\r\n                  Delivered{\" \"}\r\n                  <div className=\"count green\">\r\n                    {/* {statuscardProps.item.containersDelivered < 10 ? 0 : \"\"}\r\n                    {statuscardProps.item.containersDelivered} */}\r\n                    {addPreZero(statuscardProps.item.containersDelivered)}\r\n                  </div>\r\n                </IonCol>\r\n                <IonCol className=\"same-line\">\r\n                  Completed{\" \"}\r\n                  <div className=\"count blue\">\r\n                    {\" \"}\r\n                    {statuscardProps.item.containersCompleted < 10 ? 0 : \"\"}\r\n                    {statuscardProps.item.containersCompleted}\r\n                  </div>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonGrid>\r\n          )}\r\n        </IonCardContent>\r\n      </IonCard>\r\n    </div>\r\n  );\r\n};\r\nexport default Statuscard;\r\n","import { IonContent, IonPage } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport InformationText from \"../../components/InformationText\";\r\nimport Statuscard from \"../../components/statusCard/statuscard\";\r\nimport { updateInvoiceHeader } from \"../../redux/actions/AllActions\";\r\nimport Store from \"../../redux/Store\";\r\nimport { fetchAllmiscellaneousList } from \"../../services/EndPointApi\";\r\nimport { fetchMiscellanious } from \"../../util/EndPointURL\";\r\nvar miscellaneousList = [\r\n  {\r\n    bookingNumber: \"LM000723\",\r\n    bookedOn: \"15/08/2021 13:52\",\r\n    noOfContainers: 1,\r\n    noOfTrucks: 1,\r\n    statusCode: \"STARTED\",\r\n    amountPaid: \"0.00\",\r\n    receipt: \"true\",\r\n    requesterName: \"ReqName\",\r\n    requesterContact: \"971554070465\",\r\n    containersInYard: 0,\r\n    containersToTown: 1,\r\n    containersDelivered: 0,\r\n    containersCompleted: 0,\r\n    bookedDate: \"2021-08-15T09:52:28.645+00:00\",\r\n    importerComments: null,\r\n    verifyPodBy: \"16/08/2021 16:49\",\r\n    verifyPodTime: 3,\r\n    unpaidAmount: \"105.00\",\r\n    inv: true,\r\n    pod: true,\r\n  },\r\n];\r\n\r\nexport default function Invoice() {\r\n  let history = useHistory();\r\n  const [miscellaneousList, setmiscellaneousList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllmiscellaneousList(\"\");\r\n  }, []);\r\n\r\n  async function getAllmiscellaneousList(param: string) {\r\n    if (!param) {\r\n      param = \"pgSize=10&pgNo=0&option=ALL&locale=en\";\r\n    }\r\n\r\n    var response = await fetchAllmiscellaneousList(fetchMiscellanious + param);\r\n    if (response?.data?.elements?.length > 0) {\r\n      setmiscellaneousList(response.data.elements);\r\n    }\r\n    console.log(response);\r\n  }\r\n\r\n  async function goToInvoiceTabPage(item) {\r\n    // var invoiceHeader = {\r\n    //   noOfContainers: item.noOfContainers,\r\n    //   noOfTrucks: item.noOfTrucks,\r\n    //   amountPaid: item.amountPaid,\r\n    // };\r\n    // var updateInvoiceHead = updateInvoiceHeader(invoiceHeader);\r\n    // if (updateInvoiceHead) Store.dispatch(updateInvoiceHead);\r\n    history.push(\"/invoicetabs/booking\", item);\r\n  }\r\n  return (\r\n    <IonPage>\r\n      <Header\r\n        label=\"miscellaneous invoice\"\r\n        action=\"home\"\r\n        //searchClick={onSearchClick}\r\n        agentHeader={true}\r\n      />\r\n      <InformationText message={`${miscellaneousList.length} bookings`} />\r\n      <IonContent>\r\n        {miscellaneousList.map((item, index) => (\r\n          <Statuscard\r\n            key={index}\r\n            item={item}\r\n            gotoDetails={() => goToInvoiceTabPage(item)}\r\n          />\r\n        ))}\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  IonTabs,\r\n  IonRouterOutlet,\r\n  IonTabBar,\r\n  IonTabButton,\r\n  IonIcon,\r\n  IonLabel,\r\n} from \"@ionic/react\";\r\nimport { Plugins, AppState } from \"@capacitor/core\";\r\nimport { Route, Redirect, RouteComponentProps } from \"react-router\";\r\nimport \"./MainTab.scss\";\r\nimport LandingPage from \"./landingpage/LandingPage\";\r\nimport Status from \"./myBooking/status/Status\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Address from \"./address/Address\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PODList from \"./VerifyPOD/PODList\";\r\nimport PODDetails from \"./VerifyPOD/PODDetails\";\r\nimport ListAllPod from \"./VerifyPOD/ListAllPod\";\r\nimport Invoice from \"./ManualInvoice/Invoice\";\r\nimport InvoiceTabs from \"./ManualInvoice/InvoiceTabs/InvoiceTabs\";\r\n\r\nexport default function MainTabs(props: any) {\r\n  let history = useHistory();\r\n  const { Keyboard } = Plugins;\r\n  console.log(props.selected);\r\n  const [selected, setSelected] = useState(false);\r\n  const menutabClicked = (e) => {\r\n    console.log(e);\r\n    console.log(props);\r\n    history.push(\"/profilemenu\", { direction: \"none\" });\r\n  };\r\n\r\n  const sign = \"test\";\r\n\r\n  return (\r\n    <div className=\"ion-tabs\">\r\n      <div className=\"menu-button-div\">\r\n        <div className=\"menu-button\" onClick={menutabClicked}>\r\n          <hr />\r\n          <hr />\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <IonTabs className=\"ion-tabs-bar\">\r\n        <IonRouterOutlet>\r\n          <Redirect exact path=\"/tabs\" to=\"/tabs/landing\" />\r\n\r\n          <Route\r\n            path=\"/tabs/landing\"\r\n            render={() => <LandingPage />}\r\n            exact={true}\r\n          />\r\n          <Route path=\"/tabs/status\" render={() => <Status />} exact={true} />\r\n          <Route\r\n            path=\"/tabs/status/pod/podDetails\"\r\n            render={(routeProps) => <PODDetails {...routeProps} />}\r\n            exact={true}\r\n          />\r\n\r\n          <Route\r\n            path=\"/tabs/status/pod/listAllPod\"\r\n            render={() => <ListAllPod />}\r\n            exact={true}\r\n          />\r\n          <Route\r\n            path=\"/tabs/status/miscellaneous\"\r\n            render={() => <Invoice />}\r\n            exact={true}\r\n          />\r\n          <Route\r\n            path=\"/tabs/status/invoicetabs\"\r\n            render={() => <InvoiceTabs />}\r\n            exact={true}\r\n          />\r\n          <Route path=\"/tabs/profile\" render={() => <Profile />} exact={true} />\r\n          <Route path=\"/tabs/addresses\" exact render={() => <Address />} />\r\n          {/* <Route path=\"/tabs/schedule/:id\" component={SessionDetail} />\r\n          <Route path=\"/tabs/speakers/sessions/:id\" component={SessionDetail} />\r\n          <Route path=\"/tabs/map\" render={() => <MapView />} exact={true} />\r\n          <Route path=\"/tabs/about\" render={() => <About />} exact={true} /> */}\r\n        </IonRouterOutlet>\r\n        <IonTabBar slot=\"bottom\" className=\" main-tab\">\r\n          <IonTabButton tab=\"landing\" href=\"/tabs/landing\">\r\n            <IonIcon src=\"assets/icon/home-new.svg\" className=\"button\" />\r\n            <IonLabel>Home</IonLabel>\r\n          </IonTabButton>\r\n          <IonTabButton tab=\"addresses\" href=\"/tabs/addresses\">\r\n            <IonIcon src=\"assets/icon/address.svg\" className=\"button\" />\r\n            <IonLabel>Addresses</IonLabel>\r\n          </IonTabButton>\r\n          <IonTabButton disabled={true}></IonTabButton>\r\n          <IonTabButton tab=\"status\" href=\"/tabs/status\">\r\n            <IonIcon src=\"assets/icon/status.svg\" className=\"button\" />\r\n            <IonLabel>Status</IonLabel>\r\n          </IonTabButton>\r\n          <IonTabButton tab=\"profile\" href=\"/tabs/profile\">\r\n            <IonIcon src=\"assets/icon/profile.svg\" className=\"button\" />\r\n            <IonLabel>Profile</IonLabel>\r\n          </IonTabButton>\r\n        </IonTabBar>\r\n      </IonTabs>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  IonText,\r\n  IonRow,\r\n  IonCard,\r\n  IonCol,\r\n  IonCardContent,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { chevronForwardOutline } from \"ionicons/icons\";\r\nimport \"../statusCard/StatusCard.scss\";\r\n\r\ninterface MenuParam {\r\n  type: string;\r\n  total: string;\r\n  handleClick?(e: any): void;\r\n}\r\n\r\nconst StatusCard: React.FC<MenuParam> = (MenuParam) => {\r\n  const [] = useState();\r\n\r\n  return (\r\n    <>\r\n      <IonRow id=\"status-card\">\r\n        <IonCol className=\"booking-card\">\r\n          <IonCard className=\"lightShadow\" onClick={MenuParam.handleClick}>\r\n            <IonCardContent className=\"booking-card-content\">\r\n              <IonRow className=\"booking-row\">\r\n                <IonCol size=\"8\" className=\"ion-align-self-center\">\r\n                  <div className=\"ion-float-left\">\r\n                    <IonText className=\"booking-menu-type\">\r\n                      {MenuParam.type}\r\n                    </IonText>{\" \"}\r\n                  </div>\r\n                </IonCol>\r\n                <IonCol size=\"2\" className=\"ion-align-self-center\">\r\n                  <div className=\"ion-float-right\">\r\n                    <IonText className=\"booking-menu-total\">\r\n                      {MenuParam.total || \"00\"}\r\n                    </IonText>{\" \"}\r\n                  </div>\r\n                </IonCol>\r\n                <IonCol size=\"2\" className=\"ion-align-self-center\">\r\n                  <div>\r\n                    <IonIcon\r\n                      className=\"booking-menu-icon\"\r\n                      icon={chevronForwardOutline}\r\n                      slot=\"icon-only\"\r\n                    ></IonIcon>{\" \"}\r\n                  </div>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonCardContent>\r\n          </IonCard>\r\n        </IonCol>\r\n      </IonRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(StatusCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IonPage, IonContent, IonGrid } from \"@ionic/react\";\r\nimport StatusCard from \"./statusCard/StatusCard\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport Header from \"../../../components/Header\";\r\nimport { httpGetCallWithoutHeader } from \"../../../services/EndPointApi\";\r\nimport Store from \"../../../redux/Store\";\r\n\r\nexport default function Status(props) {\r\n  console.log(props);\r\n  let history = useHistory();\r\n  const [countsRequest, setCountsRequest] = useState<any>({});\r\n  const [agent, setAgent] = useState();\r\n  Store.subscribe(() => {\r\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCountRequest();\r\n    console.log(\"call status\", agent);\r\n  }, [agent]);\r\n\r\n  const onBookingClick = () => {\r\n    history.push(\"/bookingDetails/ALL\");\r\n  };\r\n  const onPODClick = () => {\r\n    history.push(\"/tabs/status/pod/listAllPod\");\r\n  };\r\n  const onInvoiceClick = () => {\r\n    history.push(\"/tabs/status/miscellaneous\");\r\n  };\r\n\r\n  const getCountRequest = async () => {\r\n    var response = await httpGetCallWithoutHeader(\r\n      EndPointURL.fetchRequestStatusCountsUrl\r\n    );\r\n    if (await response?.success) {\r\n      var respObj = response?.data?.data?.dataItems[0];\r\n      Object.keys(respObj).forEach(function (key) {\r\n        respObj[key] = respObj[key] < 10 ? \"0\" + respObj[key] : respObj[key];\r\n      });\r\n\r\n      await setCountsRequest({\r\n        ...countsRequest,\r\n        result: respObj,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSearchClick = () => {\r\n    history.push(\"/search-booking\");\r\n  };\r\n\r\n  const goBack = () => {\r\n    history.push(\"/tabs/landing\");\r\n  };\r\n\r\n  return (\r\n    <IonPage id=\"status-page\">\r\n      <Header\r\n        label=\"Status\"\r\n        action=\"search\"\r\n        searchClick={onSearchClick}\r\n        showAgent={true}\r\n        customBack={true}\r\n        backClick={goBack}\r\n        agentHeader={true}\r\n      />\r\n      <IonContent fullscreen padding-top className=\"page-content\">\r\n        <IonGrid margin-top>\r\n          <StatusCard\r\n            type=\"All Bookings\"\r\n            total={countsRequest?.result?.ALL}\r\n            handleClick={onBookingClick}\r\n          />\r\n          <StatusCard\r\n            type=\"Verify POD's\"\r\n            total={countsRequest.result?.PODUPL}\r\n            handleClick={onPODClick}\r\n          />\r\n          <StatusCard\r\n            type=\"Miscellaneous Invoices\"\r\n            total={countsRequest.result?.INVAPPR}\r\n            handleClick={onInvoiceClick}\r\n          />\r\n        </IonGrid>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n"],"sourceRoot":""}