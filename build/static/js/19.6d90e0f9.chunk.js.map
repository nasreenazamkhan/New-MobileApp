{"version":3,"sources":["components/Icon.tsx","components/Header.tsx","util/ClearReduxStore.js","util/Utilities.ts","components/txtinput/TxtInput.tsx","pages/profile/Profile.tsx"],"names":["Icon","props","classes","useStyles","propsIcon","iconProps","src","name","style","styleProps","className","class","slot","onClick","iconClick","iconName","fieldPlaceholder","console","log","createUseStyles","zoom12","zoom","slotEnd","right","bottom","disabledminus","fontSize","calenderMargin","zoom3","zoom2","slotStart","position","absolutePosition","lastIcon","Header","HeaderParam","actionType","setActionType","useState","search","check","close","home","info","userDetails","Store","getState","CheckUserStatus","user","checked","setChecked","checkedLabel","setCheckedLabel","backIconProps","useEffect","updateActionType","action","history","useHistory","back","e","customClick","customBack","backClick","goBack","myValue","agentHeader","height","paddingBottom","checkedProps","hidden","showChecked","fill","onIonChange","addContainerToCart","checkAndUncheckAll","detail","label","searchClick","icon","minWidth","infoClick","checkClick","push","ClearReduxStore","closeSharp","agents","value","selectedAgent","interface","async","data","url","EndPointURL","agentCode","agentType","endPointHeader","userName","userType","response","loginWithAgent","result","dataItems","success","accessToken","reduxActions","dispatch","activeCompanyCode","changedAgent","selectUserType","disabled","showAgent","length","backgroundColor","interfaceOptions","cssClass","map","item","index","key","agentName","type","LoginUserTypes","isEmpty","trim","isValid","dataType","delimiter","replaceAll","RegExp","REGEX_MAP","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","validateEmail","mail","validatePhone","number","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","convertToMillSeconds","interval","timeParts","split","h","m","TxtInput","onChange","required","errors","datatype","description","placeholder","onBlur","readonly","contactForm","max","setError","clearInput","keyDown","isClickable","validation","setvalidation","width","padding","substring","includes","spellCheck","autocapitalize","onKeyDown","preventDefault","validate","val","target","replace","nameTest","autocomplete","onIonBlur","maxlength","minlength","expand","color","Profile","userInfo","setUser","alertPopup","showAlertPopup","toGoPathName","settoGoPathName","form","setForm","firstName","lastName","email","mobileNumber","landlineNumber","submitted","valid","setErrors","initialFormData","setinitialFormData","fetchDetails","unblockHandle","useRef","current","block","pathname","finalData","_","isEqual","resp","getProfileData","updateFlag","profileUpdate","errs","Object","values","some","x","updateProfileResp","updateProfile","handleChange","alertProps","isShow","message","alertAction","content","okButtonName","cancelButtonName","itemName","id","stroke","noValidate","onSubmit","autoComplete","erro"],"mappings":"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","file":"static/js/19.6d90e0f9.chunk.js","sourcesContent":["import React from \"react\";\nimport { IonIcon } from \"@ionic/react\";\nimport \"./Icon.css\";\nimport { createUseStyles } from \"react-jss\";\n\nexport default function Icon(props: any) {\n  const classes = useStyles();\n  var propsIcon = props.iconProps; // \"inputIcon\"\n  return (\n    <IonIcon\n      src={\"assets/icon/\" + propsIcon.name + \".svg\"}\n      style={propsIcon.styleProps}\n      className={\n        propsIcon.class\n          ? classes[propsIcon.class] + \" \" + propsIcon.class\n          : // : propsIcon.login\n            // ? classes[propsIcon.class]\n            // : propsIcon.slot === \"end\"\n            // ? classes[propsIcon.class]\n            \"\"\n      }\n      slot={propsIcon.slot}\n      onClick={() =>\n        propsIcon?.iconClick\n          ? propsIcon?.iconClick(props.iconName, props.fieldPlaceholder)\n          : console.log()\n      } //{() => console.log(1111)} //{propsIcon?.iconClick}\n    ></IonIcon>\n  );\n}\nconst useStyles = createUseStyles({\n  zoom12: {\n    zoom: 1.4,\n  },\n  // slotEnd: {\n  //   position: \"absolute\",\n  //   right: 0,\n  //   zoom: 1.5,\n  //   bottom: \"1px\",\n  // },\n  slotEnd: {\n    // position: \"absolute\",\n    right: 0,\n    // zoom: 1.5,\n    bottom: \"1px\",\n  },\n  disabledminus: {\n    fontSize: \"1.6rem\",\n    right: \"-5px\",\n    //position: \"absolute\",\n    zoom: 1.5,\n    //bottom: \"1px\",\n  },\n  calenderMargin: {\n    zoom: 1.4,\n    //marginRight: \"0.5rem\",\n  },\n  zoom3: {\n    zoom: 3,\n  },\n  zoom2: {\n    zoom: 2,\n  },\n  slotStart: {\n    position: \"absolute\",\n    zoom: 1.5,\n  },\n  absolutePosition: {\n    position: \"absolute\",\n  },\n  lastIcon: {\n    zoom: \"1.5\",\n    right: \"3px\",\n    position: \"relative\",\n  },\n});\n","import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { closeSharp, informationCircle, search } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClearReduxStore from \"../util/ClearReduxStore\";\r\nimport \"./Header.scss\";\r\nimport Icon from \"./Icon\";\r\nimport Store from \"../redux/Store\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport { loginWithAgent } from \"../services/EndPointApi\";\r\n\r\ninterface HeaderParam {\r\n  label?: string;\r\n  action?: string;\r\n  showAgent?: boolean;\r\n  agentHeader?: boolean;\r\n  customBack?: boolean;\r\n  searchClick?(e: any): void;\r\n  infoClick?(e: any): void;\r\n  checkClick?(e: any): void;\r\n  backClick?(e: any): void;\r\n  locationProps?: any;\r\n  checkedProps?: any;\r\n  customClick?(actionTYpe: string): void;\r\n  changedAgent?(): void;\r\n}\r\nconst Header: React.FC<HeaderParam> = (HeaderParam) => {\r\n  const [actionType, setActionType] = useState({\r\n    search: true,\r\n    check: true,\r\n    close: true,\r\n    home: true,\r\n    info: false,\r\n  });\r\n\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const [checkedLabel, setCheckedLabel] = useState(\"Select All\");\r\n  const backIconProps = {\r\n    name: \"back-arrow\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const homeIconProps = {\r\n    name: \"home-new\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const checkIconProps = {\r\n    name: \"Check\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n\r\n  function checkAndUncheckAll(checked) {\r\n    console.log(checked);\r\n    setChecked(checked);\r\n    if (checked) {\r\n      setCheckedLabel(\"Unselect All\");\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"checked\");\r\n    } else {\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"unchecked\");\r\n      setCheckedLabel(\"Select All\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateActionType(HeaderParam.action ? HeaderParam.action : \"none\");\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  const back = (e: any) => {\r\n    if (HeaderParam.customClick) HeaderParam.customClick(\"/containerCart\");\r\n    else {\r\n      if (HeaderParam.customBack) {\r\n        HeaderParam.backClick(e);\r\n      } else {\r\n        history.goBack();\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateActionType = (myValue: string) => {\r\n    if (myValue) {\r\n      if (myValue === \"search\") {\r\n        setActionType({\r\n          search: false,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"check\") {\r\n        setActionType({\r\n          search: true,\r\n          check: false,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"close\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: false,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"home\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: false,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"info\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function homeButtonClicked() {\r\n    if (HeaderParam.customClick) HeaderParam.customClick(\"/tabs/landing\");\r\n    else {\r\n      history.push(\"/tabs/landing\");\r\n      ClearReduxStore();\r\n    }\r\n  }\r\n\r\n  const selectUserType = async (e: any) => {\r\n    let data = e.detail.value;\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    var result = response.data.data.dataItems[0];\r\n    if (await response.success) {\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        result.user.activeCompanyCode\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n      HeaderParam.changedAgent\r\n        ? HeaderParam.changedAgent()\r\n        : console.log(\"changed\");\r\n    }\r\n  };\r\n\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface\",\r\n  };\r\n\r\n  return (\r\n    <IonHeader\r\n      style={HeaderParam.agentHeader ? { height: \"102px\" } : { height: \"10%\" }}\r\n    >\r\n      <IonToolbar className=\"header\">\r\n        <div\r\n          className=\"mainContainer\"\r\n          style={!HeaderParam.agentHeader ? { paddingBottom: 0 } : {}}\r\n        >\r\n          {HeaderParam.checkedProps ? (\r\n            <div\r\n              className=\"selectAllBg\"\r\n              hidden={!HeaderParam.checkedProps.showChecked}\r\n            >\r\n              <div>\r\n                <IonButton\r\n                  fill=\"clear\"\r\n                  onClick={(e) => {\r\n                    back(e);\r\n                  }}\r\n                >\r\n                  <Icon iconProps={backIconProps} />\r\n                </IonButton>\r\n              </div>\r\n              <div className=\"checkBoxContainer\">\r\n                <IonCheckbox\r\n                  className=\"checkBox\"\r\n                  checked={checked}\r\n                  onIonChange={(e) => checkAndUncheckAll(e.detail.checked)}\r\n                />\r\n              </div>\r\n              <div className=\"checkBoxLabelCol\">\r\n                <IonLabel className=\"checkBoxLabel\">{checkedLabel}</IonLabel>{\" \"}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"backArrow\">\r\n            {HeaderParam.label != \"Home\" && actionType.close ? (\r\n              <IonButton\r\n                fill=\"clear\"\r\n                onClick={(e) => {\r\n                  back(e);\r\n                }}\r\n              >\r\n                <Icon iconProps={backIconProps} />\r\n              </IonButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"header-label\">\r\n            {\" \"}\r\n            <IonText>{HeaderParam.label}</IonText>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <IonButton\r\n              hidden={actionType.search}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.searchClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={search}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.info}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.infoClick}\r\n            >\r\n              <IonIcon\r\n                src={\"assets/icon/\" + \"info-italic\" + \".svg\"}\r\n                slot=\"icon-only\"\r\n                // icon={informationCircle}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n               \r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.check}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.checkClick}\r\n            >\r\n              {/* <IonIcon slot=\"icon-only\" src=\"\" style={{minWidth:'30px'}}/> */}\r\n              <Icon iconProps={checkIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.home}\r\n              fill=\"clear\"\r\n              onClick={(e) => homeButtonClicked()}\r\n            >\r\n              <Icon iconProps={homeIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.close}\r\n              fill=\"clear\"\r\n              onClick={(e) => {\r\n                back(e);\r\n              }}\r\n            >\r\n              <IonIcon slot=\"icon-only\" icon={closeSharp} />\r\n            </IonButton>\r\n            <IonButton hidden={HeaderParam.action !== \"\"} fill=\"clear\">\r\n              <IonIcon />\r\n            </IonButton>\r\n          </div>\r\n        </div>\r\n        {userDetails.agents && HeaderParam.agentHeader && (\r\n          <IonToolbar className=\"agent-code-header\">\r\n            <IonSelect\r\n              value={userDetails.selectedAgent}\r\n              interface=\"popover\"\r\n              onIonChange={(e) => selectUserType(e)}\r\n              disabled={\r\n                !HeaderParam.showAgent || userDetails.agents.length == 1\r\n              }\r\n              style={\r\n                !HeaderParam.showAgent ? { backgroundColor: \"#DDF1FF\" } : {}\r\n              }\r\n              interfaceOptions={agentCodeoptions}\r\n            >\r\n              {userDetails.agents.map((item, index) => {\r\n                return (\r\n                  <IonSelectOption\r\n                    value={item}\r\n                    key={index}\r\n                    className=\"select-agent-opt\"\r\n                  >\r\n                    {item.agentCode + \"-\" + item.agentName}\r\n                  </IonSelectOption>\r\n                );\r\n              })}\r\n            </IonSelect>\r\n            <IonIcon\r\n              src=\"assets/icon/arrow-down.svg\"\r\n              className=\"arrow-down-icon\"\r\n              hidden={!HeaderParam.showAgent || userDetails.agents.length == 1}\r\n            />\r\n          </IonToolbar>\r\n        )}\r\n        {/* </IonImg> */}\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  );\r\n};\r\nexport default Header;\r\n","import Store from \"../redux/Store\";\nimport * as LoginUserTypes from \"../redux/actionTypes/AllActionTypes\";\n\nexport default function ClearReduxStore() {\n  Store.dispatch({ type: LoginUserTypes.BOOK_TRUCK_CLEAR });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_CONTAINERS });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_TRUCK });\n  Store.dispatch({ type: LoginUserTypes.CLEAR_CART });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_DECLARATIONS });\n}\n","import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number,length) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{\"+length+\"}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n","import { IonButton, IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport {\r\n  getPatternValue,\r\n  isValid,\r\n  validateEmail,\r\n  validateMobile,\r\n} from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n  setError?: any;\r\n  clearInput?: boolean;\r\n  keyDown? : any;\r\n  isClickable?:any\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n  setError,\r\n  clearInput,\r\n  keyDown,\r\n  isClickable\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  //const [error, seterror] = useState(\"\");\r\n  const checkKey = (e) => {\r\n    if(keyDown){\r\n      keyDown(e)\r\n    }\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (type === \"tel\" && setError) {\r\n      val = \"971\" + val.replace(/\\s/g, \"971\");\r\n      var nameTest = validateMobile(val, max * 1 + 3);\r\n      console.log(nameTest);\r\n      if (val != null) {\r\n        if (!nameTest) {\r\n          setError(\"Please Enter \" + max + \" digit number\");\r\n        } else {\r\n          setError(\"\");\r\n        }\r\n      }\r\n      console.log(\"tteeeelll\", val);\r\n    }\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      if (!validate) {\r\n        setError(\"Please Enter valid Mail id\");\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      console.log(validate);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={\r\n            type === \"tel\" && value?.substring(0, 3).includes(\"971\")\r\n              ? value.split(\"971\")[1]\r\n              : value\r\n          }\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={clearInput}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          minlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {!isClickable && icon && (\r\n            <Icon\r\n              iconProps={icon}\r\n              iconName={name}\r\n              fieldPlaceholder={placeholder}\r\n            />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n        {isClickable && icon &&(\r\n          <IonButton\r\n\r\n          className=\"icon-button\"\r\n\r\n          expand=\"full\"\r\n\r\n          fill=\"clear\"\r\n\r\n          onClick={() => icon.iconClick(name, placeholder)}\r\n\r\n        >\r\n\r\n          <Icon\r\n\r\n            iconProps={icon}\r\n\r\n            iconName={name}\r\n\r\n            fieldPlaceholder={placeholder}\r\n\r\n          />\r\n\r\n        </IonButton>\r\n        )}\r\n\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n","import { IonContent, IonIcon, IonList, IonPage } from \"@ionic/react\";\r\nimport { arrowForwardOutline } from \"ionicons/icons\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Prompt, useHistory } from \"react-router-dom\";\r\nimport Header from \"../../components/Header\";\r\nimport Icon from \"../../components/Icon\";\r\nimport TxtInput from \"../../components/txtinput/TxtInput\";\r\nimport Store from \"../../redux/Store\";\r\nimport { getProfileData, updateProfile } from \"../../services/EndPointApi\";\r\nimport * as EndPointURL from \"../../util/EndPointURL\";\r\nimport { isEmpty } from \"../../util/Utilities\";\r\nimport \"./Profile.scss\";\r\nimport _ from \"lodash\";\r\nimport Alert from \"../../components/alert/Alert\";\r\n\r\nvar objectdefn = {\r\n  firstName: {},\r\n};\r\nfunction Profile() {\r\n  var userDetails = Store.getState().CheckUserStatus;\r\n  const [userInfo, setUser] = useState<any>({\r\n    userName: userDetails.user.userName,\r\n    agentCode: userDetails.user.activeCompanyCode?.split(\"-\")[1],\r\n  });\r\n  const [alertPopup, showAlertPopup] = useState(false);\r\n  const [toGoPathName, settoGoPathName] = useState(\"\");\r\n  let history = useHistory();\r\n  const [form, setForm] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    mobileNumber: \"\",\r\n    landlineNumber: \"\",\r\n    submitted: false,\r\n    valid: false,\r\n    agentCode: \"\",\r\n    userName: \"\",\r\n  });\r\n\r\n  const profileImageIconProps = {\r\n    name: \"profile-pic-icon\",\r\n    slot: \"icon-only\",\r\n    class: \"zoom84\",\r\n  };\r\n\r\n  const pencilIconProps = {\r\n    name: \"pencil\",\r\n    styleProps: {\r\n      stroke: \"#FF5959\",\r\n      styleProps: { zoom: 0.7 },\r\n    },\r\n  };\r\n  const [errors, setErrors] = useState<any>({});\r\n  const [initialFormData, setinitialFormData] = useState<any>({});\r\n\r\n  useEffect(() => {\r\n    fetchDetails();\r\n  }, []);\r\n\r\n  const unblockHandle = useRef<any>();\r\n  useEffect(() => {\r\n    if (history) {\r\n      unblockHandle.current = history.block(({ pathname }, action) => {\r\n        settoGoPathName(pathname);\r\n        if (pathname !== \"/tabs/profile\") {\r\n          let finalData = form;\r\n          delete finalData.agentCode;\r\n          delete finalData.valid;\r\n          delete finalData.submitted;\r\n          if (!_.isEqual(initialFormData, finalData)) {\r\n            showAlertPopup(true);\r\n            return false;\r\n          }\r\n        }\r\n      });\r\n      return function () {\r\n        unblockHandle.current.current && unblockHandle.current.current();\r\n      };\r\n    }\r\n  }, [initialFormData, form]);\r\n\r\n  const fetchDetails = async () => {\r\n    let resp: any = await getProfileData(userInfo.userName);\r\n    if (resp?.success) {\r\n      await setForm({\r\n        ...form,\r\n        ...resp.data.data.dataItems[0],\r\n      });\r\n      setinitialFormData(resp.data.data.dataItems[0]);\r\n    }\r\n  };\r\n  var updateFlag = false;\r\n  const profileUpdate = async () => {\r\n    let errs: any = {};\r\n    if (isEmpty(form.firstName)) {\r\n      errs.firstName = \"First Name is required\";\r\n    }\r\n    if (isEmpty(form.lastName)) {\r\n      errs.lastName = \"Last Name is required\";\r\n    }\r\n\r\n    if (isEmpty(form.email)) {\r\n      errs.email = \"Email is required\";\r\n    }\r\n    if (isEmpty(form.mobileNumber)) {\r\n      errs.mobileNumber = \"Mobile Number is required\";\r\n    }\r\n    if (isEmpty(form.landlineNumber)) {\r\n      errs.landlineNumber = \"Landline Number is required\";\r\n    }\r\n    if (\r\n      errors.email !== \"\" ||\r\n      errors.mobileNumber !== \"\" ||\r\n      errors.landlineNumber !== \"\"\r\n    ) {\r\n    } else if (!Object.values(errors).some((x) => x !== null && x !== \"\")) {\r\n      let updateProfileResp = await updateProfile(form);\r\n      if (updateProfileResp.success) {\r\n        updateFlag = true;\r\n      } else {\r\n        updateFlag = false;\r\n      }\r\n    }\r\n    const isEmpt = !Object.values(errors).some((x) => x !== null && x !== \"\");\r\n\r\n    setErrors({ ...errors, ...errs });\r\n    return updateFlag;\r\n  };\r\n\r\n  const handleChange = (e: any, value: any) => {\r\n    errors[e.target.name] = \"\";\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n  const alertProps = {\r\n    isShow: alertPopup,\r\n    message: \"\",\r\n    alertAction: alertAction,\r\n    content:\r\n      \" You have made some changes. Do you want to save the changes before leaving?\",\r\n    okButtonName: \"Save\",\r\n    cancelButtonName: \"Cancel\",\r\n    icon: \"<img src='/assets/icon/are-you-sure.svg'/>\",\r\n    itemName: \"\",\r\n  };\r\n\r\n  async function alertAction(item, actionType) {\r\n    showAlertPopup(false);\r\n    if (actionType) {\r\n      var upadtedOrNot = await profileUpdate();\r\n      if (upadtedOrNot) {\r\n        fetchDetails();\r\n        if (unblockHandle) {\r\n          unblockHandle.current();\r\n        }\r\n        history.push(toGoPathName + \"\");\r\n      }\r\n    } else {\r\n      setForm(initialFormData);\r\n      if (unblockHandle) {\r\n        unblockHandle.current();\r\n      }\r\n      history.push(toGoPathName + \"\");\r\n    }\r\n  }\r\n  return (\r\n    <IonPage id=\"profilePage\">\r\n      <Header\r\n        label=\"My Profile\"\r\n        action=\"check\"\r\n        checkClick={() => profileUpdate()}\r\n      />\r\n      <IonContent>\r\n        <Alert alertProps={alertProps} />\r\n        <div className=\"main-container\">\r\n          <div className=\"login-logo\"></div>\r\n          <div className=\"profile-icon\">\r\n            <div>\r\n              <Icon iconProps={profileImageIconProps} />\r\n            </div>\r\n            <div className=\"pencil-container\">\r\n              <div className=\"border-pencil\">\r\n                <Icon iconProps={pencilIconProps} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <div className=\"login-box-header\"></div>\r\n\r\n            <form noValidate onSubmit={profileUpdate} autoComplete=\"off\">\r\n              <IonList className=\"form-section\">\r\n                <div className=\"login-header\">\r\n                  {form.userName}\r\n                  {/* <hr /> */}\r\n                </div>\r\n\r\n                <div className=\"list-margin\">\r\n                  <TxtInput\r\n                    name={\"agentCode\"}\r\n                    value={userInfo.agentCode}\r\n                    label=\"Agent code\"\r\n                    errors={errors.agentCode}\r\n                    type=\"text\"\r\n                    required={true}\r\n                    readonly={true}\r\n                    onChange={handleChange}\r\n                    datatype=\"TEXT\"\r\n                    placeholder=\"Agent code\"\r\n                  />\r\n                  <TxtInput\r\n                    name={\"firstName\"}\r\n                    value={form.firstName}\r\n                    label=\"First Name\"\r\n                    errors={errors.firstName}\r\n                    type=\"text\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    datatype=\"TEXT\"\r\n                    placeholder=\"First Name\"\r\n                  />\r\n\r\n                  <TxtInput\r\n                    name={\"lastName\"}\r\n                    value={form.lastName}\r\n                    label=\"Last Name\"\r\n                    errors={errors.lastName}\r\n                    type=\"text\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Last Name\"\r\n                  />\r\n\r\n                  <TxtInput\r\n                    name={\"email\"}\r\n                    value={form.email}\r\n                    label=\"Email\"\r\n                    errors={errors.email}\r\n                    type=\"email\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    //description=\"Please enter email\"\r\n                    placeholder=\"Email\"\r\n                    setError={(erro) => setErrors({ ...errors, email: erro })}\r\n                  />\r\n\r\n                  <TxtInput\r\n                    name={\"mobileNumber\"}\r\n                    value={form.mobileNumber}\r\n                    label=\"Mobile\"\r\n                    errors={errors.mobileNumber}\r\n                    type=\"tel\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    datatype=\"TEL_NUM\"\r\n                    //pattern=\"###-##-#######\"\r\n                    description=\"Tel Format 971 123456789\"\r\n                    placeholder=\"Mobile\"\r\n                    max={9}\r\n                    setError={(erro) =>\r\n                      setErrors({ ...errors, mobileNumber: erro })\r\n                    }\r\n                  />\r\n\r\n                  <TxtInput\r\n                    name={\"landlineNumber\"}\r\n                    value={form.landlineNumber}\r\n                    label=\"Phone\"\r\n                    errors={errors.landlineNumber}\r\n                    type=\"tel\"\r\n                    required={true}\r\n                    onChange={handleChange}\r\n                    datatype=\"TEL_NUM\"\r\n                    //pattern=\"###-##-######\"\r\n                    description=\"Tel Format 971 12345678\"\r\n                    placeholder=\"Phone\"\r\n                    max={8}\r\n                    setError={(erro) =>\r\n                      setErrors({ ...errors, landlineNumber: erro })\r\n                    }\r\n                  />\r\n                </div>\r\n              </IonList>\r\n              {/* <div className=\"button-div\">\r\n                <div className=\"button-holder\" onClick={profileUpdate}>\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                </div>\r\n              </div> */}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}