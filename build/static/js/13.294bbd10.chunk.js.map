{"version":3,"sources":["components/Icon.tsx","util/Utilities.ts","components/Footer/Footer.tsx","pages/CenterFooterButton.tsx","components/CartNumber.tsx","components/ContainerCard.tsx","components/Badge/Badge.tsx","pages/declaration/SearchPage/SearchCompo.tsx","pages/declaration/SearchPage/DeclSearch.tsx"],"names":["Icon","props","classes","useStyles","propsIcon","iconProps","src","name","style","styleProps","className","class","slot","onClick","iconClick","iconName","fieldPlaceholder","console","log","createUseStyles","zoom12","zoom","slotEnd","right","bottom","disabledminus","fontSize","calenderMargin","zoom3","zoom2","slotStart","position","absolutePosition","lastIcon","isEmpty","data","trim","isValid","dataType","delimiter","replaceAll","RegExp","REGEX_MAP","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","length","validateEmail","mail","validatePhone","number","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","convertToMillSeconds","interval","timeParts","split","h","m","Footer","history","useHistory","clickedOnMenuButton","path","push","connect","state","numberOfSelectedContainers","VariableValues","iconType","clickEvent","cartNumber","numberOfContainers","Cart","updateCartNumber","item","Store","dispatch","type","reduxActions","payLoad","variableName","value","setnumber","useState","useEffect","count","map","index","containerList","container","selected","ContainerCard","containerItem","containerClick","container_number","weight","pickupLocation","consigneeCode","orderValidity","consigneeDetails","color","Badge","status","backgroundColor","SearchCompo","clearText","setSegment","selectedSegment","searchForResult","label","onChange","required","errors","datatype","description","placeholder","icon","onBlur","readonly","contactForm","max","setError","searchText","setSearchText","validation","setvalidation","size","goBack","fill","arrowBackOutline","spellCheck","autocapitalize","onKeyDown","e","key","preventDefault","onIonChange","val","target","clearInput","autocomplete","onIonBlur","maxlength","minlength","detail","allStoreDeclarations","agent","CheckUserStatus","user","selectedAgent","addDeclarationToCart","updateContainersInCart","removeAllContainersInCart","updateBoesInCart","onclickEvent","allDecl","setselectedSegment","location","apiResult","setapiResult","warningMessage","setwarningMessage","contanerIconProps","async","segment","response","param","EndPointApi","EndPointURL","success","elements","message","element","referenceNumber","boeNumber","selectedNumber","updateContainerInCart","cardClicked","forEach","currentSelection","deliveryOrderValidity","CenterFooterButton"],"mappings":"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","file":"static/js/13.294bbd10.chunk.js","sourcesContent":["import React from \"react\";\nimport { IonIcon } from \"@ionic/react\";\nimport \"./Icon.css\";\nimport { createUseStyles } from \"react-jss\";\n\nexport default function Icon(props: any) {\n  const classes = useStyles();\n  var propsIcon = props.iconProps; // \"inputIcon\"\n  return (\n    <IonIcon\n      src={\"assets/icon/\" + propsIcon.name + \".svg\"}\n      style={propsIcon.styleProps}\n      className={\n        propsIcon.class\n          ? classes[propsIcon.class] + \" \" + propsIcon.class\n          : // : propsIcon.login\n            // ? classes[propsIcon.class]\n            // : propsIcon.slot === \"end\"\n            // ? classes[propsIcon.class]\n            \"\"\n      }\n      slot={propsIcon.slot}\n      onClick={() =>\n        propsIcon?.iconClick\n          ? propsIcon?.iconClick(props.iconName, props.fieldPlaceholder)\n          : console.log()\n      } //{() => console.log(1111)} //{propsIcon?.iconClick}\n    ></IonIcon>\n  );\n}\nconst useStyles = createUseStyles({\n  zoom12: {\n    zoom: 1.4,\n  },\n  // slotEnd: {\n  //   position: \"absolute\",\n  //   right: 0,\n  //   zoom: 1.5,\n  //   bottom: \"1px\",\n  // },\n  slotEnd: {\n    // position: \"absolute\",\n    right: 0,\n    // zoom: 1.5,\n    bottom: \"1px\",\n  },\n  disabledminus: {\n    fontSize: \"1.6rem\",\n    right: \"-5px\",\n    //position: \"absolute\",\n    zoom: 1.5,\n    //bottom: \"1px\",\n  },\n  calenderMargin: {\n    zoom: 1.4,\n    //marginRight: \"0.5rem\",\n  },\n  zoom3: {\n    zoom: 3,\n  },\n  zoom2: {\n    zoom: 2,\n  },\n  slotStart: {\n    position: \"absolute\",\n    zoom: 1.5,\n  },\n  absolutePosition: {\n    position: \"absolute\",\n  },\n  lastIcon: {\n    zoom: \"1.5\",\n    right: \"3px\",\n    position: \"relative\",\n  },\n});\n","import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number,length) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{\"+length+\"}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n","import { IonButton, IonIcon, IonLabel, IonTabButton } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport \"./Footer.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Footer() {\r\n  let history = useHistory();\r\n\r\n  function clickedOnMenuButton(path) {\r\n    history.push(path);\r\n  }\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div\r\n        className=\"footer-button\"\r\n        onClick={() => clickedOnMenuButton(\"/tabs/landing\")}\r\n      >\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n        <IonLabel className=\"footer-label\">Home</IonLabel>\r\n      </div>\r\n      <div\r\n        className=\"footer-button\"\r\n        onClick={() => clickedOnMenuButton(\"/tabs/addresses\")}\r\n      >\r\n        <IonIcon src=\"assets/icon/address.svg\" className=\"footer-button\" />\r\n        <IonLabel className=\"footer-label\">Addresses</IonLabel>\r\n      </div>\r\n      <div className=\"footer-button\">\r\n        {/* <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" /> */}\r\n      </div>\r\n      <div\r\n        className=\"footer-button\"\r\n        onClick={() => clickedOnMenuButton(\"/tabs/status\")}\r\n      >\r\n        <IonIcon src=\"assets/icon/status.svg\" className=\"footer-button\" />\r\n        <IonLabel className=\"footer-label\">status</IonLabel>\r\n      </div>\r\n      <div\r\n        className=\"footer-button\"\r\n        onClick={() => clickedOnMenuButton(\"/tabs/profile\")}\r\n      >\r\n        <IonIcon src=\"assets/icon/profile.svg\" className=\"footer-button\" />\r\n        <IonLabel className=\"footer-label\">profile</IonLabel>\r\n      </div>\r\n      {/* <IonButton className=\"footer-button\" fill=\"clear\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n      </IonButton> */}\r\n\r\n      {/* ------------------------------------------------------ */}\r\n      {/* <IonTabButton className=\"footer-button\" href=\"/tabs/landing\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n        <IonLabel>Home</IonLabel>\r\n      </IonTabButton>\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/addresses\">\r\n        <IonIcon src=\"assets/icon/address.svg\" className=\"footer-button\" />\r\n        <IonLabel>Addresses</IonLabel>\r\n      </IonTabButton>\r\n      <IonTabButton className=\"footer-button\"></IonTabButton>\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/status\">\r\n        <IonIcon src=\"assets/icon/status.svg\" className=\"footer-button\" />\r\n        <IonLabel>Status</IonLabel>\r\n      </IonTabButton>{\" \"}\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/profile\">\r\n        <IonIcon\r\n          src=\"assets/icon/profile.svg\"\r\n          className=\"footer-button button\"\r\n        />\r\n        <IonLabel>Profile</IonLabel>\r\n      </IonTabButton> */}\r\n    </div>\r\n  );\r\n}\r\n","import { IonIcon } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CartNumber from \"../components/CartNumber\";\r\nimport \"./CenterFooterButton.scss\";\r\n\r\ninterface CenterFooterButtonProps {\r\n  iconType;\r\n  clickEvent?: () => void;\r\n  numberOfSelectedContainers;\r\n}\r\n\r\nconst CenterFooterButton: React.FC<CenterFooterButtonProps> = ({\r\n  iconType,\r\n  clickEvent,\r\n  numberOfSelectedContainers,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"menu-button-div\"\r\n      onClick={() => {\r\n        if (numberOfSelectedContainers.cartNumber > 0 || iconType === \"menu\")\r\n          clickEvent();\r\n      }}\r\n    >\r\n      <div className=\"menu-button\">\r\n        {iconType === \"menu\" ? (\r\n          <>\r\n            <hr />\r\n            <hr />\r\n            <hr />\r\n          </>\r\n        ) : (\r\n          iconType === \"cart\" && (\r\n            <>\r\n              <IonIcon\r\n                src=\"assets/icon/container-crane.svg\"\r\n                className=\"button\"\r\n              />\r\n              <CartNumber />\r\n            </>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    numberOfSelectedContainers: state.VariableValues,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CenterFooterButton);\r\n","import { IonBadge, IonPopover } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Store from \"../redux/Store\";\r\nimport \"./CartNumber.scss\";\r\nimport * as reduxActions from \"../redux/actionTypes/AllActionTypes\";\r\n\r\ninterface stateProps {}\r\n\r\ninterface ownProps {\r\n  numberOfContainers;\r\n  updateCartNumber;\r\n}\r\n\r\ntype cartNumberProps = stateProps & ownProps;\r\nconst CartNumber: React.FC<cartNumberProps> = ({\r\n  numberOfContainers,\r\n  updateCartNumber,\r\n}) => {\r\n  const [number, setnumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    countContainerNumberSelected(0);\r\n  }, [numberOfContainers]);\r\n  function countContainerNumberSelected(count) {\r\n    setnumber(count);\r\n    numberOfContainers.map((item, index) => {\r\n      item.containerList.map((container) => {\r\n        if (container.selected) {\r\n          count++;\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n          //setShowPopover({ showPopover: true, event: \"\" });\r\n        } else {\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <IonBadge className=\"blueBg\"> {number}</IonBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    numberOfContainers: state.Cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    updateCartNumber: (item: any) => {\r\n      Store.dispatch({\r\n        type: reduxActions.UPDATE_VARIABLE,\r\n        payLoad: { variableName: \"cartNumber\", value: item },\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartNumber);\r\n","import { IonCard, IonCardContent, IonLabel } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport Icon from \"./Icon\";\r\nimport \"./ContainerCard.scss\";\r\ninterface stateProps {\r\n  containerItem;\r\n  containerClick?: (item, index) => void;\r\n  index?;\r\n}\r\ninterface ownProps {}\r\ntype containerCardProps = stateProps & ownProps;\r\n\r\nconst ContainerCard: React.FC<containerCardProps> = ({\r\n  containerItem,\r\n  containerClick,\r\n  index,\r\n}) => {\r\n  var contanerIconProps = {\r\n    name: \"container\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    styleProps: { zoom: 2.8 },\r\n  };\r\n\r\n  var locationIcon = {\r\n    name: \"locationblue-icon\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    zoom: 1.8,\r\n  };\r\n  return (\r\n    <IonCard\r\n      className={\r\n        containerItem.selected\r\n          ? \"outer-card boxShadow \"\r\n          : \"outer-card lightShadow\"\r\n      }\r\n      onClick={() => containerClick(containerItem, index)}\r\n    >\r\n      <IonCardContent>\r\n        <div className=\"container-card\">\r\n          <div className=\"twoItems borderBottom\">\r\n            <div className=\"eachItemLeft\">\r\n              <div className=\"container-icon\">\r\n                <Icon iconProps={contanerIconProps} />\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  <div className=\"container-num\">\r\n                    {containerItem.container_number}\r\n                  </div>\r\n                </span>\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  <div className=\"container-num\">{containerItem.weight}</div>\r\n                </span>\r\n              </div>\r\n              <div className=\"location-info\">\r\n                <div className=\"location-icon\">\r\n                  <span className=\"decl-number\">\r\n                    <Icon iconProps={locationIcon} />\r\n                  </span>\r\n                </div>\r\n                {/* </div>\r\n              <div className=\"decl-info\"> */}\r\n                <div className=\"decl-info\">\r\n                  <span className=\"location-label\">\r\n                    <div className=\"container-num\">\r\n                      {containerItem.pickupLocation}\r\n                    </div>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"twoItems marginTop\">\r\n            <div className=\"eachItemLeft\">\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  {\" \"}\r\n                  <IonLabel class=\"gray-text\">Container weight</IonLabel>\r\n                </span>\r\n                <span className=\"decl-comments\">\r\n                  {containerItem.consigneeCode}\r\n                  {/* {item.consigneeDetails} */}\r\n                </span>\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  {\" \"}\r\n                  <IonLabel class=\"gray-text\">Storage Validity</IonLabel>\r\n                </span>\r\n                <span className=\"decl-comments\">\r\n                  {containerItem.orderValidity}\r\n                  {/* {item.consigneeDetails} */}\r\n                </span>\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  {\" \"}\r\n                  <IonLabel class=\"gray-text\">Hold Authority</IonLabel>\r\n                </span>\r\n                <span className=\"decl-comments\">\r\n                  {containerItem.consigneeDetails}\r\n                  {/* {item.consigneeDetails} */}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </IonCardContent>\r\n    </IonCard>\r\n  );\r\n};\r\nexport default ContainerCard;\r\n","import { IonLabel } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport \"./Badge.scss\";\r\n\r\ninterface BadgeProps {\r\n  status: any;\r\n}\r\n\r\nvar color;\r\nconst Badge: React.FC<BadgeProps> = ({ status }) => {\r\n  if (status === \"Pending\") {\r\n    color = \"warning\";\r\n  } else if (status === \"New\") {\r\n    color = \"#6AC672\";\r\n  } else if (status === \"Expired\") {\r\n    color = \"#E91818\";\r\n  } else if (status === \"Active\") {\r\n    color = \"#6AC672\";\r\n  }\r\n  return (\r\n    <div className=\"badge-shape\" style={{ backgroundColor: color }}>\r\n      <IonLabel className=\"badge-label\">{status}</IonLabel>\r\n    </div>\r\n  );\r\n};\r\nexport default Badge;\r\n","import {\r\n  IonRow,\r\n  IonCol,\r\n  IonButton,\r\n  IonIcon,\r\n  IonSearchbar,\r\n  IonLabel,\r\n  IonSegment,\r\n  IonSegmentButton,\r\n  IonInput,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { arrowBackOutline } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { setSearchText } from \"../../../data/sessions/sessions.actions\";\r\nimport { TextInputType } from \"../../../util/DataTypes\";\r\nimport { getPatternValue, isValid } from \"../../../util/Utilities\";\r\n\r\ninterface SearchCompoProps {\r\n  clearText?: () => void;\r\n  setSegment?: (name) => void;\r\n  selectedSegment?: any;\r\n  searchForResult?: (text, segment?) => void;\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n  setError?: any;\r\n}\r\nconst SearchCompo: React.FC<SearchCompoProps> = ({\r\n  clearText,\r\n  setSegment,\r\n  selectedSegment,\r\n  searchForResult,\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n  setError,\r\n}) => {\r\n  let history = useHistory();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [validation, setvalidation] = useState(false);\r\n\r\n  const checkKey = (e) => {\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n\r\n    if (e.target.pattern && selectedSegment === \"declaration\") {\r\n      console.log(888888);\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    setSearchText(val);\r\n    //if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IonRow className=\"search-bar-row\">\r\n        <IonCol\r\n          size=\"1\"\r\n          className=\"back-button\"\r\n          onClick={() => {\r\n            console.log(\"eee\");\r\n            //backInSearchClick(false);\r\n            history.goBack();\r\n          }}\r\n        >\r\n          <IonButton fill=\"clear\">\r\n            <IonIcon src={arrowBackOutline} className=\"back-arrow\" />\r\n            {/* <IonBackButton defaultHref=\"/decl\" /> */}\r\n          </IonButton>\r\n        </IonCol>\r\n        <IonCol>\r\n          {/* <IonSearchbar\r\n            className=\"search\"\r\n            placeholder={`search with ${selectedSegment} number`}\r\n            value={searchText}\r\n            onIonChange={(e) => setSearchText(e.detail.value!)}\r\n            //cancelButtonText=\"Clear\"\r\n            cancelButtonText=\"Custom Cancel\"\r\n            onBlur={() => searchForResult(searchText, selectedSegment)}\r\n          ></IonSearchbar> */}\r\n          <IonInput\r\n            name={name}\r\n            type={type}\r\n            value={searchText}\r\n            spellCheck={false}\r\n            autocapitalize=\"off\"\r\n            //readonly={readonly}\r\n            onKeyDown={checkKey}\r\n            onIonChange={onInpChange}\r\n            clearInput={true}\r\n            required={required}\r\n            autocomplete=\"off\"\r\n            pattern={pattern}\r\n            placeholder={`search with ${selectedSegment} number`}\r\n            className=\"textInput search\"\r\n            onIonBlur={() => searchForResult(searchText, selectedSegment)}\r\n            maxlength={max}\r\n            minlength={max}\r\n            readonly={readonly ? readonly : false}\r\n          >\r\n            {/* {icon && (\r\n            <Icon iconProps={icon} />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )} */}\r\n          </IonInput>\r\n          {validation && description && (\r\n            <IonText color=\"danger\" className=\"validation-message\">\r\n              <IonLabel className=\"ion-padding-start validation-message\">\r\n                {description}\r\n              </IonLabel>\r\n            </IonText>\r\n          )}\r\n        </IonCol>\r\n        <IonCol\r\n          size=\"1.5\"\r\n          className=\"clear-text\"\r\n          onClick={() => {\r\n            clearText();\r\n            setSearchText(\"\");\r\n          }}\r\n        >\r\n          Clear\r\n        </IonCol>\r\n      </IonRow>\r\n      <IonRow className=\"search-crite\">\r\n        <IonCol size=\"2\">\r\n          <IonLabel className=\"crite-label\">Select a Criteria</IonLabel>\r\n        </IonCol>\r\n        <IonCol>\r\n          <IonSegment\r\n            onIonChange={(e) => {\r\n              setSegment(e.detail.value);\r\n              //searchForResult(searchText, e.detail.value);\r\n              setSearchText(\"\");\r\n            }}\r\n            value={selectedSegment}\r\n          >\r\n            <IonSegmentButton value=\"declaration\">\r\n              <IonLabel>Declaration number</IonLabel>\r\n            </IonSegmentButton>\r\n            <IonSegmentButton value=\"container\" className=\"second-segment\">\r\n              <IonLabel>Container number</IonLabel>\r\n            </IonSegmentButton>\r\n          </IonSegment>\r\n        </IonCol>\r\n      </IonRow>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchCompo;\r\n","import {\r\n  IonBackButton,\r\n  IonButton,\r\n  IonButtons,\r\n  IonCard,\r\n  IonCardContent,\r\n  IonCol,\r\n  IonContent,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonModal,\r\n  IonPage,\r\n  IonRow,\r\n  IonSearchbar,\r\n  IonSegment,\r\n  IonSegmentButton,\r\n} from \"@ionic/react\";\r\nimport {\r\n  arrowBack,\r\n  arrowBackOutline,\r\n  arrowBackSharp,\r\n  arrowUp,\r\n} from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Badge from \"../../../components/Badge/Badge\";\r\nimport ContainerCard from \"../../../components/ContainerCard\";\r\nimport Footer from \"../../../components/Footer/Footer\";\r\nimport Icon from \"../../../components/Icon\";\r\nimport * as reduxActions from \"../../../redux/actionTypes/AllActionTypes\";\r\nimport Store from \"../../../redux/Store\";\r\nimport * as EndPointApi from \"../../../services/EndPointApi\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport CenterFooterButton from \"../../CenterFooterButton\";\r\nimport \"./DeclSearch.scss\";\r\nimport SearchCompo from \"./SearchCompo\";\r\n\r\ninterface DeclSearchProps {\r\n  onclickEvent?: (openStatus) => void;\r\n  allStoreDeclarations: any;\r\n  updateBoesInCart;\r\n  location;\r\n  updateContainersInCart;\r\n}\r\nconst DeclSearch: React.FC<DeclSearchProps> = (\r\n  props,\r\n  {\r\n    onclickEvent,\r\n    allStoreDeclarations,\r\n    updateBoesInCart,\r\n    updateContainersInCart,\r\n  }\r\n) => {\r\n  var count = 0;\r\n  var allDecl = props.allStoreDeclarations;\r\n  console.log(allDecl);\r\n  const [selectedSegment, setselectedSegment] = useState(props.location.state);\r\n  const [apiResult, setapiResult] = useState<any>([]);\r\n  // var text={`Please search to get the ${selectedSegment} number results`}\r\n  //var t = {`search with ${selectedSegment} number`}\r\n  const [warningMessage, setwarningMessage] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n  const contanerIconProps = {\r\n    name: \"container\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    styleProps: { zoom: 2.8 },\r\n  };\r\n\r\n  async function searchForResult(searchText, segment?) {\r\n    var response;\r\n    setapiResult([]);\r\n    var param;\r\n    if (segment === \"declaration\") {\r\n      param =\r\n        \"pgSize=10&pgNo=0&option=ALL&locale=en&bookingNumber=\" + searchText;\r\n    } else {\r\n      param =\r\n        \"pgSize=10&pgNo=0&option=ALL&locale=en&containerNumber=\" + searchText;\r\n    }\r\n    if (searchText) {\r\n      response = await EndPointApi.fetchAllDeclaration(\r\n        EndPointURL.declarationUrl + param\r\n      );\r\n      console.log(response);\r\n\r\n      if (!response?.success) {\r\n        console.log(response, response?.data?.elements?.length);\r\n        setwarningMessage(response?.data?.message);\r\n      }\r\n      if (response?.data?.elements?.length > 0) {\r\n        console.log(response);\r\n        setwarningMessage(\"\");\r\n        setapiResult(response?.data?.elements);\r\n      } else {\r\n        setwarningMessage(\"No Result found, search with another number\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function cardClicked(item) {\r\n    allDecl.forEach((element, index) => {\r\n      if (item.referenceNumber === element.referenceNumber) {\r\n        allDecl[index].currentSelection = true;\r\n        allDecl[index].containerList.index = index;\r\n        element.containerList.forEach((container) => {\r\n          //container.\r\n        });\r\n        props.updateBoesInCart(allDecl);\r\n        history.push(\"/container\", allStoreDeclarations);\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateContainerInCart(item) {\r\n    console.log(item);\r\n    item.selected = true;\r\n    // allDecl[index].selectedNumber = containerList[index]\r\n    //       .selectedNumber\r\n    //       ? containerList[index].selectedNumber\r\n    //       : 0;\r\n    //     containerList[index].selectedNumber =\r\n    //       containerList[index].selectedNumber + 1;\r\n\r\n    allDecl.map((element, index) => {\r\n      if (element.referenceNumber === item.boeNumber) {\r\n        allDecl[index].selectedNumber = allDecl[index].selectedNumber\r\n          ? allDecl[index].selectedNumber\r\n          : 0;\r\n        allDecl[index].selectedNumber = allDecl[index].selectedNumber + 1;\r\n        count = item.selectedNumber;\r\n      }\r\n    });\r\n    props.updateContainersInCart(item);\r\n    history.push(\"/containerCart\");\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <SearchCompo\r\n          setSegment={(val) => {\r\n            setselectedSegment(val);\r\n            searchForResult(\"\");\r\n          }}\r\n          selectedSegment={selectedSegment}\r\n          searchForResult={searchForResult}\r\n          clearText={() => setwarningMessage(\"\")}\r\n          name={\"declNumber\"}\r\n          value={\"form.declNumber\"}\r\n          label=\"Declaration Number\"\r\n          errors={\"errors.declNumber\"}\r\n          type=\"text\"\r\n          required={true}\r\n          onChange={(val) => {\r\n            setselectedSegment(val);\r\n            searchForResult(\"\");\r\n          }}\r\n          datatype=\"TEXT\"\r\n          placeholder=\"\"\r\n          //icon={icon.declNumber}\r\n          //onBlur={onBlur}\r\n          pattern=\"###-########-###\"\r\n          description=\" Format xxx-yyyyyyyy-zz\"\r\n        />\r\n      </IonHeader>\r\n      <IonContent className=\"search-lense1\">\r\n        {(apiResult.length === 0 || warningMessage !== \"\") && (\r\n          <IonRow className=\"search-lense\">\r\n            <IonCol className=\"search-body-text\">\r\n              {warningMessage && (\r\n                <div className=\"warning-message\">{warningMessage}</div>\r\n              )}\r\n              {warningMessage === \"\" && (\r\n                <IonLabel>\r\n                  {\" \"}\r\n                  Please search to get the {selectedSegment} number results\r\n                </IonLabel>\r\n              )}\r\n            </IonCol>\r\n          </IonRow>\r\n        )}\r\n        {apiResult.map((element, index) => (\r\n          <>\r\n            {selectedSegment === \"container\" ? (\r\n              <div className=\"container-list\">\r\n                {element?.containerList?.map((item, index) => {\r\n                  return (\r\n                    <ContainerCard\r\n                      containerItem={item}\r\n                      key={index}\r\n                      containerClick={() => updateContainerInCart(item)}\r\n                      // index={currentDecl?.containerList.index}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <IonCard\r\n                key={index}\r\n                className={\r\n                  element.selected\r\n                    ? \"outer-card boxShadow \"\r\n                    : \"outer-card lightShadow\"\r\n                }\r\n                onClick={() => cardClicked(element)}\r\n              >\r\n                {\" \"}\r\n                <IonCardContent>\r\n                  <div className=\"container-card\">\r\n                    {/* <div className=\"list-logo\">\r\n                              <RoundedAvatar\r\n                                color={color}\r\n                                name={item.comments}\r\n                              />\r\n                            </div> */}\r\n                    <div className=\"twoItems borderBottom\">\r\n                      <div className=\"eachItemLeft\">\r\n                        <div className=\"decl-info\">\r\n                          <span className=\"decl-number\">\r\n                            <IonLabel class=\"gray-text\">Declaration#</IonLabel>\r\n                          </span>\r\n                          <span className=\"decl-comments\">\r\n                            {element.referenceNumber}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"middle-item\">\r\n                        <div className=\"dov\">\r\n                          <span className=\"\">\r\n                            {/* <Icon\r\n                                        iconProps={this.contanerIconProps}\r\n                                      /> */}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"eachItemRight\">\r\n                        <div className=\"dov\">\r\n                          <span className=\"dov-text\">\r\n                            <IonLabel class=\"gray-text\">\r\n                              Deliver Order validity\r\n                            </IonLabel>\r\n                          </span>\r\n                          <span className=\"dov-number\">\r\n                            {element.deliveryOrderValidity}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      {/* </div> */}\r\n                    </div>\r\n                    <div className=\"twoItems\">\r\n                      <div className=\"eachItemLeft\">\r\n                        <div className=\"decl-info\">\r\n                          <span className=\"decl-number\">\r\n                            {\" \"}\r\n                            <IonLabel class=\"gray-text\">Consignee</IonLabel>\r\n                          </span>\r\n                          <span className=\"decl-comments\">\r\n                            {element.consigneeDetails}\r\n                            {/* {item.consigneeDetails} */}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"middle-item\">\r\n                        <div className=\"dov\">\r\n                          <span className=\"\">\r\n                            <Icon iconProps={contanerIconProps} />\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"eachItemRight\">\r\n                        <div className=\"secondRow\">\r\n                          <div className=\"dov\">\r\n                            <span className=\"dov-number\">\r\n                              {element.containerList.length} Nos.\r\n                            </span>\r\n                            {element.selectedNumber > 0 && (\r\n                              <span className=\"dov-selected-number\">\r\n                                {element.selectedNumber} selected.\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"secondRow\">\r\n                          <div className=\"badgeItem\">\r\n                            <div className=\"dov\">\r\n                              <span className=\"\">\r\n                                <Badge status={element.status} />\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </IonCardContent>\r\n              </IonCard>\r\n            )}\r\n          </>\r\n        ))}\r\n        {apiResult.length > 0 && (\r\n          <CenterFooterButton\r\n            iconType=\"cart\"\r\n            //clickEvent={goToContainerCart}\r\n          />\r\n        )}\r\n      </IonContent>\r\n      {apiResult.length > 0 && <Footer />}\r\n      {/* </IonModal> */}\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  console.log(\"chnageddddd======\");\r\n  return {\r\n    allStoreDeclarations: state.Cart,\r\n    cartNumber: state.VariableValues,\r\n    agent: state.CheckUserStatus.user.selectedAgent,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    addDeclarationToCart: (item: any) => {\r\n      Store.dispatch({\r\n        type: reduxActions.ADD_TO_CART,\r\n        payLoad: item,\r\n      });\r\n    },\r\n    updateContainersInCart: (item: any) => {\r\n      console.log(item);\r\n      Store.dispatch({\r\n        type: reduxActions.UPDATE_CONTAINER_IN_CART,\r\n        payLoad: item,\r\n      });\r\n    },\r\n    removeAllContainersInCart: () => {\r\n      Store.dispatch({ type: reduxActions.CLEAR_CART });\r\n    },\r\n    updateBoesInCart: (item) => {\r\n      console.log(item);\r\n      Store.dispatch({\r\n        type: reduxActions.UPDATE_BOE_IN_CART,\r\n        payLoad: item,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeclSearch);\r\n"],"sourceRoot":""}