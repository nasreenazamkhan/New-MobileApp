{"version":3,"sources":["components/Icon.tsx","components/Header.tsx","util/ClearReduxStore.js","components/Footer/Footer.tsx","pages/CenterFooterButton.tsx","components/CartNumber.tsx","components/Texts/InformationText.tsx","components/topMenu/TopMenu.tsx","components/ContainerCard.tsx","pages/Containers/Container.tsx"],"names":["Icon","props","classes","useStyles","propsIcon","iconProps","src","name","style","styleProps","className","class","slot","onClick","iconClick","iconName","fieldPlaceholder","console","log","createUseStyles","zoom12","zoom","slotEnd","right","bottom","disabledminus","fontSize","calenderMargin","zoom3","zoom2","slotStart","position","absolutePosition","lastIcon","Header","HeaderParam","actionType","setActionType","useState","search","check","close","home","info","userDetails","Store","getState","CheckUserStatus","user","checked","setChecked","checkedLabel","setCheckedLabel","backIconProps","useEffect","updateActionType","action","history","useHistory","back","e","customClick","customBack","backClick","goBack","myValue","agentHeader","height","paddingBottom","checkedProps","hidden","showChecked","fill","onIonChange","addContainerToCart","checkAndUncheckAll","detail","label","searchClick","icon","minWidth","infoClick","checkClick","push","ClearReduxStore","closeSharp","agents","value","selectedAgent","interface","async","data","url","EndPointURL","agentCode","agentType","endPointHeader","userName","userType","response","loginWithAgent","result","dataItems","success","accessToken","reduxActions","dispatch","activeCompanyCode","changedAgent","selectUserType","disabled","showAgent","length","backgroundColor","interfaceOptions","cssClass","map","item","index","key","agentName","type","LoginUserTypes","Footer","clickedOnMenuButton","path","connect","state","numberOfSelectedContainers","VariableValues","iconType","clickEvent","cartNumber","numberOfContainers","Cart","updateCartNumber","payLoad","variableName","number","setnumber","count","containerList","container","selected","InformationText","message","TopMenu","agentCodeoptions","setValue","topMenuProps","size","clickedOnTopMenu","paddingLeft","paddingRight","transform","rotate","id","selectedText","val","cancel-text","placeholder","list","opt","ContainerCard","containerItem","containerClick","container_number","weight","pickupLocation","consigneeCode","orderValidity","consigneeDetails","updateContainersInCart","addDeclarationToCart","currentDecl","setcurrentDecl","setShowChecked","currentSelection","topMenuItems","chevronDownOutline","updateContainerInCart","forEach","selectedNumber","boeNumber","locationProps"],"mappings":"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","file":"static/js/11.e5b4f13e.chunk.js","sourcesContent":["import React from \"react\";\nimport { IonIcon } from \"@ionic/react\";\nimport \"./Icon.css\";\nimport { createUseStyles } from \"react-jss\";\n\nexport default function Icon(props: any) {\n  const classes = useStyles();\n  var propsIcon = props.iconProps; // \"inputIcon\"\n  return (\n    <IonIcon\n      src={\"assets/icon/\" + propsIcon.name + \".svg\"}\n      style={propsIcon.styleProps}\n      className={\n        propsIcon.class\n          ? classes[propsIcon.class] + \" \" + propsIcon.class\n          : // : propsIcon.login\n            // ? classes[propsIcon.class]\n            // : propsIcon.slot === \"end\"\n            // ? classes[propsIcon.class]\n            \"\"\n      }\n      slot={propsIcon.slot}\n      onClick={() =>\n        propsIcon?.iconClick\n          ? propsIcon?.iconClick(props.iconName, props.fieldPlaceholder)\n          : console.log()\n      } //{() => console.log(1111)} //{propsIcon?.iconClick}\n    ></IonIcon>\n  );\n}\nconst useStyles = createUseStyles({\n  zoom12: {\n    zoom: 1.4,\n  },\n  // slotEnd: {\n  //   position: \"absolute\",\n  //   right: 0,\n  //   zoom: 1.5,\n  //   bottom: \"1px\",\n  // },\n  slotEnd: {\n    // position: \"absolute\",\n    right: 0,\n    // zoom: 1.5,\n    bottom: \"1px\",\n  },\n  disabledminus: {\n    fontSize: \"1.6rem\",\n    right: \"-5px\",\n    //position: \"absolute\",\n    zoom: 1.5,\n    //bottom: \"1px\",\n  },\n  calenderMargin: {\n    zoom: 1.4,\n    //marginRight: \"0.5rem\",\n  },\n  zoom3: {\n    zoom: 3,\n  },\n  zoom2: {\n    zoom: 2,\n  },\n  slotStart: {\n    position: \"absolute\",\n    zoom: 1.5,\n  },\n  absolutePosition: {\n    position: \"absolute\",\n  },\n  lastIcon: {\n    zoom: \"1.5\",\n    right: \"3px\",\n    position: \"relative\",\n  },\n});\n","import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { closeSharp, informationCircle, search } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClearReduxStore from \"../util/ClearReduxStore\";\r\nimport \"./Header.scss\";\r\nimport Icon from \"./Icon\";\r\nimport Store from \"../redux/Store\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport { loginWithAgent } from \"../services/EndPointApi\";\r\n\r\ninterface HeaderParam {\r\n  label?: string;\r\n  action?: string;\r\n  showAgent?: boolean;\r\n  agentHeader?: boolean;\r\n  customBack?: boolean;\r\n  searchClick?(e: any): void;\r\n  infoClick?(e: any): void;\r\n  checkClick?(e: any): void;\r\n  backClick?(e: any): void;\r\n  locationProps?: any;\r\n  checkedProps?: any;\r\n  customClick?(actionTYpe: string): void;\r\n  changedAgent?(): void;\r\n}\r\nconst Header: React.FC<HeaderParam> = (HeaderParam) => {\r\n  const [actionType, setActionType] = useState({\r\n    search: true,\r\n    check: true,\r\n    close: true,\r\n    home: true,\r\n    info: false,\r\n  });\r\n\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const [checkedLabel, setCheckedLabel] = useState(\"Select All\");\r\n  const backIconProps = {\r\n    name: \"back-arrow\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const homeIconProps = {\r\n    name: \"home-new\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const checkIconProps = {\r\n    name: \"Check\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n\r\n  function checkAndUncheckAll(checked) {\r\n    console.log(checked);\r\n    setChecked(checked);\r\n    if (checked) {\r\n      setCheckedLabel(\"Unselect All\");\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"checked\");\r\n    } else {\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"unchecked\");\r\n      setCheckedLabel(\"Select All\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateActionType(HeaderParam.action ? HeaderParam.action : \"none\");\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  const back = (e: any) => {\r\n    if (HeaderParam.customClick) HeaderParam.customClick(\"/containerCart\");\r\n    else {\r\n      if (HeaderParam.customBack) {\r\n        HeaderParam.backClick(e);\r\n      } else {\r\n        history.goBack();\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateActionType = (myValue: string) => {\r\n    if (myValue) {\r\n      if (myValue === \"search\") {\r\n        setActionType({\r\n          search: false,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"check\") {\r\n        setActionType({\r\n          search: true,\r\n          check: false,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"close\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: false,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"home\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: false,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"info\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function homeButtonClicked() {\r\n    if (HeaderParam.customClick) HeaderParam.customClick(\"/tabs/landing\");\r\n    else {\r\n      history.push(\"/tabs/landing\");\r\n      ClearReduxStore();\r\n    }\r\n  }\r\n\r\n  const selectUserType = async (e: any) => {\r\n    let data = e.detail.value;\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    var result = response.data.data.dataItems[0];\r\n    if (await response.success) {\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        result.user.activeCompanyCode\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n      HeaderParam.changedAgent\r\n        ? HeaderParam.changedAgent()\r\n        : console.log(\"changed\");\r\n    }\r\n  };\r\n\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface\",\r\n  };\r\n\r\n  return (\r\n    <IonHeader\r\n      style={HeaderParam.agentHeader ? { height: \"102px\" } : { height: \"10%\" }}\r\n    >\r\n      <IonToolbar className=\"header\">\r\n        <div\r\n          className=\"mainContainer\"\r\n          style={!HeaderParam.agentHeader ? { paddingBottom: 0 } : {}}\r\n        >\r\n          {HeaderParam.checkedProps ? (\r\n            <div\r\n              className=\"selectAllBg\"\r\n              hidden={!HeaderParam.checkedProps.showChecked}\r\n            >\r\n              <div>\r\n                <IonButton\r\n                  fill=\"clear\"\r\n                  onClick={(e) => {\r\n                    back(e);\r\n                  }}\r\n                >\r\n                  <Icon iconProps={backIconProps} />\r\n                </IonButton>\r\n              </div>\r\n              <div className=\"checkBoxContainer\">\r\n                <IonCheckbox\r\n                  className=\"checkBox\"\r\n                  checked={checked}\r\n                  onIonChange={(e) => checkAndUncheckAll(e.detail.checked)}\r\n                />\r\n              </div>\r\n              <div className=\"checkBoxLabelCol\">\r\n                <IonLabel className=\"checkBoxLabel\">{checkedLabel}</IonLabel>{\" \"}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"backArrow\">\r\n            {HeaderParam.label != \"Home\" && actionType.close ? (\r\n              <IonButton\r\n                fill=\"clear\"\r\n                onClick={(e) => {\r\n                  back(e);\r\n                }}\r\n              >\r\n                <Icon iconProps={backIconProps} />\r\n              </IonButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"header-label\">\r\n            {\" \"}\r\n            <IonText>{HeaderParam.label}</IonText>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <IonButton\r\n              hidden={actionType.search}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.searchClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={search}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.info}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.infoClick}\r\n            >\r\n              <IonIcon\r\n                src={\"assets/icon/\" + \"info-italic\" + \".svg\"}\r\n                slot=\"icon-only\"\r\n                // icon={informationCircle}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n               \r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.check}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.checkClick}\r\n            >\r\n              {/* <IonIcon slot=\"icon-only\" src=\"\" style={{minWidth:'30px'}}/> */}\r\n              <Icon iconProps={checkIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.home}\r\n              fill=\"clear\"\r\n              onClick={(e) => homeButtonClicked()}\r\n            >\r\n              <Icon iconProps={homeIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.close}\r\n              fill=\"clear\"\r\n              onClick={(e) => {\r\n                back(e);\r\n              }}\r\n            >\r\n              <IonIcon slot=\"icon-only\" icon={closeSharp} />\r\n            </IonButton>\r\n            <IonButton hidden={HeaderParam.action !== \"\"} fill=\"clear\">\r\n              <IonIcon />\r\n            </IonButton>\r\n          </div>\r\n        </div>\r\n        {userDetails.agents && HeaderParam.agentHeader && (\r\n          <IonToolbar className=\"agent-code-header\">\r\n            <IonSelect\r\n              value={userDetails.selectedAgent}\r\n              interface=\"popover\"\r\n              onIonChange={(e) => selectUserType(e)}\r\n              disabled={\r\n                !HeaderParam.showAgent || userDetails.agents.length == 1\r\n              }\r\n              style={\r\n                !HeaderParam.showAgent ? { backgroundColor: \"#DDF1FF\" } : {}\r\n              }\r\n              interfaceOptions={agentCodeoptions}\r\n            >\r\n              {userDetails.agents.map((item, index) => {\r\n                return (\r\n                  <IonSelectOption\r\n                    value={item}\r\n                    key={index}\r\n                    className=\"select-agent-opt\"\r\n                  >\r\n                    {item.agentCode + \"-\" + item.agentName}\r\n                  </IonSelectOption>\r\n                );\r\n              })}\r\n            </IonSelect>\r\n            <IonIcon\r\n              src=\"assets/icon/arrow-down.svg\"\r\n              className=\"arrow-down-icon\"\r\n              hidden={!HeaderParam.showAgent || userDetails.agents.length == 1}\r\n            />\r\n          </IonToolbar>\r\n        )}\r\n        {/* </IonImg> */}\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  );\r\n};\r\nexport default Header;\r\n","import Store from \"../redux/Store\";\nimport * as LoginUserTypes from \"../redux/actionTypes/AllActionTypes\";\n\nexport default function ClearReduxStore() {\n  Store.dispatch({ type: LoginUserTypes.BOOK_TRUCK_CLEAR });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_CONTAINERS });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_TRUCK });\n  Store.dispatch({ type: LoginUserTypes.CLEAR_CART });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_DECLARATIONS });\n}\n","import { IonButton, IonIcon, IonLabel, IonTabButton } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport \"./Footer.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Footer() {\r\n  let history = useHistory();\r\n\r\n  function clickedOnMenuButton(path) {\r\n    history.push(path);\r\n  }\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div\r\n        className=\"footer-button\"\r\n        onClick={() => clickedOnMenuButton(\"/tabs/landing\")}\r\n      >\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n        <IonLabel className=\"footer-label\">Home</IonLabel>\r\n      </div>\r\n      <div\r\n        className=\"footer-button\"\r\n        onClick={() => clickedOnMenuButton(\"/tabs/addresses\")}\r\n      >\r\n        <IonIcon src=\"assets/icon/address.svg\" className=\"footer-button\" />\r\n        <IonLabel className=\"footer-label\">Addresses</IonLabel>\r\n      </div>\r\n      <div className=\"footer-button\">\r\n        {/* <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" /> */}\r\n      </div>\r\n      <div\r\n        className=\"footer-button\"\r\n        onClick={() => clickedOnMenuButton(\"/tabs/status\")}\r\n      >\r\n        <IonIcon src=\"assets/icon/status.svg\" className=\"footer-button\" />\r\n        <IonLabel className=\"footer-label\">status</IonLabel>\r\n      </div>\r\n      <div\r\n        className=\"footer-button\"\r\n        onClick={() => clickedOnMenuButton(\"/tabs/profile\")}\r\n      >\r\n        <IonIcon src=\"assets/icon/profile.svg\" className=\"footer-button\" />\r\n        <IonLabel className=\"footer-label\">profile</IonLabel>\r\n      </div>\r\n      {/* <IonButton className=\"footer-button\" fill=\"clear\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n      </IonButton> */}\r\n\r\n      {/* ------------------------------------------------------ */}\r\n      {/* <IonTabButton className=\"footer-button\" href=\"/tabs/landing\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n        <IonLabel>Home</IonLabel>\r\n      </IonTabButton>\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/addresses\">\r\n        <IonIcon src=\"assets/icon/address.svg\" className=\"footer-button\" />\r\n        <IonLabel>Addresses</IonLabel>\r\n      </IonTabButton>\r\n      <IonTabButton className=\"footer-button\"></IonTabButton>\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/status\">\r\n        <IonIcon src=\"assets/icon/status.svg\" className=\"footer-button\" />\r\n        <IonLabel>Status</IonLabel>\r\n      </IonTabButton>{\" \"}\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/profile\">\r\n        <IonIcon\r\n          src=\"assets/icon/profile.svg\"\r\n          className=\"footer-button button\"\r\n        />\r\n        <IonLabel>Profile</IonLabel>\r\n      </IonTabButton> */}\r\n    </div>\r\n  );\r\n}\r\n","import { IonIcon } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CartNumber from \"../components/CartNumber\";\r\nimport \"./CenterFooterButton.scss\";\r\n\r\ninterface CenterFooterButtonProps {\r\n  iconType;\r\n  clickEvent?: () => void;\r\n  numberOfSelectedContainers;\r\n}\r\n\r\nconst CenterFooterButton: React.FC<CenterFooterButtonProps> = ({\r\n  iconType,\r\n  clickEvent,\r\n  numberOfSelectedContainers,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"menu-button-div\"\r\n      onClick={() => {\r\n        if (numberOfSelectedContainers.cartNumber > 0 || iconType === \"menu\")\r\n          clickEvent();\r\n      }}\r\n    >\r\n      <div className=\"menu-button\">\r\n        {iconType === \"menu\" ? (\r\n          <>\r\n            <hr />\r\n            <hr />\r\n            <hr />\r\n          </>\r\n        ) : (\r\n          iconType === \"cart\" && (\r\n            <>\r\n              <IonIcon\r\n                src=\"assets/icon/container-crane.svg\"\r\n                className=\"button\"\r\n              />\r\n              <CartNumber />\r\n            </>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    numberOfSelectedContainers: state.VariableValues,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CenterFooterButton);\r\n","import { IonBadge, IonPopover } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Store from \"../redux/Store\";\r\nimport \"./CartNumber.scss\";\r\nimport * as reduxActions from \"../redux/actionTypes/AllActionTypes\";\r\n\r\ninterface stateProps {}\r\n\r\ninterface ownProps {\r\n  numberOfContainers;\r\n  updateCartNumber;\r\n}\r\n\r\ntype cartNumberProps = stateProps & ownProps;\r\nconst CartNumber: React.FC<cartNumberProps> = ({\r\n  numberOfContainers,\r\n  updateCartNumber,\r\n}) => {\r\n  const [number, setnumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    countContainerNumberSelected(0);\r\n  }, [numberOfContainers]);\r\n  function countContainerNumberSelected(count) {\r\n    setnumber(count);\r\n    numberOfContainers.map((item, index) => {\r\n      item.containerList.map((container) => {\r\n        if (container.selected) {\r\n          count++;\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n          //setShowPopover({ showPopover: true, event: \"\" });\r\n        } else {\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <IonBadge className=\"blueBg\"> {number}</IonBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    numberOfContainers: state.Cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    updateCartNumber: (item: any) => {\r\n      Store.dispatch({\r\n        type: reduxActions.UPDATE_VARIABLE,\r\n        payLoad: { variableName: \"cartNumber\", value: item },\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartNumber);\r\n","import React from \"react\";\r\nimport \"./InformationText.scss\";\r\n\r\ninterface informationTextProps {\r\n  message;\r\n}\r\nconst InformationText: React.FC<informationTextProps> = ({ message }) => {\r\n  return <div className=\"container-count\">Displaying {message}</div>;\r\n};\r\nexport default InformationText;\r\n","import {\r\n  IonButton,\r\n  IonIcon,\r\n  IonRow,\r\n  IonSelect,\r\n  IonSelectOption,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TopMenu.scss\";\r\n\r\nexport default function TopMenu(props) {\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface-class\",\r\n  };\r\n  const [value, setValue] = useState<any>({});\r\n\r\n  return (\r\n    <IonRow className=\"horizontal-scroll\">\r\n      <div className=\"filter-buttons\">\r\n        {props.topMenuProps.map((item, index) => (\r\n          <div key={index}>\r\n            {item.type == \"button\" && (\r\n              <IonButton\r\n                className=\"circ-button\"\r\n                size=\"small\"\r\n                onClick={() => item.clickedOnTopMenu()}\r\n              >\r\n                {item.icon && <IonIcon icon={item.icon} slot={item.slot} />}\r\n                {item.src && (\r\n                  <IonIcon\r\n                    slot={item.slot}\r\n                    src={\"/assets/icon/\" + item.src + \".svg\"}\r\n                    style={{\r\n                      fontSize: item.size,\r\n                      paddingLeft: \"5px\",\r\n                      paddingRight: \"5px\",\r\n                      transform:item.rotate\r\n                    }}\r\n                  />\r\n                )}\r\n                {item.name && item.name}\r\n              </IonButton>\r\n            )}\r\n            {item.type == \"dropDown\" && (\r\n              <div id=\"drop-down-css\">\r\n                <fieldset>\r\n                  <IonSelect\r\n                    value={value}\r\n                    selectedText={value.label}\r\n                    interface=\"popover\"\r\n                    onIonChange={(e) => {\r\n                      let val = e.detail.value;\r\n                      setValue(val);\r\n                      console.log(item.selected);\r\n                      item.clickedOnTopMenu(val);\r\n                    }}\r\n                    cancel-text\r\n                    placeholder={item.name}\r\n                    interfaceOptions={agentCodeoptions}\r\n                    className=\"circ-button\"\r\n                  >\r\n                    {item.list.map((opt, index) => {\r\n                      return (\r\n                        <IonSelectOption\r\n                          value={opt}\r\n                          key={index}\r\n                          className=\"select-opt\"\r\n                        >\r\n                          {opt.label}\r\n                        </IonSelectOption>\r\n                      );\r\n                    })}\r\n                  </IonSelect>\r\n                </fieldset>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </IonRow>\r\n  );\r\n}\r\n","import { IonCard, IonCardContent, IonLabel } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport Icon from \"./Icon\";\r\nimport \"./ContainerCard.scss\";\r\ninterface stateProps {\r\n  containerItem;\r\n  containerClick?: (item, index) => void;\r\n  index?;\r\n}\r\ninterface ownProps {}\r\ntype containerCardProps = stateProps & ownProps;\r\n\r\nconst ContainerCard: React.FC<containerCardProps> = ({\r\n  containerItem,\r\n  containerClick,\r\n  index,\r\n}) => {\r\n  var contanerIconProps = {\r\n    name: \"container\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    styleProps: { zoom: 2.8 },\r\n  };\r\n\r\n  var locationIcon = {\r\n    name: \"locationblue-icon\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    zoom: 1.8,\r\n  };\r\n  return (\r\n    <IonCard\r\n      className={\r\n        containerItem.selected\r\n          ? \"outer-card boxShadow \"\r\n          : \"outer-card lightShadow\"\r\n      }\r\n      onClick={() => containerClick(containerItem, index)}\r\n    >\r\n      <IonCardContent>\r\n        <div className=\"container-card\">\r\n          <div className=\"twoItems borderBottom\">\r\n            <div className=\"eachItemLeft\">\r\n              <div className=\"container-icon\">\r\n                <Icon iconProps={contanerIconProps} />\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  <div className=\"container-num\">\r\n                    {containerItem.container_number}\r\n                  </div>\r\n                </span>\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  <div className=\"container-num\">{containerItem.weight}</div>\r\n                </span>\r\n              </div>\r\n              <div className=\"location-info\">\r\n                <div className=\"location-icon\">\r\n                  <span className=\"decl-number\">\r\n                    <Icon iconProps={locationIcon} />\r\n                  </span>\r\n                </div>\r\n                {/* </div>\r\n              <div className=\"decl-info\"> */}\r\n                <div className=\"decl-info\">\r\n                  <span className=\"location-label\">\r\n                    <div className=\"container-num\">\r\n                      {containerItem.pickupLocation}\r\n                    </div>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"twoItems marginTop\">\r\n            <div className=\"eachItemLeft\">\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  {\" \"}\r\n                  <IonLabel class=\"gray-text\">Container weight</IonLabel>\r\n                </span>\r\n                <span className=\"decl-comments\">\r\n                  {containerItem.consigneeCode}\r\n                  {/* {item.consigneeDetails} */}\r\n                </span>\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  {\" \"}\r\n                  <IonLabel class=\"gray-text\">Storage Validity</IonLabel>\r\n                </span>\r\n                <span className=\"decl-comments\">\r\n                  {containerItem.orderValidity}\r\n                  {/* {item.consigneeDetails} */}\r\n                </span>\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  {\" \"}\r\n                  <IonLabel class=\"gray-text\">Hold Authority</IonLabel>\r\n                </span>\r\n                <span className=\"decl-comments\">\r\n                  {containerItem.consigneeDetails}\r\n                  {/* {item.consigneeDetails} */}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </IonCardContent>\r\n    </IonCard>\r\n  );\r\n};\r\nexport default ContainerCard;\r\n","import {\r\n  IonCard,\r\n  IonCardContent,\r\n  IonContent,\r\n  IonItem,\r\n  IonLabel,\r\n  IonPage,\r\n} from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContainerCard from \"../../components/ContainerCard\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport Header from \"../../components/Header\";\r\nimport Icon from \"../../components/Icon\";\r\n//import TopMenu from \"../../components/TopMenu\";\r\nimport TopMenu from \"../../components/topMenu/TopMenu\";\r\nimport Store from \"../../redux/Store\";\r\nimport CenterFooterButton from \"../CenterFooterButton\";\r\nimport \"./Container.scss\";\r\nimport * as reduxActions from \"../../redux/actionTypes/AllActionTypes\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InformationText from \"../../components/Texts/InformationText\";\r\nimport { chevronDownOutline } from \"ionicons/icons\";\r\n\r\ninterface stateProps {\r\n  props;\r\n}\r\n\r\ninterface ownProps {\r\n  containerList;\r\n  updateContainersInCart: (item) => void;\r\n}\r\nvar count = 0;\r\ntype containerProps = stateProps & ownProps;\r\nconst Container: React.FC<containerProps> = ({\r\n  containerList,\r\n  props,\r\n  updateContainersInCart,\r\n}) => {\r\n  const [currentDecl, setcurrentDecl] = useState<any>();\r\n\r\n  const [showChecked, setShowChecked] = useState(false);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    containerList.map((item, index) => {\r\n      if (item.currentSelection) {\r\n        setcurrentDecl(item);\r\n      }\r\n    });\r\n  }, []);\r\n  useEffect(() => {}, [containerList]);\r\n  var topMenuItems = [\r\n    {\r\n      name: \"\",\r\n      src: \"filter\",\r\n      styleProps: { zoom: 1.3 },\r\n      type: \"button\",\r\n      slot: \"start\",\r\n      clickedOnTopMenu: () => console.log(\"clicked1\"),\r\n    },\r\n\r\n    {\r\n      name: \"Storage Validity\",\r\n      src: \"filter-down-arrow\",\r\n      type: \"button\",\r\n      slot: \"start\",\r\n      size: \"0.7rem\",\r\n      clickedOnTopMenu: () => console.log(\"clicked4\"),\r\n    },\r\n    {\r\n      name: \"Pickup Location\",\r\n      src: \"filter-down-arrow\",\r\n      icon: chevronDownOutline,\r\n      slot: \"end\",\r\n      type: \"dropDown\",\r\n      list: [\r\n        { label: \"T1\", value: \"T1\" },\r\n        { label: \"T2\", value: \"T2\" },\r\n        { label: \"T3\", value: \"T3\" },\r\n        { label: \"Jebal Ali Area\", value: \"JEA\" },\r\n      ],\r\n      clickedOnTopMenu: () => console.log(\"clicked5\"),\r\n    },\r\n  ];\r\n\r\n  function updateContainerInCart(containerItem, index, checked?) {\r\n    var selectedNumber;\r\n    console.log(containerItem, index, checked);\r\n    if (checked) {\r\n      if (checked === \"checked\") {\r\n        currentDecl.containerList.forEach((item: any, index: number) => {\r\n          currentDecl.containerList[index].selected = true;\r\n        });\r\n      } else {\r\n        currentDecl.containerList.forEach((item: any, index: number) => {\r\n          currentDecl.containerList[index].selected = false;\r\n        });\r\n      }\r\n    } else {\r\n      containerItem.selected = !containerItem.selected;\r\n      if (containerItem.selected) {\r\n        setShowChecked(true);\r\n        containerList[index].selectedNumber = containerList[index]\r\n          .selectedNumber\r\n          ? containerList[index].selectedNumber\r\n          : 0;\r\n        containerList[index].selectedNumber =\r\n          containerList[index].selectedNumber + 1;\r\n      } else {\r\n        //setShowChecked(false)\r\n        containerList[index].selectedNumber =\r\n          containerList[index].selectedNumber - 1;\r\n        containerList[index].selected = false;\r\n      }\r\n      containerList.map((item, index) => {\r\n        count = item.selectedNumber;\r\n        if (count === 0) setShowChecked(false);\r\n      });\r\n    }\r\n    updateContainersInCart(containerItem);\r\n  }\r\n\r\n  function goToContainerCart() {\r\n    history.push(\"/containerCart\");\r\n  }\r\n  const checkedProps: any = {\r\n    showChecked: showChecked,\r\n    addContainerToCart: updateContainerInCart,\r\n  };\r\n  return (\r\n    <IonPage className=\"container\">\r\n      <Header\r\n        label={currentDecl?.containerList[0]?.boeNumber}\r\n        action=\"search\"\r\n        locationProps={props}\r\n        checkedProps={checkedProps}\r\n        //showAgent={true}\r\n        agentHeader={true}\r\n        searchClick={() => history.push(\"/openSearch\", \"container\")}\r\n      />\r\n\r\n      <IonContent className=\"container-Content\">\r\n        <TopMenu topMenuProps={topMenuItems} />\r\n        {currentDecl?.containerList?.length > 0 && (\r\n          <InformationText\r\n            message={`${currentDecl?.containerList?.length} containers`}\r\n          />\r\n        )}\r\n        <div className=\"container-list\">\r\n          {currentDecl?.containerList?.map((item, index) => {\r\n            return (\r\n              <ContainerCard\r\n                containerItem={item}\r\n                key={index}\r\n                containerClick={updateContainerInCart}\r\n                index={currentDecl?.containerList.index}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <CenterFooterButton iconType=\"cart\" clickEvent={goToContainerCart} />\r\n      </IonContent>\r\n      <Footer />\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    containerList: state.Cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    updateContainersInCart: (item: any) => {\r\n      console.log(item);\r\n      Store.dispatch({\r\n        type: reduxActions.UPDATE_CONTAINER_IN_CART,\r\n        payLoad: item,\r\n      });\r\n    },\r\n    addDeclarationToCart: (item: any) => {\r\n      console.log(item);\r\n      Store.dispatch({\r\n        type: reduxActions.ADD_TO_CART,\r\n        payLoad: item,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\r\n"],"sourceRoot":""}