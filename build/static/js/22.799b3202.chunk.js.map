{"version":3,"sources":["components/Icon.tsx","util/Utilities.ts","components/txtinput/TxtInput.tsx","pages/confirmDetails/ConfirmDetails.tsx"],"names":["Icon","props","classes","useStyles","propsIcon","iconProps","src","name","style","styleProps","className","class","slot","onClick","iconClick","iconName","fieldPlaceholder","console","log","createUseStyles","zoom12","zoom","slotEnd","right","bottom","disabledminus","fontSize","calenderMargin","zoom3","zoom2","slotStart","position","absolutePosition","lastIcon","isEmpty","data","trim","isValid","dataType","delimiter","replaceAll","RegExp","REGEX_MAP","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","length","validateEmail","mail","validatePhone","number","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","convertToMillSeconds","interval","timeParts","split","h","m","TxtInput","label","type","value","onChange","required","errors","datatype","description","placeholder","icon","onBlur","readonly","contactForm","max","setError","clearInput","keyDown","isClickable","validation","setvalidation","useState","width","padding","substring","includes","spellCheck","autocapitalize","onKeyDown","e","key","preventDefault","onIonChange","validate","val","target","replace","nameTest","autocomplete","onIonBlur","maxlength","minlength","expand","fill","color","ConfirmDetails","confirmDetailsProps","form","setForm","location","state","setvalidate","setErrors","addOrUpdateuserDetails","async","errs","firstName","lastName","email","mobileNumber","landLineNumber","confirmDetails","response","confirmUserDetails","EndPoints","success","history","push","direction","errorGeneral","message","handleChange","id","alt","noValidate","onSubmit","autoComplete","userName","arrowForwardOutline"],"mappings":"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","file":"static/js/22.799b3202.chunk.js","sourcesContent":["import React from \"react\";\nimport { IonIcon } from \"@ionic/react\";\nimport \"./Icon.css\";\nimport { createUseStyles } from \"react-jss\";\n\nexport default function Icon(props: any) {\n  const classes = useStyles();\n  var propsIcon = props.iconProps; // \"inputIcon\"\n  return (\n    <IonIcon\n      src={\"assets/icon/\" + propsIcon.name + \".svg\"}\n      style={propsIcon.styleProps}\n      className={\n        propsIcon.class\n          ? classes[propsIcon.class] + \" \" + propsIcon.class\n          : // : propsIcon.login\n            // ? classes[propsIcon.class]\n            // : propsIcon.slot === \"end\"\n            // ? classes[propsIcon.class]\n            \"\"\n      }\n      slot={propsIcon.slot}\n      onClick={() =>\n        propsIcon?.iconClick\n          ? propsIcon?.iconClick(props.iconName, props.fieldPlaceholder)\n          : console.log()\n      } //{() => console.log(1111)} //{propsIcon?.iconClick}\n    ></IonIcon>\n  );\n}\nconst useStyles = createUseStyles({\n  zoom12: {\n    zoom: 1.4,\n  },\n  // slotEnd: {\n  //   position: \"absolute\",\n  //   right: 0,\n  //   zoom: 1.5,\n  //   bottom: \"1px\",\n  // },\n  slotEnd: {\n    // position: \"absolute\",\n    right: 0,\n    // zoom: 1.5,\n    bottom: \"1px\",\n  },\n  disabledminus: {\n    fontSize: \"1.6rem\",\n    right: \"-5px\",\n    //position: \"absolute\",\n    zoom: 1.5,\n    //bottom: \"1px\",\n  },\n  calenderMargin: {\n    zoom: 1.4,\n    //marginRight: \"0.5rem\",\n  },\n  zoom3: {\n    zoom: 3,\n  },\n  zoom2: {\n    zoom: 2,\n  },\n  slotStart: {\n    position: \"absolute\",\n    zoom: 1.5,\n  },\n  absolutePosition: {\n    position: \"absolute\",\n  },\n  lastIcon: {\n    zoom: \"1.5\",\n    right: \"3px\",\n    position: \"relative\",\n  },\n});\n","import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number,length) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{\"+length+\"}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n","import { IonButton, IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport {\r\n  getPatternValue,\r\n  isValid,\r\n  validateEmail,\r\n  validateMobile,\r\n} from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n  setError?: any;\r\n  clearInput?: boolean;\r\n  keyDown? : any;\r\n  isClickable?:any\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n  setError,\r\n  clearInput,\r\n  keyDown,\r\n  isClickable\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  //const [error, seterror] = useState(\"\");\r\n  const checkKey = (e) => {\r\n    if(keyDown){\r\n      keyDown(e)\r\n    }\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (type === \"tel\" && setError) {\r\n      val = \"971\" + val.replace(/\\s/g, \"971\");\r\n      var nameTest = validateMobile(val, max * 1 + 3);\r\n      console.log(nameTest);\r\n      if (val != null) {\r\n        if (!nameTest) {\r\n          setError(\"Please Enter \" + max + \" digit number\");\r\n        } else {\r\n          setError(\"\");\r\n        }\r\n      }\r\n      console.log(\"tteeeelll\", val);\r\n    }\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      if (!validate) {\r\n        setError(\"Please Enter valid Mail id\");\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      console.log(validate);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={\r\n            type === \"tel\" && value?.substring(0, 3).includes(\"971\")\r\n              ? value.split(\"971\")[1]\r\n              : value\r\n          }\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={clearInput}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          minlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {!isClickable && icon && (\r\n            <Icon\r\n              iconProps={icon}\r\n              iconName={name}\r\n              fieldPlaceholder={placeholder}\r\n            />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n        {isClickable && icon &&(\r\n          <IonButton\r\n\r\n          className=\"icon-button\"\r\n\r\n          expand=\"full\"\r\n\r\n          fill=\"clear\"\r\n\r\n          onClick={() => icon.iconClick(name, placeholder)}\r\n\r\n        >\r\n\r\n          <Icon\r\n\r\n            iconProps={icon}\r\n\r\n            iconName={name}\r\n\r\n            fieldPlaceholder={placeholder}\r\n\r\n          />\r\n\r\n        </IonButton>\r\n        )}\r\n\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n","import {\r\n  IonContent,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonList,\r\n  IonPage,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { arrowForwardOutline } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport TxtInput from \"../../components/txtinput/TxtInput\";\r\nimport { confirmUserDetails } from \"../../services/EndPointApi\";\r\nimport { isEmpty } from \"../../util/Utilities\";\r\nimport * as EndPoints from \"../../util/EndPointURL\";\r\n\r\nimport \"./ConfirmDetails.scss\";\r\n\r\ninterface OwnProps extends RouteComponentProps {}\r\n\r\ninterface LoginProps extends OwnProps {}\r\n\r\nfunction ConfirmDetails(confirmDetailsProps) {\r\n  const [form, setForm] = useState(confirmDetailsProps.location.state);\r\n  const [validate, setvalidate] = useState();\r\n  const [errors, setErrors] = useState<any>({});\r\n\r\n  const addOrUpdateuserDetails = async () => {\r\n    let errs: any = {};\r\n    if (isEmpty(form.firstName)) {\r\n      errs.firstName = \"First Name is required\";\r\n    }\r\n    if (isEmpty(form.lastName)) {\r\n      errs.lastName = \"Last Name is required\";\r\n    }\r\n\r\n    if (isEmpty(form.email)) {\r\n      errs.email = \"Email is required\";\r\n    }\r\n    if (isEmpty(form.mobileNumber)) {\r\n      errs.mobileNumber = \"Mobile number is required\";\r\n    }\r\n    if (isEmpty(form.landLineNumber)) {\r\n      errs.landLineNumber = \"Phone number is required\";\r\n    }\r\n    // if (!validate) {\r\n    //   console.log(validate);\r\n    // } else\r\n    if (\r\n      form.firstName &&\r\n      form.lastName &&\r\n      form.email &&\r\n      form.mobileNumber &&\r\n      form.landLineNumber\r\n    ) {\r\n      form.confirmDetails = true;\r\n      var response = await confirmUserDetails(EndPoints.confirmDetailUrl, form);\r\n      //var result = response.data?.data?.dataItems[0];\r\n      if (response && response?.success) {\r\n        confirmDetailsProps.history.push(\"/tabs/\", { direction: \"none\" });\r\n      } else {\r\n        errs.errorGeneral = response?.data?.message || \"Error occured\";\r\n      }\r\n    }\r\n    setErrors(errs);\r\n  };\r\n\r\n  const handleChange = (e: any, value: any, validate: any) => {\r\n    setvalidate(validate);\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: value,\r\n    });\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n  };\r\n\r\n  return (\r\n    <IonPage id=\"profilePage\">\r\n      <IonContent>\r\n        <div className=\"main-container\">\r\n          <div className=\"login-logo\">\r\n            <img src=\"assets/img/dubai_trade_logo.png\" alt=\"Ionic logo\" />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <div className=\"login-box-header\"></div>\r\n            <form\r\n              noValidate\r\n              onSubmit={addOrUpdateuserDetails}\r\n              autoComplete=\"off\"\r\n            >\r\n              <IonList className=\"form-section\">\r\n                <div className=\"welcome-note\">\r\n                  Dear {form?.userName},\r\n                  <br />\r\n                  Welcome to DT Trucking.\r\n                  <br />\r\n                  <br />\r\n                  Kindly confirm your contact details in order to proceed with\r\n                  booking.\r\n                </div>\r\n\r\n                <TxtInput\r\n                  name={\"firstName\"}\r\n                  value={form?.firstName}\r\n                  label=\"First Name\"\r\n                  errors={errors.firstName}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  placeholder=\"First Name\"\r\n                />\r\n                <TxtInput\r\n                  name={\"lastName\"}\r\n                  value={form?.lastName}\r\n                  label=\"Last Name\"\r\n                  errors={errors.lastName}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Last Name\"\r\n                />\r\n                <TxtInput\r\n                  name={\"email\"}\r\n                  value={form?.email}\r\n                  label=\"Email\"\r\n                  errors={errors.email}\r\n                  type=\"email\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  description=\"Email Format abc@xyz.com\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <TxtInput\r\n                  name={\"mobileNumber\"}\r\n                  value={form?.mobileNumber}\r\n                  label=\"Mobile\"\r\n                  errors={errors.mobileNumber}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEL_NUM\"\r\n                  pattern=\"###-##-#######\"\r\n                  description=\"Tel Format 971-xx-xxxxxxx\"\r\n                  placeholder=\"Mobile\"\r\n                />\r\n                <TxtInput\r\n                  name={\"landLineNumber\"}\r\n                  value={form?.landLineNumber}\r\n                  label=\"Phone\"\r\n                  errors={errors.landLineNumber}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEL_NUM\"\r\n                  pattern=\"###-##-#######\"\r\n                  description=\"Tel Format 971-xx-xxxxxxx\"\r\n                  placeholder=\"Phone\"\r\n                />\r\n              </IonList>\r\n\r\n              <div className=\"\">\r\n                {errors?.errorGeneral && (\r\n                  <IonText\r\n                    color=\"danger\"\r\n                    className=\"validation-message genralError\"\r\n                  >\r\n                    <IonLabel className=\"ion-padding-start\">\r\n                      {errors?.errorGeneral}\r\n                    </IonLabel>\r\n                  </IonText>\r\n                )}\r\n              </div>\r\n              <div className=\"button-div\">\r\n                <div className=\"button-holder\" onClick={addOrUpdateuserDetails}>\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n\r\nexport default ConfirmDetails;\r\n"],"sourceRoot":""}