{"version":3,"sources":["components/Icon.tsx","components/Header.tsx","util/ClearReduxStore.js","util/Utilities.ts","components/txtinput/TxtInput.tsx","components/dropdownInput/DrpdownInput.tsx","util/Config.js","pages/MapView.js","pages/address/addAddress/AddNewAddress.tsx"],"names":["Icon","props","classes","useStyles","propsIcon","iconProps","src","name","style","styleProps","className","class","slot","onClick","iconClick","iconName","fieldPlaceholder","console","log","createUseStyles","zoom12","zoom","slotEnd","right","bottom","disabledminus","fontSize","calenderMargin","zoom3","zoom2","slotStart","position","absolutePosition","lastIcon","Header","HeaderParam","actionType","setActionType","useState","search","check","close","home","info","userDetails","Store","getState","CheckUserStatus","user","checked","setChecked","checkedLabel","setCheckedLabel","backIconProps","useEffect","updateActionType","action","history","useHistory","back","e","customClick","customBack","backClick","goBack","myValue","agentHeader","height","paddingBottom","checkedProps","hidden","showChecked","fill","onIonChange","addContainerToCart","checkAndUncheckAll","detail","label","searchClick","icon","minWidth","infoClick","checkClick","push","ClearReduxStore","closeSharp","agents","value","selectedAgent","interface","async","data","url","EndPointURL","agentCode","agentType","endPointHeader","userName","userType","response","loginWithAgent","result","dataItems","success","accessToken","reduxActions","dispatch","activeCompanyCode","changedAgent","selectUserType","disabled","showAgent","length","backgroundColor","interfaceOptions","cssClass","map","item","index","key","agentName","type","LoginUserTypes","isEmpty","trim","isValid","dataType","delimiter","replaceAll","RegExp","REGEX_MAP","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","validateEmail","mail","validatePhone","number","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","convertToMillSeconds","interval","timeParts","split","h","m","TxtInput","onChange","required","errors","datatype","description","placeholder","onBlur","readonly","contactForm","max","setError","clearInput","keyDown","isClickable","validation","setvalidation","width","padding","substring","includes","spellCheck","autocapitalize","onKeyDown","preventDefault","validate","val","target","replace","nameTest","autocomplete","onIonBlur","maxlength","minlength","expand","color","DrpdownInput","listValues","selectedName","valueD","setValueD","cancel-text","dropAddress","consigneeName","email","mapConfig","zoomLevel","apiKey","streetViewControl","libraries","gestureHandling","mapTypeControl","fullscreenControl","clickableIcons","JNCenter","lat","lng","JAFZA_NORTH_BOUNDS","north","east","south","west","JSCenter","JAFZA_SOUTH_BOUNDS","JAFZA_SOUTH_POLYGON","JAFZA_NORTH_POLYGON","DUBAI_LOGISTICS_POLYGON","DLCenter","DUBAI_LOGISTICS_BOUNDS","containerStyle","divStyle","fontFamily","maxWidth","React","memo","isLoaded","useJsApiLoader","id","googleMapsApiKey","setMap","center","setCenter","state","setState","showingInfoWindow","address","setAddress","searchBox","setSearchBox","place","setPlace","bounds","mapViewProps","zone","paths","latLng","str","selectedAdd","arr","fst","splice","join","rest","onMarkerClick","options","restriction","latLngBounds","strictBounds","centerChanged","handleError","jafza","window","google","maps","Polygon","geometry","poly","containsLocation","getAddressFromMap","mapContainerStyle","isContainerEdit","args","Geocode","fromLatLng","then","results","formatted_address","add","loc","location","error","ref","onBoundsChanged","onCloseClick","textAlign","onLoad","onPlaceChanged","getPlace","restrictions","country","fillColor","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","AddNewAddress","allZones","setAllZones","errorMessage","setErrorMessage","consigneeContactName","consigneeContactNumber","selectedDropZoneLabel","dropZone","addressNickname","addressLine1","phoneNumber","createMode","errorName","errorMobile","errorDropAddr","errorDropZone","errorNickName","errorAddrLine","errorPhone","mapError","addOrUpdate","newAddress","httpPostCallWithoutHeaderAndWithBody","saveAddress","bookTruck","updateBookTruckContact","updateContainerContact","updateAddress","contact","httpGetCallWithoutHeader","multiLocAndTime","temp","payLoad","containerNumber","containerNum","element","updateMultiAddress","addrObj","updatedAddress","containerList","c","container_number","ctnNumber","cont","request","dpwTransactionId","requestDetailsNumber","booking","bookingDetails","containers","status","cardStatus","JSON","stringify","parse","closeOutline","Utils"],"mappings":"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","file":"static/js/17.12b41fc0.chunk.js","sourcesContent":["import React from \"react\";\nimport { IonIcon } from \"@ionic/react\";\nimport \"./Icon.css\";\nimport { createUseStyles } from \"react-jss\";\n\nexport default function Icon(props: any) {\n  const classes = useStyles();\n  var propsIcon = props.iconProps; // \"inputIcon\"\n  return (\n    <IonIcon\n      src={\"assets/icon/\" + propsIcon.name + \".svg\"}\n      style={propsIcon.styleProps}\n      className={\n        propsIcon.class\n          ? classes[propsIcon.class] + \" \" + propsIcon.class\n          : // : propsIcon.login\n            // ? classes[propsIcon.class]\n            // : propsIcon.slot === \"end\"\n            // ? classes[propsIcon.class]\n            \"\"\n      }\n      slot={propsIcon.slot}\n      onClick={() =>\n        propsIcon?.iconClick\n          ? propsIcon?.iconClick(props.iconName, props.fieldPlaceholder)\n          : console.log()\n      } //{() => console.log(1111)} //{propsIcon?.iconClick}\n    ></IonIcon>\n  );\n}\nconst useStyles = createUseStyles({\n  zoom12: {\n    zoom: 1.4,\n  },\n  // slotEnd: {\n  //   position: \"absolute\",\n  //   right: 0,\n  //   zoom: 1.5,\n  //   bottom: \"1px\",\n  // },\n  slotEnd: {\n    // position: \"absolute\",\n    right: 0,\n    // zoom: 1.5,\n    bottom: \"1px\",\n  },\n  disabledminus: {\n    fontSize: \"1.6rem\",\n    right: \"-5px\",\n    //position: \"absolute\",\n    zoom: 1.5,\n    //bottom: \"1px\",\n  },\n  calenderMargin: {\n    zoom: 1.4,\n    //marginRight: \"0.5rem\",\n  },\n  zoom3: {\n    zoom: 3,\n  },\n  zoom2: {\n    zoom: 2,\n  },\n  slotStart: {\n    position: \"absolute\",\n    zoom: 1.5,\n  },\n  absolutePosition: {\n    position: \"absolute\",\n  },\n  lastIcon: {\n    zoom: \"1.5\",\n    right: \"3px\",\n    position: \"relative\",\n  },\n});\n","import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { closeSharp, informationCircle, search } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClearReduxStore from \"../util/ClearReduxStore\";\r\nimport \"./Header.scss\";\r\nimport Icon from \"./Icon\";\r\nimport Store from \"../redux/Store\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport { loginWithAgent } from \"../services/EndPointApi\";\r\n\r\ninterface HeaderParam {\r\n  label?: string;\r\n  action?: string;\r\n  showAgent?: boolean;\r\n  agentHeader?: boolean;\r\n  customBack?: boolean;\r\n  searchClick?(e: any): void;\r\n  infoClick?(e: any): void;\r\n  checkClick?(e: any): void;\r\n  backClick?(e: any): void;\r\n  locationProps?: any;\r\n  checkedProps?: any;\r\n  customClick?(actionTYpe: string): void;\r\n  changedAgent?(): void;\r\n}\r\nconst Header: React.FC<HeaderParam> = (HeaderParam) => {\r\n  const [actionType, setActionType] = useState({\r\n    search: true,\r\n    check: true,\r\n    close: true,\r\n    home: true,\r\n    info: false,\r\n  });\r\n\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const [checkedLabel, setCheckedLabel] = useState(\"Select All\");\r\n  const backIconProps = {\r\n    name: \"back-arrow\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const homeIconProps = {\r\n    name: \"home-new\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const checkIconProps = {\r\n    name: \"Check\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n\r\n  function checkAndUncheckAll(checked) {\r\n    console.log(checked);\r\n    setChecked(checked);\r\n    if (checked) {\r\n      setCheckedLabel(\"Unselect All\");\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"checked\");\r\n    } else {\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"unchecked\");\r\n      setCheckedLabel(\"Select All\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateActionType(HeaderParam.action ? HeaderParam.action : \"none\");\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  const back = (e: any) => {\r\n    if (HeaderParam.customClick) HeaderParam.customClick(\"/containerCart\");\r\n    else {\r\n      if (HeaderParam.customBack) {\r\n        HeaderParam.backClick(e);\r\n      } else {\r\n        history.goBack();\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateActionType = (myValue: string) => {\r\n    if (myValue) {\r\n      if (myValue === \"search\") {\r\n        setActionType({\r\n          search: false,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"check\") {\r\n        setActionType({\r\n          search: true,\r\n          check: false,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"close\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: false,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"home\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: false,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"info\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function homeButtonClicked() {\r\n    if (HeaderParam.customClick) HeaderParam.customClick(\"/tabs/landing\");\r\n    else {\r\n      history.push(\"/tabs/landing\");\r\n      ClearReduxStore();\r\n    }\r\n  }\r\n\r\n  const selectUserType = async (e: any) => {\r\n    let data = e.detail.value;\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    var result = response.data.data.dataItems[0];\r\n    if (await response.success) {\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        result.user.activeCompanyCode\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n      HeaderParam.changedAgent\r\n        ? HeaderParam.changedAgent()\r\n        : console.log(\"changed\");\r\n    }\r\n  };\r\n\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface\",\r\n  };\r\n\r\n  return (\r\n    <IonHeader\r\n      style={HeaderParam.agentHeader ? { height: \"102px\" } : { height: \"10%\" }}\r\n    >\r\n      <IonToolbar className=\"header\">\r\n        <div\r\n          className=\"mainContainer\"\r\n          style={!HeaderParam.agentHeader ? { paddingBottom: 0 } : {}}\r\n        >\r\n          {HeaderParam.checkedProps ? (\r\n            <div\r\n              className=\"selectAllBg\"\r\n              hidden={!HeaderParam.checkedProps.showChecked}\r\n            >\r\n              <div>\r\n                <IonButton\r\n                  fill=\"clear\"\r\n                  onClick={(e) => {\r\n                    back(e);\r\n                  }}\r\n                >\r\n                  <Icon iconProps={backIconProps} />\r\n                </IonButton>\r\n              </div>\r\n              <div className=\"checkBoxContainer\">\r\n                <IonCheckbox\r\n                  className=\"checkBox\"\r\n                  checked={checked}\r\n                  onIonChange={(e) => checkAndUncheckAll(e.detail.checked)}\r\n                />\r\n              </div>\r\n              <div className=\"checkBoxLabelCol\">\r\n                <IonLabel className=\"checkBoxLabel\">{checkedLabel}</IonLabel>{\" \"}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"backArrow\">\r\n            {HeaderParam.label != \"Home\" && actionType.close ? (\r\n              <IonButton\r\n                fill=\"clear\"\r\n                onClick={(e) => {\r\n                  back(e);\r\n                }}\r\n              >\r\n                <Icon iconProps={backIconProps} />\r\n              </IonButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"header-label\">\r\n            {\" \"}\r\n            <IonText>{HeaderParam.label}</IonText>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <IonButton\r\n              hidden={actionType.search}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.searchClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={search}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.info}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.infoClick}\r\n            >\r\n              <IonIcon\r\n                src={\"assets/icon/\" + \"info-italic\" + \".svg\"}\r\n                slot=\"icon-only\"\r\n                // icon={informationCircle}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n               \r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.check}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.checkClick}\r\n            >\r\n              {/* <IonIcon slot=\"icon-only\" src=\"\" style={{minWidth:'30px'}}/> */}\r\n              <Icon iconProps={checkIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.home}\r\n              fill=\"clear\"\r\n              onClick={(e) => homeButtonClicked()}\r\n            >\r\n              <Icon iconProps={homeIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.close}\r\n              fill=\"clear\"\r\n              onClick={(e) => {\r\n                back(e);\r\n              }}\r\n            >\r\n              <IonIcon slot=\"icon-only\" icon={closeSharp} />\r\n            </IonButton>\r\n            <IonButton hidden={HeaderParam.action !== \"\"} fill=\"clear\">\r\n              <IonIcon />\r\n            </IonButton>\r\n          </div>\r\n        </div>\r\n        {userDetails.agents && HeaderParam.agentHeader && (\r\n          <IonToolbar className=\"agent-code-header\">\r\n            <IonSelect\r\n              value={userDetails.selectedAgent}\r\n              interface=\"popover\"\r\n              onIonChange={(e) => selectUserType(e)}\r\n              disabled={\r\n                !HeaderParam.showAgent || userDetails.agents.length == 1\r\n              }\r\n              style={\r\n                !HeaderParam.showAgent ? { backgroundColor: \"#DDF1FF\" } : {}\r\n              }\r\n              interfaceOptions={agentCodeoptions}\r\n            >\r\n              {userDetails.agents.map((item, index) => {\r\n                return (\r\n                  <IonSelectOption\r\n                    value={item}\r\n                    key={index}\r\n                    className=\"select-agent-opt\"\r\n                  >\r\n                    {item.agentCode + \"-\" + item.agentName}\r\n                  </IonSelectOption>\r\n                );\r\n              })}\r\n            </IonSelect>\r\n            <IonIcon\r\n              src=\"assets/icon/arrow-down.svg\"\r\n              className=\"arrow-down-icon\"\r\n              hidden={!HeaderParam.showAgent || userDetails.agents.length == 1}\r\n            />\r\n          </IonToolbar>\r\n        )}\r\n        {/* </IonImg> */}\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  );\r\n};\r\nexport default Header;\r\n","import Store from \"../redux/Store\";\nimport * as LoginUserTypes from \"../redux/actionTypes/AllActionTypes\";\n\nexport default function ClearReduxStore() {\n  Store.dispatch({ type: LoginUserTypes.BOOK_TRUCK_CLEAR });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_CONTAINERS });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_TRUCK });\n  Store.dispatch({ type: LoginUserTypes.CLEAR_CART });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_DECLARATIONS });\n}\n","import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number,length) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{\"+length+\"}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n","import { IonButton, IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport {\r\n  getPatternValue,\r\n  isValid,\r\n  validateEmail,\r\n  validateMobile,\r\n} from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n  setError?: any;\r\n  clearInput?: boolean;\r\n  keyDown? : any;\r\n  isClickable?:any\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n  setError,\r\n  clearInput,\r\n  keyDown,\r\n  isClickable\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  //const [error, seterror] = useState(\"\");\r\n  const checkKey = (e) => {\r\n    if(keyDown){\r\n      keyDown(e)\r\n    }\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (type === \"tel\" && setError) {\r\n      val = \"971\" + val.replace(/\\s/g, \"971\");\r\n      var nameTest = validateMobile(val, max * 1 + 3);\r\n      console.log(nameTest);\r\n      if (val != null) {\r\n        if (!nameTest) {\r\n          setError(\"Please Enter \" + max + \" digit number\");\r\n        } else {\r\n          setError(\"\");\r\n        }\r\n      }\r\n      console.log(\"tteeeelll\", val);\r\n    }\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      if (!validate) {\r\n        setError(\"Please Enter valid Mail id\");\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      console.log(validate);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={\r\n            type === \"tel\" && value?.substring(0, 3).includes(\"971\")\r\n              ? value.split(\"971\")[1]\r\n              : value\r\n          }\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={clearInput}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          minlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {!isClickable && icon && (\r\n            <Icon\r\n              iconProps={icon}\r\n              iconName={name}\r\n              fieldPlaceholder={placeholder}\r\n            />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n        {isClickable && icon &&(\r\n          <IonButton\r\n\r\n          className=\"icon-button\"\r\n\r\n          expand=\"full\"\r\n\r\n          fill=\"clear\"\r\n\r\n          onClick={() => icon.iconClick(name, placeholder)}\r\n\r\n        >\r\n\r\n          <Icon\r\n\r\n            iconProps={icon}\r\n\r\n            iconName={name}\r\n\r\n            fieldPlaceholder={placeholder}\r\n\r\n          />\r\n\r\n        </IonButton>\r\n        )}\r\n\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n","import {\r\n  IonIcon,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { addCircle } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./DrpdownInput.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface DrpDownInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type?: any;\r\n  value?: any;\r\n  onChange: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: any;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  listValues?: Array<any>;\r\n  disabled?: any;\r\n  selectedName?: any;\r\n}\r\nconst DrpdownInput: React.FC<DrpDownInputProps> = ({\r\n  label,\r\n  name,\r\n  value,\r\n  onChange,\r\n  errors,\r\n  description,\r\n  placeholder,\r\n  listValues,\r\n  disabled,\r\n  selectedName,\r\n  type,\r\n}) => {\r\n  // const [selectedName, setselectedName] = useState();\r\n  const [valueD, setValueD] = useState({});\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    setValueD({ label: selectedName, value: value });\r\n  }, []);\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    setValueD(val);\r\n    if (val === \"addAddress\") {\r\n      history.push(\"/addAddress\");\r\n    } else {\r\n      onChange(e, val);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    cssClass: \"my-custom-interface\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-element-group\">\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        <IonSelect\r\n          // selectedText={selectedName}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value || valueD}\r\n          onIonChange={onInpChange}\r\n          cancel-text\r\n          interface=\"popover\"\r\n          className=\"dropdownInput\"\r\n          interfaceOptions={options}\r\n        >\r\n          {type === \"address\" && (\r\n            <IonSelectOption value=\"addAddress\" class=\"selectAddAddr\">\r\n              Add new Address\r\n              {/* <IonIcon icon={addCircle} className=\"addIcon\" /> */}\r\n              <img src=\"/assets/icon/eye.svg\" />\r\n            </IonSelectOption>\r\n          )}\r\n          {listValues?.map((item, index) =>\r\n            type === \"address\" ? (\r\n              <IonSelectOption key={index} value={item}>\r\n                {item.dropAddress}\r\n                {item.consigneeName} {item.dropAddress}\r\n                {item.email}\r\n              </IonSelectOption>\r\n            ) : (\r\n              <IonSelectOption key={index} value={item.value}>\r\n                {item.label}\r\n              </IonSelectOption>\r\n            )\r\n          )}\r\n        </IonSelect>\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start\">{errors}</IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {/* {validation && description && ( */}\r\n      <IonText color=\"danger\" className=\"validation-message\">\r\n        <IonLabel className=\"ion-padding-start\">{description}</IonLabel>\r\n      </IonText>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrpdownInput;\r\n","export const versionContaner = {\n  version: \"0.1.3\",\n  copyRight: \"© 2021 Dubai Trade. All rights reserved\",\n};\nexport const mapConfig = {\n  zoomLevel: 13,\n  apiKey: \"AIzaSyAECHNsbM59mna4pUyxIqnlvwQhLagQggo\",\n  streetViewControl: false,\n  libraries: [\"places\", \"geometry\"],\n  gestureHandling: \"auto\",\n  mapTypeControl: false,\n  fullscreenControl: false,\n  clickableIcons: false,\n  JNCenter: {\n    lat: 24.976058892135036,\n    lng: 55.07128661431274,\n  },\n  // 24.976975283540035, 55.02450589716892\n  JAFZA_NORTH_BOUNDS: {\n    north: 25.05071092660886,\n    east: 55.09950589716892,\n    south: 24.927416355905556,\n    west: 55.0251050292724,\n  },\n  JSCenter: {\n    lat: 24.955775393136697,\n    lng: 55.10412611094269,\n  },\n  JAFZA_SOUTH_BOUNDS: {\n    north: 24.987009322019357,\n    east: 55.142369395592446,\n    south: 24.918124884693306,\n    west: 55.06532233720033,\n  },\n  JAFZA_SOUTH_POLYGON: [\n    { lat: 24.918335082992616, lng: 55.1033979291419 },\n    { lat: 24.94213373197022, lng: 55.06720657322788 },\n    { lat: 24.946263828363616, lng: 55.06703036010413 },\n    { lat: 24.948392439546705, lng: 55.06788103546015 },\n    { lat: 24.953249434538826, lng: 55.07643985527741 },\n    { lat: 24.975549509728268, lng: 55.090572455964974 },\n    { lat: 24.9869169211042, lng: 55.09343349544909 },\n    { lat: 24.975480186080222, lng: 55.14252865180429 },\n    { lat: 24.963466811096875, lng: 55.13932517766653 },\n    { lat: 24.94595783596617, lng: 55.13099960083531 },\n    { lat: 24.932649349869404, lng: 55.120356595210446 },\n  ],\n  JAFZA_NORTH_POLYGON: [\n    { lat: 24.947399858378372, lng: 55.06204002619259 },\n    { lat: 24.95075067106685, lng: 55.06953127397344 },\n    { lat: 24.955731440118914, lng: 55.076722872514516 },\n    { lat: 24.97619575795202, lng: 55.08960781962606 },\n    { lat: 25.011321248744338, lng: 55.09639988512211 },\n    { lat: 25.0242943464765, lng: 55.076822756723956 },\n    { lat: 25.023236507938392, lng: 55.07457130064973 },\n    { lat: 25.042276206761077, lng: 55.06698306019625 },\n    { lat: 25.04907538290263, lng: 55.05997853018756 },\n    { lat: 25.050737346389916, lng: 55.05589255434915 },\n    { lat: 25.040236380403357, lng: 55.038464616589415 },\n    { lat: 25.035476653635737, lng: 55.03412847896498 },\n    { lat: 25.01930731340362, lng: 55.044218337784784 },\n    { lat: 25.019836250743058, lng: 55.04646979385902 },\n    { lat: 25.01885393672736, lng: 55.04688673016905 },\n    { lat: 25.01832499515555, lng: 55.04646979385902 },\n    { lat: 25.00692286222223, lng: 55.05111738747818 },\n    { lat: 25.006620580806654, lng: 55.052118034622275 },\n    { lat: 25.00556258999415, lng: 55.05245158367031 },\n    { lat: 25.002993145798893, lng: 55.0502835148581 },\n    { lat: 24.996418146855707, lng: 55.05303529450437 },\n    { lat: 24.99452871426998, lng: 55.055036588792575 },\n    { lat: 25.00850982744932, lng: 55.07171404119423 },\n    { lat: 25.00473130510606, lng: 55.07563324250862 },\n    { lat: 24.98886024189255, lng: 55.05762159414407 },\n    { lat: 24.98190655922737, lng: 55.060456761052336 },\n    { lat: 24.99755179212295, lng: 55.07905212048019 },\n    { lat: 24.994831025095074, lng: 55.08172051286446 },\n    { lat: 24.972457990426506, lng: 55.05578707463507 },\n    { lat: 24.974272171875437, lng: 55.05270174594076 },\n    { lat: 24.973365084495175, lng: 55.051701098796656 },\n    { lat: 24.97601073732519, lng: 55.04911609367441 },\n    { lat: 24.98130904391133, lng: 55.05490174753818 },\n    { lat: 25.001186558202235, lng: 55.04672979628523 },\n    { lat: 25.00284917032546, lng: 55.043477693066905 },\n    { lat: 25.017282720741083, lng: 55.03722364841628 },\n    { lat: 25.0205380783843, lng: 55.03859011018785 },\n    { lat: 25.017288874447768, lng: 55.03675559042367 },\n    { lat: 24.99695776268485, lng: 55.04504074434748 },\n    { lat: 24.993254463749036, lng: 55.03670201814665 }, // missed1 maktoum palace\n    { lat: 24.99260383481455, lng: 55.03433101556131 },\n    { lat: 24.99211404744376, lng: 55.030732463527265 },\n    { lat: 24.990405298530447, lng: 55.02823014859448 },\n    { lat: 24.98994860232446, lng: 55.02650695257742 },\n    { lat: 24.99001170061265, lng: 55.025532334360214 },\n    { lat: 24.98874972869547, lng: 55.02560194994716 },\n    { lat: 24.988560431790532, lng: 55.02351348233886 }, // missed 2\n    { lat: 24.989547069672607, lng: 55.022952344176026 },\n    { lat: 24.98689690366748, lng: 55.01884502454637 },\n    { lat: 24.98422074682548, lng: 55.02004801045847 },\n    { lat: 24.984371915176553, lng: 55.02163236843662 },\n    { lat: 24.983706653540043, lng: 55.02213274337374 },\n    { lat: 24.98273765892748, lng: 55.02191197942521 },\n    { lat: 24.97684704235023, lng: 55.02460652146162 },\n    { lat: 24.97791982314296, lng: 55.033656547764245 },\n    { lat: 24.966761668353683, lng: 55.04155976774015 },\n  ],\n  DUBAI_LOGISTICS_POLYGON: [\n    { lat: 24.92657886128531, lng: 55.114480584834986 },\n    { lat: 24.916615522637652, lng: 55.13473662731599 },\n    { lat: 24.89871062609297, lng: 55.16683730480709 },\n    { lat: 24.866475267632595, lng: 55.14537963268737 },\n    { lat: 24.887499281620347, lng: 55.10692748424884 },\n    { lat: 24.891703655092485, lng: 55.101605981563154 },\n    { lat: 24.904938710873477, lng: 55.09182128307656 },\n    { lat: 24.907118466294715, lng: 55.0916496216996 },\n    { lat: 24.910232335815788, lng: 55.092336267207436 },\n    { lat: 24.917705302010063, lng: 55.10606917736405 },\n  ],\n  DLCenter: {\n    lat: 24.90395704901777,\n    lng: 55.11047067951147,\n  },\n  DUBAI_LOGISTICS_BOUNDS: {\n    north: 24.92657886128531,\n    east: 55.16683730480709,\n    south: 24.866475267632595,\n    west: 55.0916496216996,\n  },\n};\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useJsApiLoader,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n  Autocomplete,\r\n  Polygon,\r\n} from \"@react-google-maps/api\";\r\nimport { mapConfig } from \"./../util/Config\";\r\nimport Geocode from \"react-geocode\";\r\nimport \"./MapView.scss\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst divStyle = {\r\n  color: \"#434343\",\r\n  fontFamily: \"Dubai\",\r\n  fontSize: 14,\r\n  maxWidth: \"200px\",\r\n};\r\n\r\nfunction MapView(props) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: mapConfig.apiKey,\r\n    libraries: mapConfig.libraries,\r\n  });\r\n  const [map, setMap] = useState(null);\r\n  const [center, setCenter] = useState(mapConfig.JNCenter);\r\n  const [state, setState] = useState({ showingInfoWindow: false });\r\n  const [address, setAddress] = useState(props.address);\r\n  const [searchBox, setSearchBox] = useState();\r\n  const [place, setPlace] = useState();\r\n  const bounds =\r\n    props.mapViewProps.zone === \"JAFZAN\"\r\n      ? mapConfig.JAFZA_NORTH_BOUNDS\r\n      : props.mapViewProps.zone === \"JAFZAS\"\r\n      ? mapConfig.JAFZA_SOUTH_BOUNDS\r\n      : mapConfig.DUBAI_LOGISTICS_BOUNDS;\r\n\r\n  const paths =\r\n    props.mapViewProps.zone === \"JAFZAN\"\r\n      ? mapConfig.JAFZA_NORTH_POLYGON\r\n      : props.mapViewProps.zone === \"JAFZAS\"\r\n      ? mapConfig.JAFZA_SOUTH_POLYGON\r\n      : mapConfig.DUBAI_LOGISTICS_POLYGON;\r\n\r\n  useEffect(() => {\r\n    if (props.mapViewProps.latLng) setCenter(props.mapViewProps.latLng);\r\n    else if (props.mapViewProps.zone == \"JAFZAS\") setCenter(mapConfig.JSCenter);\r\n    else if (props.mapViewProps.zone == \"JAFZAN\") setCenter(mapConfig.JNCenter);\r\n    else if (props.mapViewProps.zone == \"DUBAIS\") setCenter(mapConfig.DLCenter);\r\n    else setCenter(mapConfig.DLCenter);\r\n    var str = props.mapViewProps.selectedAdd;\r\n    if(str?.includes(\",\")) {\r\n      var arr = str?.split(\",\");\r\n      var fst = arr?.splice(0,1).join(\"\");\r\n      var rest = arr?.join(\",\");\r\n      setAddress(rest);\r\n      setPlace(fst);\r\n    } else {\r\n      setAddress(str);\r\n      setPlace(\"\");\r\n    }\r\n    \r\n  }, [props.mapViewProps]);\r\n\r\n  const handleMapClick = (...args) => {\r\n    if (centerChanged(args[0].latLng)) {\r\n      setCenter({\r\n        lat: args[0].latLng.lat(),\r\n        lng: args[0].latLng.lng(),\r\n      });\r\n      console.log(\"onClick args: \", args);\r\n      setPlace();\r\n      console.log(\"mapref\", map);\r\n      Geocode.fromLatLng(\r\n        args[0].latLng.lat(),\r\n        args[0].latLng.lng(),\r\n        mapConfig.apiKey\r\n      ).then(\r\n        (response) => {\r\n          console.log(\"map\", response);\r\n          const address = response.results[0].formatted_address;\r\n          console.log(\"formatted_address :: \" + address);\r\n          setAddress(address);\r\n          props.mapViewProps.getAddressFromMap({add: address, loc: response.results[0].geometry.location});\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const onMarkerClick = (e) => {\r\n    console.log(\"marker\", e);\r\n    setState({\r\n      showingInfoWindow: !state.showingInfoWindow,\r\n    });\r\n  };\r\n\r\n  const options = {\r\n    restriction: {\r\n      latLngBounds: bounds,\r\n      strictBounds: false,\r\n    },\r\n    streetViewControl: mapConfig.streetViewControl,\r\n    mapTypeControl: mapConfig.mapTypeControl,\r\n    fullscreenControl: mapConfig.fullscreenControl,\r\n    clickableIcons: mapConfig.clickableIcons,\r\n    zoom: mapConfig.zoomLevel,\r\n  };\r\n\r\n  const onLoad = (autocomplete) => {\r\n    console.log(\"autocomplete: \", autocomplete);\r\n    setSearchBox(autocomplete);\r\n  };\r\n\r\n  const onPlaceChanged = () => {\r\n    if (searchBox !== null) {\r\n      console.log(\"autocomplete\", searchBox.getPlace());\r\n      if (centerChanged(searchBox.getPlace().geometry.location)) {\r\n        setCenter({\r\n          lat: searchBox.getPlace().geometry.location.lat(),\r\n          lng: searchBox.getPlace().geometry.location.lng(),\r\n        });\r\n        const address = searchBox.getPlace().formatted_address;\r\n        const place = searchBox.getPlace().name;\r\n        setAddress(address);\r\n        setPlace(place);\r\n        console.log(place + \", \" + address);\r\n        props.mapViewProps.getAddressFromMap({add: place + \", \" + address, loc: searchBox.getPlace().geometry.location});\r\n      }\r\n    } else {\r\n      console.log(\"Autocomplete is not loaded yet!\");\r\n    }\r\n  };\r\n\r\n  const centerChanged = (latLng) => {\r\n    props.mapViewProps.handleError(\"\");\r\n    const jafza = new window.google.maps.Polygon({\r\n      paths: paths,\r\n    });\r\n    if (window.google.maps.geometry.poly.containsLocation(latLng, jafza))\r\n      return true;\r\n    else {\r\n      setAddress(\"\");\r\n      setPlace(\"\");\r\n      props.mapViewProps.getAddressFromMap(\"\");\r\n      props.mapViewProps.handleError(\"Location is outside of selected zone\");\r\n    }\r\n  };\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      id=\"map-view\"\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={12}\r\n      onClick={\r\n        !props.mapViewProps.isContainerEdit ? handleMapClick: {}\r\n      }\r\n      ref={(ref) => {\r\n        setMap(ref);\r\n      }}\r\n      options={options}\r\n      onBoundsChanged={(e) => console.log(\"bounds\", e)}\r\n    >\r\n      <Marker position={center} onClick={onMarkerClick}>\r\n        {state.showingInfoWindow && (\r\n          <InfoWindow position={center} onCloseClick={onMarkerClick}>\r\n            <div style={divStyle}>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <b>\r\n                  <u>{place}</u>\r\n                </b>\r\n              </div>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                {address\r\n                  ? address\r\n                  : props.mapViewProps.zone === \"JAFZAN\"\r\n                  ? \"JAFZA North Area\"\r\n                  : props.mapViewProps.zone === \"JAFZAS\"\r\n                  ? \"JAFZA South Area\"\r\n                  : \"Dubai Logistics City\"}\r\n              </div>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </Marker>\r\n      {!props.mapViewProps.isContainerEdit && <div>\r\n        <Autocomplete\r\n          onLoad={onLoad}\r\n          onPlaceChanged={onPlaceChanged}\r\n          bounds={bounds}\r\n          restrictions={{ country: \"ae\" }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className=\"auto-complete-input\"\r\n            placeholder=\"Search Location Here\"\r\n          />\r\n        </Autocomplete>\r\n      </div> }\r\n      <Polygon\r\n        paths={paths}\r\n        options={{\r\n          fillColor: \"transparent\",\r\n          strokeColor: \"rgb(5 33 95)\",\r\n          strokeOpacity: 1,\r\n          strokeWeight: 1,\r\n          clickable: false,\r\n          draggable: false,\r\n          editable: false,\r\n          geodesic: false,\r\n          zIndex: 1,\r\n        }}\r\n      />\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(MapView);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { IonPage, IonLabel, IonCard, IonIcon } from \"@ionic/react\";\r\nimport Store from \"../../../redux/Store\";\r\nimport Header from \"../../../components/Header\";\r\nimport TxtInput from \"../../../components/txtinput/TxtInput\";\r\nimport MapView from \"../../MapView\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport DropDownInput from \"../../../components/dropdownInput/DrpdownInput\";\r\nimport * as Utils from \"../../../util/Utilities\";\r\nimport { closeOutline } from \"ionicons/icons\";\r\n//import * as reduxActions from \"../../redux/actionTypes/AllActionTypes\";\r\nimport {\r\n  httpGetCallWithoutHeader,\r\n  httpPostCallWithoutHeaderAndWithBody,\r\n} from \"../../../services/EndPointApi\";\r\nimport * as reduxActions from \"../../../redux/actions/AllActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./AddNewAddress.scss\";\r\n\r\nexport default function AddNewAddress(props: any) {\r\n  console.log(\"AddNewAddress\",props)\r\n  let history = useHistory();\r\n  const [allZones, setAllZones] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [address, setAddress] = useState<any>({\r\n    consigneeContactName: \"\",\r\n    consigneeContactNumber: \"\",\r\n    dropAddress: \"\",\r\n    selectedDropZoneLabel: \"Jafza North\",\r\n    dropZone: \"JAFZAN\",\r\n    addressNickname: \"\",\r\n    addressLine1: \"\",\r\n    phoneNumber: \"\",\r\n    createMode: true,\r\n    latLng: \"\",\r\n  });\r\n  const [error, setError] = useState({\r\n    errorName: \"\",\r\n    errorMobile: \"\",\r\n    errorDropAddr: \"\",\r\n    errorDropZone: \"\",\r\n    errorNickName: \"\",\r\n    errorAddrLine: \"\",\r\n    errorPhone: \"\",\r\n    mapError: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    var add;\r\n    console.log(\"props\", props.history.location.state);\r\n    if (props.history.location.state?.isContainerEdit) {\r\n      add = props.history.location.state?.contact;\r\n      setAddress(add);\r\n    } else {\r\n      props.history.location.state\r\n        ? setAddress(props.history.location.state)\r\n        : setAddress(address);\r\n    }\r\n\r\n    var response = httpGetCallWithoutHeader(EndPointURL.allZone);\r\n    response.then((result) => {\r\n      if (result?.success) {\r\n        // if(props.history.location.state?.isContainerEdit) {\r\n        //     var dZ = result.data.data.dataItems.find((element) => {\r\n        //         return element.value === add.dropZone;\r\n        //       });\r\n        //     console.log(\"DZ\", dZ);\r\n        //     add.selectedDropZoneLabel = dZ.label;\r\n        //     console.log(add);\r\n        //     setAddress(add);\r\n        // }\r\n\r\n        setAllZones(result?.data?.data?.dataItems);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  function getZone(e: any, value: any) {\r\n    console.log(e.target.name, e.target.value, e.target.label);\r\n    console.log(e.target.name, value);\r\n    setError({\r\n      ...error,\r\n      errorDropZone: \"\",\r\n    });\r\n    setAddress({\r\n      ...address,\r\n      dropZone: value,\r\n      selectedDropZoneLabel: e.target.label,\r\n      dropAddress: \"\",\r\n      latLng: \"\",\r\n    });\r\n    console.log(\"add\", address);\r\n  }\r\n\r\n  function handlePhoneNumber(e: any, value: any) {\r\n    setAddress({\r\n      ...address,\r\n      phoneNumber: value ? \"971\" + value * 1 : \"\",\r\n    });\r\n    var nameTest = Utils.validatePhone(value);\r\n    if (value) {\r\n      if (!nameTest) {\r\n        setError({\r\n          ...error,\r\n          errorPhone: \"Please Enter 8 digit number\",\r\n        });\r\n      } else {\r\n        setError({\r\n          ...error,\r\n          errorPhone: \"\",\r\n        });\r\n      }\r\n      setErrorMessage(\"\");\r\n    }\r\n  }\r\n\r\n  function handleContactName(e: any, value: any) {\r\n    setAddress({\r\n      ...address,\r\n      consigneeContactName: value,\r\n    });\r\n    setError({\r\n      ...error,\r\n      errorName: \"\",\r\n    });\r\n  }\r\n\r\n  function handleMobileNumber(e: any, value: any) {\r\n    setAddress({\r\n      ...address,\r\n      consigneeContactNumber: value ? \"971\" + value * 1 : \"\",\r\n    });\r\n    var nameTest = Utils.validateMobile(value, 9);\r\n    if (value) {\r\n      if (!nameTest) {\r\n        setError({\r\n          ...error,\r\n          errorMobile: \"Please Enter 9 digit number\",\r\n        });\r\n      } else {\r\n        setError({\r\n          ...error,\r\n          errorMobile: \"\",\r\n        });\r\n      }\r\n      setErrorMessage(\"\");\r\n    }\r\n  }\r\n\r\n  function handleLandMark(e: any, value: any) {\r\n    setAddress({\r\n      ...address,\r\n      addressLine1: value,\r\n    });\r\n    setError({\r\n      ...error,\r\n      errorAddrLine: \"\",\r\n    });\r\n  }\r\n\r\n  function handleAddressNickName(e: any, value: any) {\r\n    setAddress({\r\n      ...address,\r\n      addressNickname: value,\r\n    });\r\n    setError({\r\n      ...error,\r\n      errorNickName: \"\",\r\n    });\r\n  }\r\n\r\n  function addOrUpdate() {\r\n    var validate = true;\r\n    for (var key in address) {\r\n      if (\r\n        (address[key] === \"\" ||\r\n          address[key] === null ||\r\n          address[key] === \"9710\") &&\r\n        key != \"isActive\"\r\n      ) {\r\n        if (key != \"addressLine1\") {\r\n          validate = false;\r\n          if (key == \"consigneeContactName\") {\r\n            error.errorName = \"Contact Name is blank\";\r\n          }\r\n          if (key == \"dropAddress\" || key == \"latLng\") {\r\n            error.errorDropAddr = \"Drop address is blank\";\r\n          }\r\n          if (key == \"dropZone\") {\r\n            error.errorDropZone = \"Drop Zone is blank\";\r\n          }\r\n          if (key == \"addressNickname\") {\r\n            error.errorNickName = \"Nick name is blank\";\r\n          }\r\n          if (key == \"consigneeContactNumber\") {\r\n            error.errorMobile = \"Mobile Number is blank\";\r\n          }\r\n          if (key == \"phoneNumber\") {\r\n            error.errorPhone = \"Phone Number is blank\";\r\n          }\r\n          setError({ ...error });\r\n          setErrorMessage(\"Please Fill all the fields\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (validate) {\r\n      if (address.createMode) {\r\n        saveAddress();\r\n      } else {\r\n        props.history.location.state.bookTruck\r\n          ? updateBookTruckContact()\r\n          : props.history.location.state.isContainerEdit\r\n          ? updateContainerContact()\r\n          : updateAddress();\r\n        // props.history.location.state.isContainerEdit\r\n        //   ? updateContainerContact()\r\n        //   : props.history.location.state.bookTruck\r\n        //   ? updateBookTruckContact()\r\n        //   : updateAddress();\r\n      }\r\n    }\r\n  }\r\n  const updateBookTruckContact = () => {\r\n    if (!props.history.location.state.bookTruck.multiLocAndTime) {\r\n      var temp = address;\r\n      var addrObj = { ...temp, address: address };\r\n      var updatedAddress = reduxActions.bookTruckUpdateAddress(addrObj);\r\n      if (updatedAddress) Store.dispatch(updatedAddress);\r\n    } else {\r\n      var temp = address;\r\n      var payLoad = {\r\n        containerNumber: props.history.location.state.bookTruck.containerNum,\r\n        element: { ...temp, address: address },\r\n      };\r\n\r\n      var updateMultiAddress = reduxActions.booktruckUpdateOtherData(payLoad);\r\n      if (updateMultiAddress) Store.dispatch(updateMultiAddress);\r\n    }\r\n    history.push(\"/bookTruckTab/location\");\r\n  };\r\n  const updateContainerContact = async () => {\r\n    var data = props.history.location.state;\r\n    data.containerList.map((c) => {\r\n      if (c.container_number == address.ctnNumber) {\r\n        c.consigneeContactName = address.consigneeContactName;\r\n        c.addressLine1 = address.addressLine1;\r\n        c.phoneNumber = address.phoneNumber;\r\n        c.consigneeContactNumber = address.consigneeContactNumber;\r\n      }\r\n    });\r\n    var cont = data.containerList;\r\n    var request = {\r\n      consigneeContactNumber: address.consigneeContactNumber,\r\n      phoneNumber: address.phoneNumber,\r\n      addressLine1: address.addressLine1,\r\n      consigneeContactName: address.consigneeContactName,\r\n      container_number: address.ctnNumber,\r\n      dpwTransactionId: address.dpwTransactionId,\r\n      requestDetailsNumber: address.requestDetailsNumber,\r\n    };\r\n    let response = await httpPostCallWithoutHeaderAndWithBody(\r\n      EndPointURL.contacDetailsUpdateUrl,\r\n      request\r\n    );\r\n    if (await response.success) {\r\n      console.log(\"bookingData\", data.booking);\r\n      let booking = {\r\n        // booking: data.booking?.booking,\r\n        // bookingNumber : data.booking.bookingNumber,\r\n        bookingDetails : data.bookingDetails,\r\n        containers: cont,\r\n        userType: data.booking?.userType,\r\n        // status: data.booking?.status,\r\n        status: data.booking?.cardStatus,\r\n      };\r\n      history.push(\"/containerDetails\", booking);\r\n    }\r\n  };\r\n\r\n  function updateAddress() {\r\n    let newAddress = address;\r\n    var response = httpPostCallWithoutHeaderAndWithBody(\r\n      EndPointURL.updateAddress,\r\n      newAddress\r\n    );\r\n    response.then((result) => {\r\n      if (result.success) {\r\n        var address = reduxActions.updateAddress(newAddress);\r\n        if (address) Store.dispatch(address);\r\n        props.history.goBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  function saveAddress() {\r\n    let newAddress = address;\r\n    var response = httpPostCallWithoutHeaderAndWithBody(\r\n      EndPointURL.addAddress,\r\n      newAddress\r\n    );\r\n    response.then((result) => {\r\n      if (result.success) {\r\n        var address = reduxActions.addAddress(newAddress);\r\n        if (address) Store.dispatch(address);\r\n        props.history.goBack();\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleAddress(e: any) {\r\n    console.log(\"loc\", JSON.stringify(e.loc));\r\n    setAddress({\r\n      ...address,\r\n      dropAddress: e.add,\r\n      latLng: JSON.stringify(e.loc),\r\n    });\r\n    setError({\r\n      ...error,\r\n      errorDropAddr: \"\",\r\n    });\r\n  }\r\n\r\n  const mapViewProps = {\r\n    getAddressFromMap: handleAddress,\r\n    zone: address.dropZone,\r\n    latLng: address.latLng ? JSON.parse(address.latLng) : address.latLng,\r\n    selectedAdd: address.dropAddress,\r\n    isContainerEdit: props.history.location.state?.isContainerEdit,\r\n    handleError: (e) => {\r\n      setError({\r\n        ...error,\r\n        mapError: e,\r\n      });\r\n    },\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <Header\r\n        label={address.createMode ? \"Add address\" : \"Edit Address\"}\r\n        action=\"check\"\r\n        checkClick={() => {\r\n          addOrUpdate();\r\n        }}\r\n      />\r\n      <IonCard className=\"mapCard\">\r\n        <MapView mapViewProps={mapViewProps} />\r\n      </IonCard>\r\n      <IonLabel className=\"redColor\" hidden={error.mapError == \"\"}>\r\n        {error.mapError}\r\n        <IonIcon\r\n          icon={closeOutline}\r\n          slot=\"icon-only\"\r\n          className=\"closeIconMap\"\r\n          onClick={() => {\r\n            setError({\r\n              ...error,\r\n              mapError: \"\",\r\n            });\r\n          }}\r\n        />\r\n      </IonLabel>\r\n      <IonLabel className=\"redColor\" hidden={errorMessage == \"\"}>\r\n        {errorMessage}\r\n      </IonLabel>\r\n      <IonCard className=\"scrollCard\">\r\n        <DropDownInput\r\n          name={\"dropZone\"}\r\n          value={address.dropZone}\r\n          label=\"Zone\"\r\n          errors={error.errorDropZone}\r\n          type=\"text\"\r\n          required={true}\r\n          onChange={getZone}\r\n          datatype=\"TEXT\"\r\n          placeholder=\"Zone\"\r\n          listValues={allZones}\r\n          selectedName={address.selectedDropZoneLabel}\r\n          disabled={props.history.location.state?.isContainerEdit}\r\n        />\r\n        <TxtInput\r\n          name={\"dropAddress\"}\r\n          value={address.dropAddress}\r\n          label=\"Drop Address\"\r\n          errors={error.errorDropAddr}\r\n          type=\"text\"\r\n          required={true}\r\n          readonly={true}\r\n          datatype=\"TEXT\"\r\n          placeholder=\"Select Location\"\r\n        />\r\n        <TxtInput\r\n          name={\"addressLine1\"}\r\n          value={address.addressLine1}\r\n          label=\"Addresss Line 1\"\r\n          errors={error.errorAddrLine}\r\n          type=\"text\"\r\n          required={true}\r\n          readonly={props.history.location.state?.isContainerEdit}\r\n          onChange={handleLandMark}\r\n          datatype=\"TEXT\"\r\n          placeholder=\"Addresss Line 1\"\r\n        />\r\n        {!props.history.location.state?.isContainerEdit && (\r\n          <TxtInput\r\n            name={\"nickName\"}\r\n            value={address.addressNickname}\r\n            label=\"Nick Name\"\r\n            errors={error.errorNickName}\r\n            type=\"text\"\r\n            required={true}\r\n            onChange={handleAddressNickName}\r\n            datatype=\"TEXT\"\r\n            placeholder=\"Nick Name\"\r\n          />\r\n        )}\r\n        <TxtInput\r\n          name={\"contactName\"}\r\n          value={address.consigneeContactName}\r\n          label=\"Contact Person\"\r\n          errors={error.errorName}\r\n          type=\"text\"\r\n          required={true}\r\n          onChange={handleContactName}\r\n          datatype=\"TEXT\"\r\n          placeholder=\"Contact Person\"\r\n        />\r\n        <TxtInput\r\n          name={\"mobileNumber\"}\r\n          value={\r\n            address?.consigneeContactNumber?.split(\"971\")[1]\r\n              ? address?.consigneeContactNumber?.split(\"971\")[1]\r\n              : address.consigneeContactNumber\r\n          }\r\n          label=\"Mobile Number\"\r\n          errors={error.errorMobile}\r\n          type=\"tel\"\r\n          required={true}\r\n          onChange={handleMobileNumber}\r\n          datatype=\"TEXT\"\r\n          placeholder=\"Mobile Number\"\r\n          max={9}\r\n        />\r\n\r\n        <TxtInput\r\n          name={\"phoneNumber\"}\r\n          value={\r\n            address.phoneNumber?.split(\"971\")[1]\r\n              ? address?.phoneNumber?.split(\"971\")[1]\r\n              : address.phoneNumber\r\n          }\r\n          label=\"Phone Number\"\r\n          errors={error.errorPhone}\r\n          type=\"tel\"\r\n          required={true}\r\n          onChange={handlePhoneNumber}\r\n          datatype=\"TEXT\"\r\n          placeholder=\"Phone Number\"\r\n          max={8}\r\n        />\r\n      </IonCard>\r\n    </IonPage>\r\n  );\r\n}\r\n"],"sourceRoot":""}